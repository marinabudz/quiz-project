%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: chatbot_6.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For:  
%%CreationDate: 7/23/2018
%%BoundingBox: 0 0 634 464
%%HiResBoundingBox: 0 0 633.2420 463.7114
%%CropBox: 0 0 633.2420 463.7114
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.0 x243 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">education_palette</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-07-23T16:48:31+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-07-23T16:48:31+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-07-23T16:48:31+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>188</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAvAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q4kAVJoB1JxVCXGp2&#xA;8LBd3JFfhoRlsMJki18WoWkhVVejN0Ugj6PDBLFILaIytLsVdirsVeWeef8AnIXyn5a1CXTLOCTW&#xA;NQt2KXKwsI4Y3XZkMrBqsD14qR712zOw6CcxZ2DZHGSs8j/85D+VfMmoxaZfW0mjX1wwS29VxLA7&#xA;tsE9UBOLE9OSgHxrjm0EoCxuFljIerZgtbsVdirsVdirsVdirsVdiqGvrpoIxxFXbpXtTLMcOIoJ&#xA;S1728dSrSbHrQAfqzJGOI6ItRiaSJw6GjDJyoiihMk1UFwGjoviDU/qzHODzZWj8x0uxV2KuxV2K&#xA;uxV2KodtQtFbiZN/EAkfflgxS7kWrqysoZTUHoRlZCW8VQuowyTQBY9yGBI8RluKQB3QUs+oXP8A&#xA;vs5k+LHvRS6PTrkuBwK7/aPbAcsVpO8wmTsVdirzT82fzBvbC2ufL3loNca/JbySXEkO5toVjLM1&#xA;R9mTiKj+Ub+GbLRaQEeJP6Ry8y244dS+RiSSSTUnqc3De4Eggg0I3BGKvunyPe3l/wCTNCvb2pu7&#xA;nT7aWdm3LO8Kksf9atc5nMAJkDvcSXNO8rQ7FXYq7FVk8oiiZ6Vp0Hvkoxs0qWyahcspAote69fx&#xA;zIGKIY23b300dRITIvavWvzxniB5LaPt7hZ05AUI2IOY84cLJZe27TIpX7S12+eSxzpBQP1Kb+Q5&#xA;f4gRTvqU38hx8QLTa2MxNONPc4DkC0mqiigeApmKWTsVdirsVdirsVQF6ly0vwcuFKALWnv0y/GY&#xA;0goT6pN/vtvuOW+IO9FJlYxvHbhXFDUkA9hmPkIJSERlaXYq7FXYq7FXYqwz8xPPT6FBFpekp9b8&#xA;y6l+7sbZRyKcjx9R1/4iD1PsDmdo9L4h4pbQjzbIQvc8l/5f+QovL9jNcaiwvde1IFtTu5PjJ57m&#xA;JS3Va/a/mP0UGs1fiGo7QHILOd+58+/m5+TUvlXUxdaTcRz6ZfykWViW/wBKjJ3KBT9tF6Bq16A7&#xA;9dlo9Qcoqtx8m2ErYLeeWdc0fWEsNW054bmMRzS2s3w1jcBxVlO3IbbGo6dRmVjPiD0lmN+T6Cm/&#xA;5yGt4Ejg0zQKQRqqoJJwgUKKcVVEbYdt8wo9jk7yl9jX4Hmnvl389tBv5Vh1Wzk0xmNBMG9eIf6x&#xA;Co4/4E5Rm7KnHeJ4vsYSxEPSoJ4LiFJ4JFlhkAaOVCGVlPQgjYjNWQQaLUvwK7FVk0QljKHavfDE&#xA;0bVCfo5v5hl3jIp36Ob+YY+MtIm2txCpFak9crnO0quQV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2Ksa89edbPytpXrFRPqNxWPT7MVrJJ4mm/Fa7/d3zK0ulOWVfwjmWcI2Up/L3yTeWc0&#xA;vmbzGfrHmfUfjcvv9XRhTgvYNxoDToPhG1a3azVCQ8OG2Mfamc+g5Mi82eatM8s6RJqN+1afDb24&#xA;IDyydkX+J7DMbT6eWWXCGMY2WBaFpNyRefmV52UtPBE0+maaw+G3iX4o6KejnogPc8j8R22GXINs&#xA;GL4nvbCf4Q8X8xeYNU8x6xPqeoSF55TREH2I4wTxjQdlWv8AHrm8w4Y4oiMXIiAAh4LWvbJkoJTK&#xA;3tem2VksCWf/AJe+cbzy9cLbTs0ukzN+9iNT6ZP+7I/4jvmu1mlGQWPqaZbvc4ZopokmiYPFIoeN&#xA;1NQVYVBGc+QQaLWuwK7FXYq7FXYq7FXYq7FVG7vrKzi9W8uI7aKtPUmdY1qe1WIGEAlUF/ijy1/1&#xA;drL/AKSIv+asPBLuRbv8UeWv+rtZf9JEX/NWPBLuW3f4o8tf9Xay/wCkiL/mrHgl3Lbv8UeWv+rt&#xA;Zf8ASRF/zVjwS7ltWtNb0W8mENpf21xMQSI4po3ag6miknAYkdE2jcCuxV2KuxV2KuxV2KuxVKPN&#xA;PmbTvLmkS6lfN8K/DDCPtSyEfCi/Px7ZdgwSyy4QmMbLEfI/lfUtW1X/ABt5oXlfzCulWTfZt4uq&#xA;NTxofhH+yPxHbN1WeMI+Fj5dT3tkpUKDNtd1zTdD0ybUtRlEVvCP9kzdkQd2bsMwMWKWSXDHm1gW&#xA;8/8AK+haj511lPN/mWIppkRromkvunDtIwPUd9x8R/yQBmxz5Y4I+Fj+r+ItkjwignH5zmT/AJV7&#xA;qCoaB3gV6eHrof4ZT2b/AHw+P3IxfU+dbe16bZ0xLkEpnb2vTbKyWslMre16bZWSwJTK3tfbKyWs&#xA;l6d+W+tuqHR7hqqKvaE9u7J/EfTmp1+H+MfFiCzzNYl2KuxV2KuxV2KuxV2KvEP+chppTqejwlj6&#xA;SwSuE7cmcAn7lGZul5FhNimh+S4b/Sre8bTdbnMoJMtpbxvA1GI+BmYE9Mslko8wgBHf8q8g/wCr&#xA;R5i/6RYf+a8Hi+cVp3/KvIP+rR5i/wCkWH/mvHxfOK07/lXkH/Vo8xf9IsP/ADXj4vnFaSLyvG9n&#xA;+YWlQRiWExapBFwlHCUL64QrIB0amzDJz3gfcgc31TmsbXYq7FXYq7FXYq7FUHq+r2GkadNqF/KI&#xA;raBeTt3PgqjuxOwGTx4zOQiOaQLef+XNHv8Azvraea/MERj0i3NNF0xvskA1EjjuKj/ZH/JFDss2&#xA;QYIeHD6j9RbCeEUHomoahZ6dZTXt7KsFrAvOWVugH9T0A75rIQMjQ5lqAt5tplhf/mNraazqkbQe&#xA;VLFz+jrFulw6mhdx3H83/Ajuc2k5jTQ4I/3h5nubSeEV1eoKqooVQFVRRVGwAHQAZqWpJvOuktq3&#xA;lXU7BByklhLRL4yRkSIP+CQZfpcnBkjLzTE0Xzjb2vtnUktxKZW9r02yslrJTK3tem2VksCUTdXN&#xA;hplo15fzLb2yUDSP4noABuSfAZXbDc8mNL+cdlb6nbx6Hp0+oXXqKIN/SLuSOIRQsjtU7UoME8dg&#xA;3ybBgPUvcfPH5maP5H0zS9R8xW1zFb6jMtvNLboJktpGjLn1SCCQKEfCCT4Zz3DZ2QTTIND17Rde&#xA;06LUtGvYb+xm+xcQOHWtKlTT7LCu6ncd8BFKwL85vzA82eQ5NE1+yslv/KyyvB5hhVf3y+px9F1f&#xA;9j9oAn4a0B6jJRiCglnHlnzNonmbRbbWdFuVu7C6Xkki9Qf2kdequp2ZT0yJFJTTArsVSTzP548o&#xA;+VoVl8watbacHFY0mceo4BoSkQrI9P8AJXCAStpX5U/N38t/Nd4LHQdchur0glLZ1lt5XA3PBJ0i&#xA;Z6Df4RhMSEWw789/Let6hc6Zf2FnLdwRRyQzegjSMjFgwLKoJofHMnTTAsFjIPL7bVNLsohaXvly&#xA;3uLuElJpZpbyOQsGOzIkyKCOmyjMkgnkWKbiFyAR5BqD0P8AuU/6rZD/ADvuT8Ehbyx5lLEjR7xQ&#xA;TsBbzUH3rlnGO9FNf4X8y/8AVpvf+keX/mnHjj3rSe+RfKPmeTzfo7nS7mOK3vILiaWWJ40WOKRX&#xA;YlmAHRdvHIZJx4TuoD6bzWtrsVdirsVdirsVUrq6t7S3kubmRYbeFS8srmiqo6knDGJJoc1ebW9v&#xA;efmNrYvLpXg8oadIfq1uaqbmQbEt/HwHwjck5tZEaaFD+8l9jZ9I83pLva2dqzuUgtbdKsdlRI0H&#xA;3AADNUAZHvJa3mjfXfzJ1riC9v5N06T4mFVa6lX5/wCaj3ObXbSw78svsbfpHm9CvLzSNC0lri4e&#xA;Oy02zQCtKIijZVVR9wAzV7yPeS1Epd5b89eV/MckkWk3olniHJ4HVo5OP8wVwtR7jDPHKPNAKf5B&#xA;LxLzr5Y/RPmGYRJS0uiZ7eg2AY/En+xb8KZ0Gkz8cPMMuJLYoERC7kKiirMxoAB3JOXksCWXeRfL&#xA;ml+YLManHfRT2IYpwt3V3LKSCHIrw/WR4dc1+q1RgeEDdeHvSr86Uj1bTbT8v/KVot7q81wlxewW&#xA;9CtvFGpAa4kOyFmI3c9B8sp0pIJyTOzbjFbpx+VP5JaT5NCanqDLqHmIrQTgH0rcMKMsIPU9i538&#xA;Kb1r1OsOTYbRWc7ega3oeka5pc+l6vaR3un3K8JreUVUjx8QR1BG4O4zDBpreMeR/I/kPyR+a6ad&#xA;oOq6rFcMZkudPklU2cheD1IkeiqWEYY8a1PLv45EokwtiOaa/wDORP5t2fk7Q4tEt7a31HV9YH7y&#xA;zulEkC2YNJGmj/a9TdFHzP7O9WOO9qSyf8nNA0zTvJdnqlrpcOk3fmCKLUr+1tuaxB5YwUCRsTwA&#xA;jp8I74MkrKQzh3REZ3YKigszMaAAbkknIJeQfmr/AM5GeUPK+mXNpoF7DrHmRlKW8VufVghc7epN&#xA;KvwHh/IpqTsadcsjAlBL5n8ueTPPf5rX2varBeLqOs2MSXM8d1IRNceoxASGo4DiFNBVVGwGWkiL&#xA;DmmFt+SH5yaFqmkX36IawuZb2CPT5/rNszC4J5p8EUryDiELN8OwBrg4wU0X3RmOzYTZ/lhpa+d7&#xA;/wAz3vG49WVZbC1pVY34LzkevVudSvYdevS45jwiIY8O7NspZOxV2KuxV2KuxV2KuxV2KtMyqpZi&#xA;FVRVmOwAHc4q821G5vPzB1k6VYSPD5WsXBvrtdjcODsqnoR/L/wR7DNrCI00OKX94eQ7mwel6JaW&#xA;lpY2kdraxrBawLxjjXZVUZrJSMjZ5tbzrVb698/6w2iaVI0PlqzYHUr5NvWI3CLXqNvh/wCCPbNn&#xA;jgNNHjl/eHkO5sHp3eh6dp9np1lDZWUQhtoFCRxr0AH6yepOayczI2ebWSkv5geWJfMvla60yCQR&#xA;3LcZbct9kyRnkFb2bp7ZLFPhlaCLfLwPmXyB5ot9SuoJ4I7ecTTQzBg0dG+Nkb9qFwaMAaAGo2zO&#xA;NSHk18n1PrXmnT7DTLbUBOgtrv0vRnNSpFwypFQDqXaRQMxMOLiJvo2EqetaQvmLQlqoW7jq9u3Q&#xA;cgaEfJqZZjyeDk8l5h8y+av8ceZ9Wn0PRtJvWs7aQwyRxwuOboaFpWIAVa9Ax+e+bnxIRFkhvxxA&#xA;FlmXkL/nGzWlcXfmbUX06Nh8en2ElZmBG6yTD4FHYheVfEZg5+0I8oi/essvc9y0bQfLflfSmt9N&#xA;toNNsIgXmfZa06vLI55Mf8pzmsnOUzZ3LUTfNZqetW0ugzXul3UVzGaItxA6yKCWANGQkVAOV5LA&#xA;cnQ4xPKAeTE/yt1vUtRu9S9eQvbx3V1DFXpxt5vSr1681YZCOx+Dn68A4+KtxKg8z/MPUm0P84pd&#xA;QqQttdWlyTSlU9KJmHypUZs8YvHTojzeOzXep/m3+ccPrcqa1fLEkY6wWMZrQdv3duhJ8TU98p+k&#xA;LzL7xhiihiSGJQkUahI0XYBVFAB8hmM2Piz/AJyI/NPX/MXnTVPL0NzJB5f0e4ezSxQlVlmgYpLL&#xA;KBTmfUU8a7AdN61yIRoMCWE6F+Xur6kBJOfqkRFQGFZCP9Wop9JyqeoA5bvSaH2YzZRxZD4cfP6v&#xA;l0+PyfSH5SXPkj8tfy51DUYpjf65PKXvbIFEu5ChKxQxoTuqrVq9Kk5X4vFzYav2fz48xhjjKUas&#xA;S79vv6UyTQL3zL+YnnfRvMr6Zd6H5L0BJbiwt9RQQ3N7ezxNCJTErPSOKNzxau9dq1NLDQDoHoXm&#xA;DzX5a8uwxTa7qltpkU7FIWupVi5sBUheRFaDrkQLSlNt+bH5Z3VxFbW/mjTZJ5nWOKNbmOrOxoqj&#xA;fqTh4Si2V5FLCPzi8z3fl3yXLdWshgluJVtzcKaNEhR5HZSO/GMj6chMmtnddg6bHlzk5PoxxMz8&#xA;K/XbB/8AnHjV/Mt/dXv6QuJJrQ2wmkikZnEcskgMQHImh9PkG8aYI8yOjtvaHHD8tjnKIjlkegr0&#xA;86+HpD2/LHj3Yq7FXYq7FXYq8+8zavf+adVbypoMnCzQ/wC5jUF+yErRo1Pfwp+0dulc2WDHHDHx&#xA;J8/4QzArdmmjaPYaPp0On2MfpwQig/mZu7Me7HvmDlyGcuI82JNsK8y6zf8AmrVW8q+X5ONon/HY&#xA;1EV4hQaNGpHUdv8AKO3SpzPwYo4Y+JPn0DICt2aaJotho2mxafYx8IIh1/aZj1dj3Y5gZcspy4jz&#xA;Yk2jsrQo3xuxZXBswGuxG/1dW+yZOJ4A+3LEtmLh4xxfTYv3dXzJrPnX8ztP1JrfU4v0hET+/wBM&#xA;1FVZXNaECGVDGVI/lK+xymMyOpBfQc3ZemywvFjhPHXOMql+o/5xTfyLrWoeZta0TydJpt1YWWkT&#xA;vq1rHdI3wWEUZWGAO1eaW11KvBgT8IQVqDmfiyACy8DrNN4WQw3+PP8ASPkSH0PBCkEKRJ9lBQZR&#xA;KRJstC/Iq7FUn83+Xx5h8t32j+r6DXSAJL1AdHEiV9uSivtk8cuE2gh872EPnT8rtWupNbtLqXyv&#xA;eK0d7InKaONjUxy+oOSlFeh3+JRt06ZOXhnHYssGQ45iXc90/K/y2+heTdNhud9RngS4v2pT9/N+&#xA;9lH/ACMkbMOt27NnMwB0H4JeMf8AORNk1r51iueNEvbON+XYvGzRkfQFXM3Tn0uJLm8Z0Oa88say&#xA;NZ0S8ls9RTmI5lEbcVkFGADo3UGmSMAUWnsv50/mlHI8i+Zbur7EERFfoUpRfoyBxxTZUNA0w3Uj&#xA;69qjG71O+dpzPMeb1Y1Lknqzda5g6jLvwjk+h+zXY8IYxnmLnLcf0R+s9/7WWaSy/XVRuknwj59R&#xA;mK9PqB6Ubqui3rXTSW0DSIY/UcqKgcR8X4CuFpwamIjUjW72vyD+ZGg3Wg2dnqF0bfUrOFY7v1kd&#xA;UAjHEO0tOA5AV+IjL4TFPBdr9iZoZpShHihI2Krr0rm8A/5y71uC+876PaW0yz29tpqyh42DLznm&#xA;krQjb7Ma9My8XJ5vJExNEUQ8rtvLemXfmXy/pGmaiNT/AEubJLgrE8PoXN04SS3PP7RjJ+2uxyds&#xA;H6JAACg2AzFbHl//ADkIum3Hk/T9Ov7yOxivtTgje5lI4pEqSPO1P2v3KsoHdiB3wxjZczR6vwZE&#xA;ncSFH3WCR8QKWeRtVmtkg07y7otzBo5q0uq3arBJcPTZ1hcGduX+UqADpXMyGnhEbsdf2hl1WQzm&#xA;fcOgHcHplxdx2tqbi4PEKByA3+LwGYUiA04sZnLhHNic/m7VPrHOMIkQO0RFaj3PX7spOQu7h2Zj&#xA;4aN33sssLxLyziuUFBItePgRsR9BGWg2HS5sRxzMT0V8LU7FXmfnz8xJxJc6PpHwBaxXN7X4q9GW&#xA;Pw8OX3eObbSaIbTl8mQCQeS/PT+XlFm9pHJYSPyndARPU7cuRNGoOx/DMnVaTxd73+xJFsv8zear&#xA;rWbiLy55WkEtzdoGu75SQkMLAHZh0PE7nt0HxHbBwacQHiZOQ5DvQB3sn8teXNP0DTEsbNa/tTTH&#xA;7Uj92b+A7ZiZ88skrKCbTXKUMJ/Nn8yIfIvl0XiRrcapeOYdPt3J4lgKtI9KHgm1QOpIG1a5k6XT&#xA;+LKujKEbL5vk/Nn839Sle7h1W8KOx+G2iCxL/kqESm335txpcQ2oN/DFr/lY/wCcv/Vz1P8A5Ft/&#xA;zRh/L4e4LwxQ03nX815722vpb3UXvLMSLbTmNuSLMAJFB49G4io9h4Y/l8XcF4Yon/lY/wCcv/Vz&#xA;1P8A5Ft/zRj+Xw9wXhi7/lY/5y/9XPU/+Rbf80Y/l8PcF4Yu/wCVj/nL/wBXPU/+Rbf80Y/l8PcF&#xA;4Yu/5WP+cv8A1c9T/wCRbf8ANGP5fD3BeGKG1Hzv+bGpWM9hfX2o3FncoY7iB424ujbFWHHcHuMf&#xA;y+LuC8MUT/ysf85f+rnqf/Itv+aMfy+HuC8MUu1rzL+ZGuQLBq8t5fRISY1ng58SepUlKrX2wjBi&#xA;HIBBhEpA+k60/WxuP+RT/wBMidPA9WBwxQ7+WtUf7VldfRE//NOR/LQ718GPemdmnmm0t0t4ra5M&#xA;UYogaAkgeFeOVnQYCbP3u703bepwwEIy9MeWwV47zzlGwZIJwQagm1BofpQ5IaHAOg+aMnbeqnzy&#xA;H4UPuTy188/mDAgX6j6pH7b2slT/AMDxH4ZWezcBP7WP8rZa3IKEtvOX5t2zzGDUdRijmYs0SRFU&#xA;3r8NAvQVwjQYh1ddlySyG5SYvreha9rN79cvre6abiEqIWAoteg47dcn+Uh3tWQccuKUiZHqpaT5&#xA;b1zSdTttTsYbyG8s5Fmt5ViaqupqrD4exwjSY73LEYojqzr/AJWP+cv/AFc9T/5Ft/zRln5fD3Bs&#xA;4Yozyz+bmv2nm/Srzzpy1i101pFSO7jX1rY3PDnPH8IYuqoOPLsSBStcqy6KEo+jYsZYweT6ubUt&#xA;LhgW4WRDHIgdDHQ8lIqCKdiM0cpVzY48EpnYMa1nUpL1wW+GFf7uP3Pf55TI27rS4BjHmlJhPVuv&#xA;h4ZFzRJnOhQNBpNtG3XiWp/rkt/HLojZ5zWT4ssij8k4zsVfOVxBNHPLHOCJkdllDdQwNGr9OdVE&#xA;gjZkpcMKXsf5X6fp8HlmO6gUfWrpn+tSdWJR2VV9gFptmi7QnI5KPIMSneq6rJavwjGy05sBU7+2&#xA;a+UqczTaYTFlRtdfFQJ6GNuki9vowCTPJov5vN4h/wA5VPzvPLZVuUfpXTLQ1G7Rbj7s3XZnKXwc&#xA;bGKtPv8AnH3zNYaf5A+rTRys63kxJQKRuEPdhg1mmlOdiuTVmlUnpf8AjbSv99T/APAp/wA15ifk&#xA;p94avEDv8baV/vqf/gU/5rx/JT7wviB3+NtK/wB9T/8AAp/zXj+Sn3hfEDv8baV/vqf/AIFP+a8f&#xA;yU+8L4gd/jbSv99T/wDAp/zXj+Sn3hfECE1bz/Y2ulXtzbwStcQQSyQiRV4F0QsvKj1pUb5GeklG&#xA;JO2zkaOMcuaGM8pSiPmaePaf+YP5lardvFa6uol4mQiRrS3QAEDZpvTXv0rXNaJyL6Tm7H0GGNyx&#xA;7ctuOX3WmX6b/N//AKu9v/0maX/1UyVycX8r2Z/qcv8ASZf1O/Tf5v8A/V3t/wDpM0v/AKqY3Jfy&#xA;vZn+py/0mX9Tv03+b/8A1d7f/pM0v/qpjcl/K9mf6nL/AEmX9SB1Tzt+Z+liM3esJSUkJ6MtlcH4&#xA;aVqITJx698BlIORp+y+z8t8OPl3icf8AdU9J8j/mOdQ8uwT6skkl+rOkssSIFfidmpVQDTrQZm4M&#xA;Eskb2eH7d0uPTakwh9NA/NP/APG2lf76n/4FP+a8u/JT7w6jxA7/ABtpX++p/wDgU/5rx/JT7wvi&#xA;B3+NtK/31P8A8Cn/ADXj+Sn3hfEDv8baV/vqf/gU/wCa8fyU+8L4gQl15qsJru0nSW8hS2ZmkgRY&#xA;+EoZaAPVu3XLIaWQBFRN+/ZIyhJZrr1Le2iGv6vG8Gp/pF5kW3DSwgk/U37ejv0/hQA5NNKR2ERt&#xA;5/NEsoL57/Oy8ivvzO1m6iDLHJ9W4h6BvhtIl3oT4Zs9LAxxgH8buXiNxD6A8pbeRdCdzUtplpud&#xA;ySYE/E5zmp/vJf1j97s8JukwFoWUNMKvTZeyj+uUU5BydyM0vQxdTh3Ui3Q1Y1PxU/ZGSjG2jUav&#xA;gjQ+ploAAoOmWujdirsVeY/mH5chHmKyuQ4t7bVGEU81KqkwIHIio2YEV+RObfRZz4ZHMxSEw0j8&#xA;qLSC4WbUrr60iGv1dF4K1P5mJJI9hTK8vaJIqIpbV/JddG8yax5bbaEv9bsR24NSoH+xK/cchqvX&#xA;jjk+BUp55hgZKXSglacZKePY5rJh2GimD6WMtMUYlFbiftLT8RlVu3EL5vG/z8meWfRELFkRbooD&#xA;25Oh2zedkcpfBwNbACQKb/k0v/Oov/zFy/8AEUzPzc3S6j6mdccqcd3HFXccVdxxV3HFUFrq/wC4&#xA;TUP+Yab/AJNnKs/93L3Fz+y/8axf8Mh/ug8z8sz2cGoO93LbRRGIgNd27XUdeS7CNQSG985sPreu&#xA;hKUKiJE3/DLhPzZP+lPLv/Lbo3/cIl/5pydh1PgZ/wCbm/5WhLtU8x2dtIi2MGk36MKu66d6XE16&#xA;UkArgJcnBopTB4zlh/yUv7kF/i+X/q06X/0hx4OJyP5OH+qZf9OUBqusvqIjDWlpa+mSa2sKwlq0&#xA;+1x60ptgJcjT6YYr9UpX/ONs98hKf8PISOsklPvzeaD+7fN/as/4af6sWRcczXmnccVdxxV3HFXc&#xA;cVdxxV4B+aS/873qf/PD/qHjzLxfS7DB9AfRnkiC8fyf5flKJxXTbQRBmO37hByoB1Pzzl9SP3kv&#xA;6x+92cZwEa382UWdmnEz38iJCDRQKip79T+rKgO9oy5TfDAG0Z+nNPQBIlZlGw4ig/GmS4g0flJn&#xA;co22u4blC0ZO3UHqMILj5MZgaKtha3YqkfnTRv0t5euYFWs8Q9e3p15x70H+sKr9OZGly8GQHoqp&#xA;5R1f9K+X7S6ZqzBfSuPH1I/hJP8Arfa+nBqcXBMhUj89I2matpHmWIbW0n1e7p1MT1/gXH05kaQ8&#xA;cZYz13CQzFlinhoaPFIvzBBGYBCxkQbDEdb0W4suU0VZLavXuv8Arf1ymUad7pNXHJsdpPBvzyPK&#xA;80n/AFJv1pm67H5S+C9oDeLIPybX/nUX/wCYuX/iKZn5vqdBqPqZ1xyloRWnabcX9yIIQK9WY9FH&#xA;ichkyCAspAtkieSrMKOdxIW7lQoH3GuYR1su5n4bf+C7D/f8v/C/0wfnZdwT4YUrvyrpFnazXdzd&#xA;SR29ujSzSHjRUQVY7DwGP52XcGWPAZyEY7k7B1v5S0e8tI54biSW2uEDxt8NGRxUGhXuDg/OyPQJ&#xA;lhOORB2lE/aGCfmD+U1pb2FpJ5dtXkvprpYXiXpwdWPI9lClRU9BmFmAPIU9h2F25k45DUTuAhe/&#xA;lXzTjRvyQ8v2+mxpqLtc6gRWaUEiMMf2UWo+Ee+5/DJYxEDcW4Ou9pNTkyE4pcEOg2+ZS3Vfy40L&#xA;TpxHLZIyNvHIGejAf7Lrmfiw4ZiwHAPtBrh/lD8h+pA/4N8tf8sK/wDBP/zVlv5PF3Mf9EOu/wBU&#xA;Pyj+p3+DfLX/ACwr/wAE/wDzVj+Txdy/6Idd/qh+Uf1Jrb2sFtCkEEaxQxiiIooAMyIxERQ5OqzZ&#xA;p5JGczxSPVU44Wt3HFXccVdxxV3HFXccVeAfmkv/ADvep/8APD/qHjzMxfSHYYPoD6X8jPL/AIJ8&#xA;vL9WkI/RtmOdY6U9BN/t1/DOZ1P95L+sfvckAV9Q+39SheXjSzSOWLKpIjr0ArtTMUl22LEAAF9u&#xA;ZCqonwIBTmep+Q/riGM6uyyfQLdo4GcghXpxrUk0rU75bEOn1s7NJrknCdirsVYb5cH6F83aloZ+&#xA;G1vP9Lsh2Hcqv0VH+xzPz/vMUZ9Rsfx+Oasi8waWuqaNd2JA5TRkRk9nHxIf+CAzFw5OCYkqW+Qd&#xA;Ta98uwxy1+sWRNtKD1+D7P8AwtBlusx8OQ1yO6shZVZSrCqkUIPQg5ipBp8zf85FaellrunQx/3R&#xA;jleMeCsU2+jNt2QK4vg7TLmOSESee6afk0v/ADqL/wDMXL/xFMzc/wBTqdR9TOuOUtDKvJsaiG5e&#xA;nxFlFfYA/wBc1+tO4bIMizCbEHda3o1nJ6V3f29vL/JLKiN9zEYRElWK/mF+YWgaP5R1C5guYtQu&#xA;JIzbwW1rJHK5eYFAxVSTxWtTlkMZtBLvy+/Mjy/rvla0u57iPTrmIfV57a7lSN+cQALAMVJVuoNM&#xA;E8ZBUFldprGk3rlLO9t7lxuVhlSQ/cpOQMSEovAqSebkVtMRiPiWUUPzBrmVoz6/gwnyYdxzZtTu&#xA;OKu44q7jiruOKu44q7jiruOKu44q8A/NJf8Ane9T/wCeH/UPHmbh+kOwwfQH0P5f123h8g6BbWzc&#xA;7k6XZo7Don+joDv45y2rl+8l/WP3ux0mjlKXFL6fvU7O2luZVjiVnkP2QuYwDs8uQQFnYMs0vy76&#xA;QD3jiRuojHQfM98tjB0mo13FtDZPAAAABQDYAZN1zsVdirsVYn58tpbcWOvWw/f6bKvqU7xMeh9q&#xA;7fTmdo5A3A8pKyi3niuII54jyilVXRvFWFRmFIEGirE7ADRvPd1afZtdYT14h29UVJ/Hn94zOn+8&#xA;wg9Yqs/M3zTPothYWtvMbabVblYHuxsYYQR6rqT0ajAD781s5U7zsLQDPOUpDiGON13noHlf/OS9&#xA;la2t15dit4xGiw3IAHejR7kncnfcnc5vOyRtL4OujllMkyNqv5Nr/wA6i/8AzFy/8RTMrUfU4mo+&#xA;pnXHKGhlPlAUtrj/AFx+rNfrOYbIJD+bXnyHy/okljYXsUevXfFYoFdfrEcL8uU4SvID4eIamxOU&#xA;4IcUt0yL5tvtQggVrm9nCciS0srbsx36ncnNhYDWln+LPLv/AC2r/wAC/wDzTkeMK4ebPLxNPrq/&#xA;8C/9MeMKm1hqAJjvLC4+JDyinhfdWHcMp2IyWxV9N/ll53t/MmgwJcXUMmuW8f8Ap1srr6vEMUSZ&#xA;oxuA/HwpXNdmhwybQU481iulj/jIv6jluk+v4InyYhxzZNTuOKu44q7jiruOKu44q7jiruOKu44q&#xA;+f8A80l/53vU/wDnh/1Dx5n4fpDn4PoD3HyHoWoX/lvRuEZSE2VtWZxRaekvTx+jOT1MScsv6x+9&#xA;3h1kMeMWbNDZ6Zpul2unwCOBfiP25D9pj7/0xEadFn1EspsovC0OxV2KuxV2KqF/ZxXtlPaS/wB3&#xA;OjI3tyFK/RkoTMSCOipB5Du5f0fPpVyf9K0yVomH+QSafiCMytZEcQkOUkBb59tJRY22rW/+9OmT&#xA;LKp/yCQD/wAMFx0UhxGJ5SCShvPHlKDzv5ctmtZhDdIBcWUr1K/GvxI9K0B237EZhZcZuuodx2L2&#xA;r+Ty8RFwlsf1vAPzIt/NqLZ6V5h5evo8bi250YtBIV6SAnmo9PY/Rmb2XqvDnwS/id/2h2fg1GI6&#xA;nTHzkPv9x72Y/k2v/Oov/wAxcv8AxFM2+p+p4jUfUzvjmO0J7o0skOianLEeMkaO6HwZYyRmDqvq&#xA;DZB8dNPNP5+lmndpZpLVmkkclmZjJUkk7knLh9TFiOtaiup+YD9claOySX0gVFeEQahYDxPU5Rkk&#xA;TdN2njAziJmoXufJKJliWaRYWLxBiI3IoStdiR22wBjkERIiJuN7e5fZpbPdwpdSGK2ZwJpFFSq1&#xA;3IGCV1sz08YSyRGQ8ML3PknHlTUXstdSCFy9rcv6TA7cgTRGp2OWY5G2rIAJHh3HRlVve3lj5/W7&#xA;s5GhuoEieGRCQwYHalMmRcixfavmkV0wf8ZF/Ucx9J9fwZz5MS45smpXsbQ3V3Fbg8fUNC3gOpyG&#xA;SfDElICc3miaFYqr3uoC1VzRGmkjjBI7DlTMMaqR5BnwBCel5M/6vlv/ANJEH9cP5mfcvCHel5M/&#xA;6vlv/wBJEH9cfzM+5eEO9LyZ/wBXy3/6SIP64/mZ9y8IRdnomhXys9lqAulQ0doZI5ACex41wHVS&#xA;HMLwBJr60+q3ctvy5emaBulR1GZmOfFEFgQoccmh8/8A5pL/AM73qf8Azw/6h482GD6A7DB9Ae76&#xA;f54+ofkvYavoqrcXGnWlpYyrKDxjlRY4X5KCCaV237jOfy47zEHvLjTO5T/yr55/SfkN/Ml9GqS2&#xA;sczXkUVQvKCpovKpHJaH6cx80eAtulwnNkjAc5ED5sK0Tyj5i/MCB/MWt6tLZ21wziwtIKlVRWK1&#xA;CkgKtRTxPU5jCJluXstV2jg7OPgYsYlIfUT+P2BNfKetX/lPV9Q8veYr/wBbT7OE3FveSkmigA0W&#xA;pLUYH7O+4oMMTRouJ2jpYazFDPgjU5GjEfj7e7mpy/nnFzee20C6m0qN+D3xfjT/AGIRkr7F8fF8&#xA;mUfZQ1UssRk/m1+2/sehaDr2m67pcOpadJ6lvMOh2ZGH2kcdmGWA281q9Jk0+Q45ipD8WEwwuM7F&#xA;WJ34/RHnO2vh8Nrqq+hP4CQUAP8AxH8czofvMJj1ihk93bRXVrLbSiscyNG49mFMw4yMTYSx3yLc&#xA;Sx2l1pFwf3+mzMlP8hiaf8MDmVrIgkTHKQQHkf8AzkDrmnz69Fa27rJNZ25hnZd6SOxPCv8AkDc/&#xA;OnXKdLhOTLEDlE2Xsey5HS6HJOe3i7RHftV+79XuRH5Nr/zqL/8AMXL/AMRTN5qfqeQ1H1M645Q0&#xA;Ml8qqPq1wDuCwqPozA1nMM4PJPza/Jry9pYl846HDLBcJwhu7NG5QLE7MWlVWqynmyigPEDtgwZC&#xA;ZbrIPn7VfIcd1eyXNtc+isrF2jZOQDHc0II2y+WKyxtdpXk2606dpFnt7hWFGjng5r8x8Wxyuen4&#xA;urm6HXHTy4hGM76SFrNS8k3V/dGdrmCDYKscMHBAB7BvfqcMMHCKthrNYc8+MxjHyiKCrovkeOwv&#xA;ku57j12iNYkC8Ry7E7nplkcdFxX0Z+VH5M+W5I7TzjrFvJPqlwqtbW0zEQxrG7enJ6YpyLih+Ko9&#xA;sxc2Q8RAZxD1LzMP9xo/4yL+o46X61lyYpxzZNaP0Mf7lbf5n/iJynUfQUx5onz9x+p2nJ1T9427&#xA;aY2qfs/yKR6fz75r8X43psLCf3X+/wCP/wAJWT/mrLvx9TFOdI8qXuq2puba8sEjDFKXHl9YHqAD&#xA;9mWRTTfrkJTA7/8ATJpG/wDKvtX/AOW/Sv8AuCwf9Vsj4o8/mtMg8taHdaRBNHcT2s5lYMptbNLI&#xA;Cgp8So78vnkJytICTa4P9ytx8x/xEZstP9Aa5c0Bxy5DwD80V/53vU/+eH/UPHmxwfQHPw/SGY/l&#xA;TfC70TXfKspquo2DXFmp/wCWi3TlQf6wof8AY5ptUKnxdxcSX1Fl35X2Z1XyZ5j8ucgjTAvCW6B5&#xA;oygPyDRLXMTVRtyuz9R4OaOT+bIH9bvJf5kw+V9KPlvzDYXMN7prOkfpqpLKzFwGDMlPtbEbEZgx&#xA;nWxeu7T7EOryePglExnX6mF+dvMb65qct/MvoR3TogiG5WGOm1e52B+eVylZd92Xohp8YgNzH7y+&#xA;hrW10W30NLeFIV0dIKKvwmEwFakmuxUruSeuZO1PmmTJllmMjfi8XxtgP5HL/oOuNb1/RjXtLOte&#xA;y79f8gpleJ6L2qPrxcX95wer8e+3puWvKOxVJvN2mG/0SYIP39v+/hI61TqB81rmRpcnDMdxQXls&#xA;/wCe+tW00ls2mW8jQMY2cu4LFDxJoPGmYmWfDIjuL2+l9lcWXFGfHL1RB5DqLSmP849Si1uXVYtO&#xA;hR54/TmhDvxbp8VeoPwjJHVkw4COTf8A6D8X+qS+QYr538wReaPqKrYQaZFYiQLHbDZzKVLM1e/w&#xA;9e+XaXtA4QQAN3Il7MxkblknI+aJ8p+cbny5pZ0+C3SdDK0vNyQasAKbf6uTydqSkboNE/ZDFI3x&#xA;y+QZ75M823XmCW6WW3SBbdUIKEmpcnx/1cu02pOS7HJ57t3sWGijExkZcV8/J6X5XFLef/XH6shq&#xA;+YdBFN5oYZ4XhmRZIZFKSRuAysrChBB6g5iMnnmtfk/+W8PqX93JJpltWr/6QscKk+BlDU+VcyI5&#xA;58ubExDyv80tH8h6T5cS48najJf6t9ZSN4eS3FISrl2C0h/aC78sujPJ1DEgIj8ttD/LrVPK1tc+&#xA;a9Tex1uSSVZYC6wUUOQhKEShar/l4ynkvYKAHqOifk/+XavFqFuH1OD7UXqTLLA1O/7sKrD2NRlE&#xA;s8+XJkIh6AqqihEAVVACqBQADoAMoZJX5kH+48f8ZF/UcydL9TGXJi/HNi1qkEskEySxmjoaqcjK&#xA;IIopTT/Et/8A77i+5v8AmrMf8pHzZcRd/iW//wB9xfc3/NWP5SPmvEXf4lv/APfcX3N/zVj+Uj5r&#xA;xFUtvMs/rKLiNPSOzFAaj33JyMtIK25qJIzVtYe1EJtuEglBbk1SKbUpQjKsODiu+iSXzl+ZX/OR&#xA;Nxo/ma80rSdPivJrR/Turu4Zgnqj7SIiUNE+zUt17eOSZ8Ow6MGR/lP+bEPnmO7t57QWOp2QV3iR&#xA;i8ckbGnNKgEUOxB9t8shk4lYF+aS/wDO96n/AM8P+oePNvp/oDnYfpCcrDP5P1zy5q0IPozWVhqC&#xA;D+dZYVE6V/ym5j5HNRk9ZkPM/e4mTaRemflusVh5wuraFuVvcJLHCw6MEYOjD/YKcw8u8UDmyf8A&#xA;NSw0+fyheXNxEpntzEbeag5qzSqtAetDyocw5iw7zsLUSx6mIB9MtiPg8NsdDvvMevW+j6fxMpB5&#xA;Ox+BAN3diK7AZjiNl9By6zHpsJyz5ff5PSofya8xm3XTZ/NEp0YU5WqCTj48RGZOA/z2y3wz3vLS&#xA;9psHF4kcI8Xv2++rek6FoWnaHpcOmafH6dtANq7szHdnc7VZj1ywCnl9Xq56jIckzcij8LjMX8++&#xA;d4PK9hGyRi41C5qLaAkhQF6u9P2RUbd8hOVO37I7KOrmbNQjzP6A8ll/Njz88xkW+SNCa+gsEJSn&#xA;h8SM3/DZV4heyj7PaICuEnz4j+uvsYhdh7q6luHVVeZy7KoooLGpoMjORkbPV3GCAxQEI8oigo/V&#xA;vbItvG76t7Yrxu+re2K8b0P8q7b04dSkp9tol/4EOf8AjbNp2eNi8P7YZLljHcJfbX6nrflkj0p1&#xA;7hgaexGT1fMPHxfOn/ORH54+d9I88XPlby9etpVppiQ/WJolQyzSzRJPXmwYqqrIBRab1rXalUIC&#xA;rUlgtp+ZvmfzVazT+Zb176bTlRYnIVAVeoHwIFTlVd2pv3zKxUAwKVz+a7mJhzjijVzRORP66jJm&#xA;auh813MrMI0ifgaOF5bfTXHjVlWm+bPNFto1wPLuqXGlyzipETCnqJ0BBBG/iO2MoCQUGns//ON3&#xA;5qa/550LU7XXyJtU0aSFWvQix+rFcB+HNVAXmpiatANqd8wMkabAXpvmIj6io7mQUH0HLdL9SJMa&#xA;45sGDuOKu44q7jiruOKu44q2eRABJIHQeGKvPD/zip5Y1y+vta1fV7xbrUr65vGjs2hEaxTyl0Qe&#xA;pE55gE8j09tt9dkyESLMRTjy/wDkdoPkHzFJqmhXU72d5ZtbS2906O6yiVHDIVVPhKjw2p13y3TT&#xA;JKCHlX5pL/zvep/88P8AqHjzoNN9Ac3D9IZF+a3mXR7Xyx5K0uW3mOpxaNZ3SXChfTME0XplCSwb&#xA;kHhr075qseEynM9OItEsZkT70q8p/nLpejz2E91aXMstnxRjH6e8ajgAKsN+G2GeikeoUYSnX5if&#xA;85B6N5i8vjTdLsbu2nM6Su83pcSsYJA+Fm/b49sqh2cRzIbcYnCQlE1IL/8AnGvzLp516fTbiOab&#xA;Wbq2JF2QvphU/eTV35Vd6du2U6jR+HHiDfqtZmywjHJK4x5fHqX0dmC4DsVdirxr85LedvMts71M&#xA;RtEEXhtI/IfPfKMvN7n2ZmBpyBz4v0BlnkLSvKmp+TorUWkMr8THfhlUy+qerFqcvdT/AEycACHT&#xA;dr6jU4tUZcRH83ur8c3lHmLy3caLq9xp82/pNWN/5o23RvpGUyFF7HRa2OfEJjr9/VLvq3tgcrjd&#xA;9W9sV43fVvbFeN6B+XVvw0q5en2p6f8AAop/42za6Aek+94b2pneeI/ofpLM7O6ltJhJHv2ZT0Iz&#xA;LyQEhReZBeVfnr+UD+fNVsta8vi3sdW4NFqsl08iJMiBRCR6cctWX4lJNNqeGURwSHVJLFdM/wCc&#xA;fPMFjpYtUubE3EnF7iQyTEFwN6fuR8I7bZeIUGKVXX/ONvne7v8Alcalp5sQSVRZJg4qOlPQp9Nc&#xA;gcZJVqL/AJxr8621+r2mpWCWhKmRGlnLGnUU9Chx8Mgqyiw/JbzNbQmM3VkasW2eXwA/317ZaAtP&#xA;Tvyh8sad5D8rNYPEJNXvJpLnU7mI8kkcsRGFZwjcVjoKcetfHMSenkTzZAsiv76W8lDOOKLsiDtm&#xA;RixCAQTaF45Yh3HFXccVdxxV3HFXccVSnzJ5isdBsPrVyC7ueEEC05O1K9+gHc5VmzDGLLsuzOzM&#xA;msycENgOZ7vx3IHyJ+bFvdXtxa6m9vpltw9SBpXYqWrQrzIUA0zXS1ImdxTvO0fZieGAOIyyG99k&#xA;q8wfm/J+nriKOCK80+GQxxTxOy8kH7S1BHX78MNYIbAbOTh9kvEwiUpGOQjlXJ5d591G11PzXe39&#xA;qSYJ1gZOQoRSBFII8QQRnUaKYniBH43dBl0s9PI45/VFGfnfEws/I0u3F/L1ogHeqKCf+JZh6Y+q&#xA;f9cuLDmfe8tzLZuxVPvJXmLUPL2uJqdhO1tcKvpCVFViBMyx7hwRSrCuYHaRPhbd7s+ycWKeaso4&#xA;ofrIiPtL690DznFP5BtvMuqSR2w9FjcyuQkYeJ2jZyTQAEpXNLhjx04Ha2lGn1E8ceQO3xF/pS3y&#xA;/wCaL3XWa7t7e7ghLgWk1yoiFwp35xxFvUVP9dFr4ZseCHDy2dZbO3kSNS7sEQdWY0A+k5rgLZsc&#xA;826Ro3mDTTA91Cl1FV7WYuvwtTod/st3xlhkehc/s7tA6bJf8J5j8dXlul3mreW9XMsB4TRHhNFW&#xA;qSLXcGmxB7EZjbxO72eaGHWYu+J5HuRPnXUbPWtVi1C2BUSW6CWNuqSKWBU9jtTpjM2WvsvBLBjM&#xA;JdJGvckH1b2yDsuN31b2xXjd9W9sV42e+S4PT0X/AF5Xb9Q/hm30Q/d/F4f2gnxan3RCfcczHRu4&#xA;4q7jiruOKu44q7jiruOKu44q7jiruOKu44q7jiruOKu44q8W/PDzGdMQX0kBuI45Vs7aLlxAZgzs&#xA;xND/ACH8M1Ob97kI6B7LQ6wdn6QTA4pTP9n2fa8aP5mTV209QP8AjIf+acj+VHey/wBGU/8AUx/p&#xA;v2OH5mTd9PX/AJGH/mnH8qO9f9GU/wDUx/pv2M1kh+u+X7DW44zGlyo5pWtCa03+YObbsbLwyliP&#xA;vDHtbINRjhqAKMhuyz89rM/4K/Lu8HT9GiF/+RFuy/8AG2XaU/vcg/pfpLzMOZeMZnNjsVTfStJu&#xA;rnRNd1KJQ0Wl28UtwCaUR50UEfJqZru0t4xHn+gudodTDFx8XWO3vEoy/Q+gNPPlmx0LSZ/PmpxW&#xA;NlYRrLpPlTkpk9Q1Y3V5COTPMzklUI4w+71OavCCNouv7Q1X5jPLIf4j9nT7GWeU/wA2PIWr6pFp&#xA;+nrPBcXDenBLOicXY9FDo8lCfemW5YTIsnZwwQmHni4lN7Bb8j6IiEnDtyLMK/cMyNFEcJPVhkO7&#xA;GszWtD3dnFcL8Qo4+y+Y2o00cg83Ydn9oz00tt4nmPx1SmSyaNirDfNFkxSgaL3Gn1cM0eKB2W/V&#xA;vbK2/jd9W9sV43fVvbFeNjOq+fvM2kahNp9hcJHawkcFMSMasoZt2BP2ic6vs3TQOCJI3N/e8l2n&#xA;CM88ifL7kL/ytXzt/wAtaf8AImL/AJpzO/KY+5wPAi7/AJWr52/5a0/5Exf804/lMfcvgRd/ytXz&#xA;t/y1p/yJi/5px/KY+5fAi7/lavnb/lrT/kTF/wA04/lMfcvgRd/ytXzt/wAtaf8AImL/AJpx/KY+&#xA;5fAi7/lavnb/AJa0/wCRMX/NOP5TH3L4EXf8rV87f8taf8iYv+acfymPuXwIqkf5m+fZByjnDr0q&#xA;tvGR+C4/lMfcvgRWP+aXnlGKvdKrDqDBGD/xHH8pj7l8CLX/ACtXzt/y1p/yJi/5px/KY+5fAi7/&#xA;AJWr52/5a0/5Exf804/lMfcvgRd/ytXzt/y1p/yJi/5px/KY+5fAi7/lavnb/lrT/kTF/wA04/lM&#xA;fcvgRYr5i/P38xrDUvqtvcQhEVSWeCM8uQr4Dbtms1UhjnwgONlAiaASLzt+Zt95y8r22m3mmlNV&#xA;hu0uHuYPijlVY5Eb4Kckasg8R8s1gxVMyHVys+u8TCMZH0kfdTENBub3RdYtdTbSor8Wr8zZX8DS&#xA;28mxFJI/h5DevzyZiXAS2VJjIztEU5EniFIAr2A8MaQzl/zOu4PKNjoFrpqqLZFEt3MzEuVJPwov&#xA;Gg3/AJjh05OLJxjm7SfaROGOIDkzPU/zGuPPX5SwWtzYrbXvlK6srczQ8jHLbT280SNvy4uGgHIE&#xA;712zK0krykn+Kz9riYpWS89zaOQ7FWeflW1m91d22rWF7qHl4vBcalb2MMs3qyQFzbQTenQCJpHM&#xA;pqdzEBQ75q+0pVXxYnEZkAPWZG/KTXHh0ibyi2k8jxgng06a0dQB19UW6xNSvRm+jNVHNKO7eezg&#xA;RQJ4vOJH2so8rfkX5Z8v6xDqcNxNK9vIJoYeMca+oPss/AVan0ZdLUEiqdYIsr8yeXpNSaOe3dVn&#xA;ReBV6gFa1G4r0rk9PqBDY8kTjaR/4L1j+aL/AII/805lfnIebDwy7/BesfzRf8Ef+acfzkPNfDKX&#xA;6v5Z1K0SNpEEgYkD0qtT57Zg63KJ1XR3vYkxAzBPOv0pZ+i7v/fEn/An+mYFPQfmI94d+i7v/fEn&#xA;/An+mNL+Yj3hTks3jNJFKE9mFP14REnonx494eV+ZNK1WfXb2WOyuJIzIQjrE5BA2BBA6bZ2WglG&#xA;OGIJHJ53VTBySPmlv6D1n/q33P8AyJk/pmX4sO8NFh36D1n/AKt9z/yJk/pj4sO8LYd+g9Z/6t9z&#xA;/wAiZP6Y+LDvC2HfoPWf+rfc/wDImT+mPiw7wth36D1n/q33P/ImT+mPiw7wth36D1n/AKt9z/yJ&#xA;k/pj4sO8LYd+g9Z/6t9z/wAiZP6Y+LDvC2Eysj5jtLcQJpszIpJUmGSu5r2GPix7wthC31hr15OZ&#xA;pNPnDEAALDJSg+jHxY94Wwh/0HrP/Vvuf+RMn9MfFh3hbDv0HrP/AFb7n/kTJ/THxYd4Ww79B6z/&#xA;ANW+5/5Eyf0x8WHeFsO/Qes/9W+5/wCRMn9MfFh3hbCV635Ev9URWawuY7mMUjmELnb+VhTcZi6n&#xA;FjyjmAWrJASYlf6Ne6DMkWqxm1ZxyjLgryANKqCAfwzT5MZgaNOHOBimtz5T1q4s4LuX65YRXSep&#xA;azTCVElTb4kV+PJd+q7ZEDi5Fgg/0FHaJV5HuJe8khJH0LXbHhpU48mflF5t8+XP+4iBY9NV+Fxq&#xA;s5426EdQCKmRv8lAfeg3yqcgEgPouX8hdN0n8pr/AMn+X2WbVbx4bmbUbr4DNcRyISx4huCBFZUU&#xA;VpXuSSYYM/DkEjybYGi8v/6Fl/Mf/fun/wDI+T/qlmz/AJRx+bf4od/0LL+Y/wDv3T/+R8n/AFSx&#xA;/lHH5r4oeyfkt+W195N8uX9nrK28l9fXXqSNCTIhgWNVjViyr0bmenfNdrM4ySBHKmuWTewzRfLW&#xA;irMJRb/EDyC8m41+VcwuAOQdfmIq0zyThuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KvlD/AJyb/wCVaf4//wBP/S/6e+rw/Xfq3o/VfT4/uuHrfFy4/a4/D/suWXY7phJ6&#xA;fpn+CP8AC2g/45/SNPq3+4j9N+h6vo8Y60/Rn7NOH9/8X01ww49+FO3Vhn50/wDKsf8ACI/Q/wBY&#xA;/RfqRfWf0P8Ao6leW31n1v8AT+tKfsVpXfCOO90Gk+/5xT/wN+g9b/w3+kfrnrW/6U/SPDj9l/R9&#xA;H0vgp9uv7XjtxyvJaYvdcrZOxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:f9da1136-60a6-9a45-a0d3-9ac70917622c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:f9da1136-60a6-9a45-a0d3-9ac70917622c</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:dd9b9760-91eb-cb4d-b268-2385fd41c44b</stRef:instanceID>
            <stRef:documentID>xmp.did:dd9b9760-91eb-cb4d-b268-2385fd41c44b</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:32ce784c-d468-3445-8a7d-5736075e2ae3</stEvt:instanceID>
                  <stEvt:when>2018-06-29T18:15:31+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:50426b47-aee2-dd4e-a612-49832bacb022</stEvt:instanceID>
                  <stEvt:when>2018-07-16T09:40:19+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:de5575c6-ac16-0b48-8012-7fc1252d4479</stEvt:instanceID>
                  <stEvt:when>2018-07-16T10:46:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:56c908a7-1220-f247-af16-0c551942a63f</stEvt:instanceID>
                  <stEvt:when>2018-07-17T08:57:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2640097c-189a-8d4a-afe6-1b88320ee9bd</stEvt:instanceID>
                  <stEvt:when>2018-07-23T15:03:24+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f9da1136-60a6-9a45-a0d3-9ac70917622c</stEvt:instanceID>
                  <stEvt:when>2018-07-23T16:48:31+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=44 B=90</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>43</xmpG:green>
                           <xmpG:blue>89</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=214 B=255</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>214</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=240 G=240 B=255</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>239</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=162 G=116 B=232</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>161</xmpG:red>
                           <xmpG:green>116</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=163 B=177</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>177</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -463.711 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 463.711 li
633.242 463.711 li
633.242 0 li
cp
clp
160.565 161.238 mo
160.565 161.238 156.915 143.33 152.469 138.872 cv
148.023 134.414 141.109 129.858 135.172 135.779 cv
129.235 141.7 134.512 148.574 138.617 152.689 cv
142.721 156.804 160.565 161.238 160.565 161.238 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.372549 .388235 .541176 rgb
f
168.254 175.439 mo
168.254 175.439 157.11 164.32 151.666 162.841 cv
146.223 161.363 138.871 160.715 137.165 166.996 cv
135.459 173.278 142.662 176.133 147.686 177.497 cv
152.711 178.862 168.254 175.439 168.254 175.439 cv
cp
.94902 .172549 .352941 rgb
f
169.473 176.573 mo
169.473 176.573 180.643 165.48 182.146 160.043 cv
183.649 154.606 184.331 147.257 178.057 145.523 cv
171.784 143.788 168.895 150.977 167.508 155.996 cv
166.121 161.015 169.473 176.573 169.473 176.573 cv
cp
.831373 .831373 .996078 rgb
f
175.852 195.574 mo
175.911 195.567 175.971 195.553 176.029 195.534 cv
176.555 195.364 176.844 194.801 176.674 194.275 cv
166.407 162.473 153.755 149.952 142.702 140.713 cv
142.277 140.359 141.647 140.417 141.293 140.839 cv
140.939 141.262 140.995 141.893 141.419 142.247 cv
152.258 151.307 164.667 163.594 174.771 194.89 cv
174.921 195.357 175.382 195.636 175.852 195.574 cv
cp
.0705882 .0901961 .160784 rgb
f
169.603 177.565 mo
170.029 177.509 170.387 177.18 170.459 176.735 cv
172.522 164.113 176.218 155.571 176.255 155.487 cv
176.477 154.98 176.247 154.391 175.741 154.169 cv
175.233 153.946 174.644 154.179 174.424 154.684 cv
174.268 155.039 170.592 163.525 168.486 176.412 cv
168.396 176.957 168.767 177.471 169.311 177.56 cv
169.411 177.576 169.508 177.577 169.603 177.565 cv
cp
f
145.598 168.451 mo
145.629 168.88 145.937 169.256 146.377 169.353 cv
158.859 172.138 167.174 176.32 167.257 176.362 cv
167.749 176.612 168.351 176.416 168.602 175.924 cv
168.853 175.43 168.655 174.829 168.164 174.579 cv
167.818 174.403 159.558 170.246 146.813 167.402 cv
146.274 167.281 145.739 167.621 145.619 168.159 cv
145.597 168.258 145.59 168.356 145.598 168.451 cv
cp
f
603.831 403.024 mo
603.831 403.024 609.385 386.103 614.191 382.29 cv
618.998 378.478 626.203 374.847 631.281 381.248 cv
636.359 387.65 630.477 393.706 626.04 397.227 cv
621.602 400.745 603.831 403.024 603.831 403.024 cv
cp
.831373 .831373 .996078 rgb
f
600.255 415.929 mo
600.255 415.929 613.13 408.171 618.36 408.302 cv
623.591 408.433 630.293 409.947 630.124 416.678 cv
629.955 423.407 622.794 424.126 617.967 424.005 cv
613.139 423.884 600.255 415.929 600.255 415.929 cv
cp
.372549 .388235 .541176 rgb
f
583.242 431.451 mo
583.242 431.451 596.609 424.576 601.819 425.059 cv
607.028 425.541 613.614 427.502 612.993 434.206 cv
612.373 440.909 605.18 441.145 600.371 440.699 cv
595.562 440.254 583.242 431.451 583.242 431.451 cv
cp
1 .639216 .694118 rgb
f
591.486 414.524 mo
591.486 414.524 581.184 400.824 580.719 394.874 cv
580.253 388.925 581.182 381.142 588.827 380.544 cv
596.472 379.946 598.126 387.987 598.557 393.479 cv
598.986 398.971 591.486 414.524 591.486 414.524 cv
cp
.94902 .172549 .352941 rgb
f
578.351 446.308 mo
578.77 446.3 579.154 446.022 579.277 445.598 cv
587.812 416.227 598.643 407.429 603.848 403.201 cv
604.276 402.853 604.665 402.537 605.007 402.246 cv
605.804 401.57 606.698 400.78 607.658 399.931 cv
611.876 396.205 617.652 391.103 621.536 390.127 cv
622.064 389.995 622.385 389.459 622.252 388.931 cv
622.119 388.403 621.58 388.082 621.056 388.215 cv
616.707 389.307 610.966 394.379 606.352 398.454 cv
605.403 399.292 604.518 400.074 603.73 400.743 cv
603.397 401.027 603.02 401.332 602.604 401.671 cv
597.244 406.025 586.091 415.084 577.385 445.047 cv
577.232 445.57 577.533 446.116 578.056 446.269 cv
578.154 446.298 578.253 446.31 578.351 446.308 cv
cp
.0705882 .0901961 .160784 rgb
f
591.506 415.51 mo
592.028 415.5 592.456 415.081 592.472 414.554 cv
592.494 413.795 592.998 395.907 590.093 389.278 cv
589.874 388.779 589.293 388.552 588.794 388.77 cv
588.295 388.988 588.068 389.57 588.286 390.069 cv
591.016 396.296 590.506 414.313 590.501 414.494 cv
590.484 415.038 590.912 415.493 591.456 415.51 cv
591.473 415.51 591.489 415.51 591.506 415.51 cv
cp
f
609.47 432.561 mo
609.529 432.041 609.172 431.562 608.651 431.476 cv
607.902 431.352 590.24 428.47 583.282 430.467 cv
582.76 430.616 582.457 431.162 582.606 431.686 cv
582.757 432.21 583.303 432.512 583.826 432.362 cv
590.361 430.487 608.15 433.392 608.329 433.421 cv
608.866 433.51 609.374 433.147 609.463 432.61 cv
609.465 432.593 609.468 432.576 609.47 432.561 cv
cp
f
588.993 420.222 mo
589.178 420.219 589.363 420.163 589.527 420.052 cv
597.333 414.743 620.291 417.144 620.522 417.169 cv
621.062 417.226 621.55 416.835 621.608 416.294 cv
621.667 415.753 621.275 415.267 620.733 415.208 cv
619.762 415.104 596.817 412.71 588.419 418.421 cv
587.969 418.728 587.852 419.341 588.158 419.791 cv
588.352 420.077 588.671 420.229 588.993 420.222 cv
cp
f
509.333 171.378 mo
509.333 171.378 505.814 154.947 507.919 149.554 cv
510.024 144.161 514.171 137.776 521.353 140.579 cv
528.535 143.382 526.62 151.116 524.678 156.094 cv
522.734 161.072 509.333 171.378 509.333 171.378 cv
cp
.94902 .172549 .352941 rgb
f
507.766 178.502 mo
507.766 178.502 516.684 167.124 521.48 165.17 cv
526.277 163.215 532.906 161.805 535.162 167.341 cv
537.417 172.875 531.17 176.281 526.742 178.085 cv
522.314 179.889 507.766 178.502 507.766 178.502 cv
cp
.831373 .831373 .996078 rgb
f
502.076 221.947 mo
501.949 222.001 501.81 222.03 501.663 222.027 cv
501.111 222.014 500.674 221.556 500.686 221.004 cv
501.302 194.647 505.474 181.062 508.519 171.143 cv
509.051 169.413 509.546 167.805 509.975 166.269 cv
512.904 155.794 514.932 149.67 517.88 145.269 cv
518.185 144.811 518.809 144.686 519.267 144.995 cv
519.726 145.301 519.849 145.923 519.54 146.382 cv
516.744 150.559 514.773 156.538 511.901 166.809 cv
511.467 168.359 510.968 169.983 510.431 171.731 cv
507.42 181.538 503.295 194.971 502.685 221.05 cv
502.677 221.454 502.427 221.799 502.076 221.947 cv
cp
.0705882 .0901961 .160784 rgb
f
506.831 179.979 mo
507.145 180.272 507.627 180.338 508.017 180.11 cv
519.058 173.656 527.996 171.061 528.085 171.036 cv
528.616 170.884 528.924 170.331 528.772 169.8 cv
528.621 169.267 528.066 168.962 527.536 169.113 cv
527.163 169.219 518.282 171.794 507.008 178.383 cv
506.53 178.661 506.37 179.275 506.648 179.751 cv
506.7 179.838 506.761 179.914 506.831 179.979 cv
cp
f
277.276 172.465 mo
277.276 172.465 288.57 160.022 289.457 154.301 cv
290.345 148.581 289.965 140.977 282.346 139.795 cv
274.728 138.612 272.5 146.262 271.681 151.543 cv
270.861 156.823 277.276 172.465 277.276 172.465 cv
cp
1 .639216 .694118 rgb
f
276.193 177.847 mo
276.193 177.847 271.556 164.155 267.679 160.719 cv
263.802 157.284 258.017 153.755 254.053 158.228 cv
250.089 162.701 254.852 167.986 258.43 171.157 cv
262.009 174.328 276.193 177.847 276.193 177.847 cv
cp
.372549 .388235 .541176 rgb
f
258.16 219.841 mo
258.243 219.951 258.349 220.046 258.477 220.117 cv
258.961 220.383 259.57 220.206 259.836 219.723 cv
272.538 196.621 275.751 182.778 278.098 172.67 cv
278.507 170.907 278.887 169.269 279.287 167.725 cv
282.013 157.195 283.334 150.881 282.996 145.595 cv
282.961 145.046 282.484 144.624 281.934 144.661 cv
281.382 144.696 280.964 145.172 281 145.723 cv
281.321 150.739 280.023 156.899 277.35 167.224 cv
276.947 168.783 276.563 170.437 276.15 172.218 cv
273.829 182.212 270.652 195.9 258.083 218.759 cv
257.888 219.113 257.932 219.536 258.16 219.841 cv
cp
.0705882 .0901961 .160784 rgb
f
259.039 161.476 mo
258.88 161.876 258.993 162.348 259.347 162.628 cv
269.363 170.579 275.022 177.969 275.078 178.043 cv
275.412 178.483 276.039 178.569 276.478 178.235 cv
276.921 177.901 277.004 177.273 276.671 176.834 cv
276.437 176.525 270.818 169.181 260.59 161.062 cv
260.158 160.718 259.528 160.791 259.185 161.223 cv
259.122 161.302 259.074 161.387 259.039 161.476 cv
cp
f
114.516 414.409 mo
113.286 414.409 112.128 413.655 111.675 412.433 cv
35.5737 207.719 li
35.1796 206.659 35.4081 205.469 36.1659 204.631 cv
182.308 42.9807 li
183.43 41.739 185.347 41.6428 186.588 42.7644 cv
187.83 43.8869 187.926 45.8035 186.804 47.0447 cv
41.8954 207.331 li
117.356 410.322 li
117.939 411.891 117.14 413.635 115.571 414.218 cv
115.223 414.348 114.867 414.409 114.516 414.409 cv
cp
level3{
gsave
clp
[-63.3054 372.426 -372.426 -63.3054 124.452 49.5518 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.454902 .27451 .721569 ]
/C1 [.698039 .729412 .929412 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-63.3054 372.426 -372.426 -63.3054 124.452 49.5518 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~FEDVHFEM_KF`qqOG'A.SGBe@WG^4R[H$Xd_H@(!cH[C-fI!g?jI=6QnIXZcrIt*!!J:N3%JUrE)JqAW-
K7ef0KS5#4KnY58L5(G<LPLY@LkpkDM2@(HMMd:LMi3LON/W^SNK&pWNfK-[O,o?_OH>QcOcbcgP*1uk
P*;)nPE_;rPa.N!Q'R`%QC!r)Q^F/-R$jA1R@9S5R[T_8S"#q<S=H.@SXl@DSt;RHT:_dLTV/!PTqS3T
U8"BWUSFT[Unjf_V5:#cVP^5gVl-GkW2QYoWMuksWiE)!X/i;%XK8M)Xf\_-Y-+q1YHP.5Yct@9Z*CR=
~>
<~7Rfj;7n?0B8P2TI91qrP9heAX:JXb_:f1(f;H$Ln<)cjt<`W:'=BJ^/=^#!5>?kE=?!^iD?XI2K@:<VS
@q0"ZA7]=aAnPahBP;*oC2.O"Ci!p)D/O60DfBZ8EH-#>F)uGFF`hkNG'A.TG^4R\H@(!cI!g?jIXZcr
It3'#JV&K+K7no2KnY89LPL\AM2@(HMMmCON/`gWNfK0]OH>TeP*2#mPE_;sQ'R`&Q^F/-R@0M4S"#q<
S=Q4BStDXJTV8'QU8"EXUnji`VP^5gVl6PnWN)u!X/i>'Xf\b/YHP17Yd(I=ZEpmE['d<L[^NZS\@B)[
~>
<~\@B&Y\@K/\\[f;_]"5Jb]=Y\e]Y(ni]Y2"l]tV4p^:q@s^V@P!^qdb$_83t(_8=(+_SX4._o'F2`5KU5
`Pog8`l?$<`lH-?a2c9BaN2HEaiVZIb0%lLbKJ)PbKS2Sbfn>Vc-=MYcHa_\cd0q`d*U.dd*^7gdF$Cj
daHRme'ldpeC<!teCE+"e^i=&f%/I)f@SX,f\"j/g"G'3g"P06g=k<9gY:N=gt^]@h;-oChVR,GhV[5J
hr!AMi8EPPiSibTio8tWj5]1[j5f:^jQ,FajlPUdk2tggkND$kkih6okiq?rl07KulK[[#lg*m&m-O**
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
84.7475 416.063 mo
83.5385 416.063 82.3964 415.334 81.9267 414.141 cv
.677178 207.773 li
.317803 206.86 .422784 205.828 .959893 205.006 cv
11.9687 188.151 li
12.0478 188.029 12.1357 187.914 12.2319 187.805 cv
163.762 15.7854 li
164.869 14.53 166.783 14.4084 168.039 15.5149 cv
169.294 16.6213 169.416 18.5359 168.31 19.7917 cv
16.9238 191.648 li
6.89105 207.009 li
87.5663 411.921 li
88.1796 413.478 87.414 415.238 85.8569 415.85 cv
85.4926 415.994 85.1166 416.063 84.7475 416.063 cv
cp
level3{
gsave
clp
[-63.3055 372.426 -372.426 -63.3055 96.2352 44.7554 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-63.3055 372.426 -372.426 -63.3055 96.2352 44.7554 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
200.436 32.5217 mo
200.436 44.6951 190.568 54.5637 178.394 54.5637 cv
166.22 54.5637 156.352 44.6951 156.352 32.5217 cv
156.352 20.3479 166.22 10.4792 178.394 10.4792 cv
190.568 10.4792 200.436 20.3479 200.436 32.5217 cv
cp
.290196 .152941 .490196 rgb
f
44.0849 206.209 mo
44.0849 218.382 34.2162 228.251 22.0419 228.251 cv
9.86907 228.251 -6.77e-05 218.382 -6.77e-05 206.209 cv
-6.77e-05 194.035 9.86907 184.166 22.0419 184.166 cv
34.2162 184.166 44.0849 194.035 44.0849 206.209 cv
cp
level3{
gsave
clp
[-63.3055 372.426 -372.426 -63.3055 55.1775 11.2746 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-63.3055 372.426 -372.426 -63.3055 55.1775 11.2746 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
204.793 73.824 mo
204.793 73.824 li
201.321 76.1628 196.566 75.2351 194.227 71.7624 cv
180.47 51.3362 li
178.131 47.8635 179.058 43.1086 182.531 40.7693 cv
182.531 40.7693 li
186.004 38.4304 190.759 39.3581 193.098 42.8313 cv
206.855 63.2571 li
209.194 66.7297 208.267 71.4851 204.793 73.824 cv
cp
level3{
gsave
clp
[-44.6455 -67.093 67.093 -44.6455 233.067 116.513 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.454902 .27451 .721569 ]
/C1 [.290196 .152941 .490196 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-44.6455 -67.093 67.093 -44.6455 233.067 116.513 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~FE;MEF)uDCEcQ2@EcH)=EH,u;E,]c8E,TZ5Df9Q3DJj?0DJa6-D/F-+Ci!p(Chmg%CMR^#C2.KuC2%Br
Bk_9qBP;'mBP;$kB4kjiAnGXeAnGUcAS#FaA7T4]A7T1[@q0"Y@U`eU@U`bS@:<SQ?smAM?sm>K?XI/I
?X@&F?=$rD?!U`A?!LW>>[1N<>?b<9>?Y36>$>*4=]nm1=]ed.=BJ[,='&I)=&r@&<`W7$<E3%!<E)ps
<)cgr;c?Un;c?Rl;GpCj;,L1f;,L.d:f'tb:JXb^:JX_\:/4PZ9he>V9he;T9MA,R91qoN91qlL8kM]J
~>
<~7R]a777BX6779O36psF26pj=/6UO4.6UF++6:+"*6:*t(5s[e&5s[b$5X7S"5X7Ou5<h@s5<h=q5!D.o
5!D.n4Ztqk4Ztqj4?P_g4?P_f4$,Mc4$,Mb3]];_3]];_3B9)[3B9)[3&ilW3&ilW2`EZS2`EZS2E!HO
2E!HO2Dm?L2)R6K2)I-H1c.$G1c$pD1G^gC1GU^@1,:U?1,:R=0ekC;0ek@90JG170JG.50/"t30/"q1
/hSb//hSb./M/P+/M/P*/1`>'/1`>&.k<,#.k<,".Olnt.Olnt.4H\p.4H\p-n$Jl-n$Jl-RU8h-RU8h
~>
<~\@8rV\$i`R[^ENN[C*BK['[0GZa6sCZEgd@Z*CR<Yct@8YHP.5Y-+q1Xf\_-XK8M)XK/D&X/`2"Wi;ts
WMuhpW2QVlVl-DhVP^5eV5:#aUnjf]USFTZU8"BVTqS0RTV.sNTV%jKT:VXGSt2FCSXl:@S=H(<S"#k8
R[T\5R@0J1R$a8-Q^=&*QBmi&Q'IW"Pa%DsP`q;pPEM)lP*(lhOcb`eOH>NaO,o<]NfK-ZNK&pVN/W^R
Mi3LOMMd:KM2@(GLkpkCLkgb@LPCP<L4t>8KnY25KS4u1K7ec-JqAT*JUrB&J:N0"It)rtIXZ`pI=6Nl
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
278.022 110.348 mo
200.17 156.211 li
200.17 156.211 143.307 84.8401 193.233 55.4285 cv
243.16 26.0168 278.022 110.348 278.022 110.348 cv
cp
level3{
gsave
clp
[48.5939 64.4619 -64.4619 48.5939 192.973 68.364 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.5939 64.4619 -64.4619 48.5939 192.973 68.364 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
122.427 417.632 mo
78.3417 417.632 li
78.3417 405.458 88.2109 395.59 100.384 395.59 cv
112.558 395.59 122.427 405.458 122.427 417.632 cv
cp
level3{
gsave
clp
[-63.3058 372.428 -372.428 -63.3058 166.093 30.1274 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-63.3058 372.428 -372.428 -63.3058 166.093 30.1274 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
180.381 448.307 mo
20.3871 448.307 li
13.3051 448.307 7.5639 442.566 7.5639 435.484 cv
7.5639 426.906 li
7.5639 419.824 13.3051 414.083 20.3876 414.083 cv
180.381 414.083 li
187.464 414.083 193.205 419.824 193.205 426.906 cv
193.205 435.484 li
193.205 442.566 187.464 448.307 180.381 448.307 cv
cp
level3{
gsave
clp
[-63.3055 372.426 -372.426 -63.3055 168.489 30.5355 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-63.3055 372.426 -372.426 -63.3055 168.489 30.5355 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
199.936 156.002 mo
202.333 160.083 221.747 153.126 243.298 140.464 cv
264.848 127.801 280.374 114.229 277.977 110.149 cv
275.58 106.069 256.166 113.026 234.616 125.688 cv
213.065 138.35 197.539 151.922 199.936 156.002 cv
cp
.290196 .152941 .490196 rgb
f
250.648 120.82 mo
250.566 119.635 250.366 118.487 250.06 117.386 cv
245.196 119.746 239.973 122.54 234.616 125.688 cv
229.844 128.491 225.369 131.34 221.316 134.12 cv
224.713 137.532 229.505 139.518 234.685 139.159 cv
244.157 138.503 251.304 130.293 250.648 120.82 cv
cp
1 1 1 rgb
f
586.78 354.03 mo
586.78 354.03 563.446 422.762 559.408 421.653 cv
555.371 420.542 570.269 349.489 570.269 349.489 cv
586.78 354.03 li
cp
.372549 .388235 .541176 rgb
f
560.013 420.53 mo
560.485 420.53 560.919 420.217 561.05 419.739 cv
579.846 351.389 li
580.003 350.815 579.666 350.224 579.094 350.066 cv
578.52 349.907 577.929 350.244 577.77 350.819 cv
558.976 419.169 li
558.817 419.742 559.154 420.334 559.727 420.491 cv
559.823 420.518 559.919 420.53 560.013 420.53 cv
cp
.0705882 .0901961 .160784 rgb
f
600.668 339.259 mo
594.661 337.607 591.271 330.814 593.113 324.115 cv
594.955 317.417 601.342 313.311 607.35 314.963 cv
613.357 316.615 616.746 323.409 614.904 330.108 cv
613.062 336.806 606.676 340.91 600.668 339.259 cv
cp
579.066 362.307 mo
584.481 363.796 587.857 344.201 598.212 346.462 cv
598.359 346.507 598.498 346.568 598.647 346.609 cv
608.29 349.26 618.54 342.671 621.496 331.92 cv
624.453 321.169 619.014 310.265 609.37 307.613 cv
599.727 304.961 589.477 311.552 586.521 322.303 cv
586.478 322.458 586.455 322.613 586.416 322.768 cv
584.985 327.072 573.923 360.893 579.066 362.307 cv
cp
.94902 .172549 .352941 rgb
f
558.33 314.551 mo
560.173 307.853 566.559 303.746 572.566 305.399 cv
578.574 307.051 581.963 313.845 580.121 320.543 cv
578.279 327.241 571.893 331.346 565.886 329.695 cv
559.878 328.042 556.488 321.249 558.33 314.551 cv
cp
551.738 312.738 mo
548.782 323.489 554.222 334.393 563.865 337.044 cv
564.014 337.085 564.164 337.104 564.313 337.141 cv
574.369 340.492 567.251 359.058 572.666 360.547 cv
577.81 361.961 585.595 327.24 586.566 322.81 cv
586.612 322.655 586.671 322.511 586.713 322.356 cv
589.67 311.605 584.23 300.7 574.588 298.048 cv
564.945 295.397 554.695 301.987 551.738 312.738 cv
cp
level3{
gsave
clp
[-49.4829 -16.1358 -16.1358 49.4829 612.013 341.807 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .639216 .694118 ]
/C1 [.94902 .172549 .352941 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-49.4829 -16.1358 -16.1358 49.4829 612.013 341.807 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrVc]nrVc]nrVc]nrVc]nrVc]nr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9f
qtp9fqtp9fqtp9fqtp9eqYL'bqYL'bqYL'bqYL'bqYL'aq>'j^q>'j^q>'j^q>'j^q>'j]q"XXZq"XXZ
q"XXZq"XXZq"XUXp\4FVp\4FVp\4FVp\4FVp\4CTp@e4Rp@e4Rp@e4Rp@e4Rp@e1Pp%A"Np%A"Np%A"N
p%A"Np%7nKo^qeJo^qeJo^qeJo^qeJo^h\GoCMSFoCMSFoCMSFoCMSFoCDJCo()ABo()ABo()ABo()AB
~>
<~US=KVTqJ'NT:VXFSXc4?S"#k8R@0G0Q^=#(Q'IW!P`q;oP*(lgOH5H`NfK*YN/W[QMMd7ILkpkBLPCP;
KnP,3K7\]+JUr?%It)orI=6KjH[C*cH?jd\G^"@TG'.qLFEDSFEcQ/>E,]`6DJj?/D/=$(CMITuBkV0m
B4kggAS#C_@q/tW@:<PO?sd8I?<piA>[(E9>$>'3=BJX+<`W4#<)cdp;c6Lj;,C(b:JOYZ9he;T91qlL
8P)HD7n6$<7R]a66pj=.6:!n&5X.It5!D+m4?P\e3]]8]3B/uW2`<QO2)I-G1GU^@0ek@90/"q1/M/M)
~>
<~Z*:I9YHP+3Y-"h.XK8M(X/i8#Wi;tsW2QYmVl-DhVPU,cUnjf]USFQXU7n9STV.sMT:VXGSXl=AS=H(<
S!oe7R@0J1R$a5,Q^3r'Q'IW!Pa%AqPEM)lOcbcfOH>NaO,f6[NK&mUN/NUPMMd:JM2@%ELkgb@L5(G:
KnY25KS+o0JqAT*JUr?%J:E&uIXZ`oI=6KjH[C*cH?sj^H$FRYGB\7SG'8"NF`__IF)uDCEcQ/>EH#l9
Df9Q3DJj<.D/=$)CMR["C2%BrBP;'lB4kggAn>ObA7T4\@q/tW@UW\R?smAL?XI,G?<piB>[1N<>?b97
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
557.687 425.853 mo
557.687 425.853 li
554.858 426.43 552.071 424.587 551.494 421.757 cv
528.779 310.34 li
528.203 307.51 530.046 304.723 532.875 304.147 cv
532.875 304.147 li
535.705 303.57 538.491 305.412 539.068 308.242 cv
561.784 419.659 li
562.36 422.489 560.518 425.277 557.687 425.853 cv
cp
level3{
gsave
clp
[-25.178 -115.59 -115.59 25.178 558.801 427.065 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.372549 .388235 .541176 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-25.178 -115.59 -115.59 25.178 558.801 427.065 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8Muqr;6Bfq>'g\p\+=Ro^qbHo'u8>n*f]4mHj3*lK[Wuki_-kjlPRaj5T(Wi8EMMhVI#CgY:H9g"=s/
f%/C%eC2mpdF$=fcd'h\bfn8Rb/qcHa2c3>`Pf^4_SX.*^q[Xu]tM(k]=PSa\@B#W[^ENMZa6sCZ*:I9
Y-+n/XK/D%WMuhpVl$>fUnjc\U7n9RT:_^HSXc4>R[TY4R$X/*Q'ISuPEM)kOH>NaNfB$WMi3IMM26tC
L5(D9KS+o/JUr?%IsuipI!g9fH?jd\GB\4RF`__HEcQ/>E,TZ4D/F**CMITuBP;$kAn>Oa@q/tW@:3JM
~>
<~s8Muqr;6BfqYBp]p\4CSp%7nJo()>?nF,i6mHs9,lg!d"l0.<nk2tddjQ#7ZiSi_Phqm5Ggt^Z=g=b03
f@SU)e^W*te'cXkd*U+acHXVXbKJ&MaiMQD`l?!:`5BL0_SO%'^V@Lr]tCth]"5G^\@8rU[C*BKZa-mA
Yct=7Y-"h-XK/A$WMuhoVl$>fUnjc[U7n9RT:_^HSXc4>S!ob5R$a5+QBd]!PEV/lOcYZcNfK*YN/NUO
M2@%ELPCP;KnP)2JqAQ(J:E&tI=6KiH[:!`G^+FVG'.qLFE;JCEH,r9Df0E/Ci!m%C2%BqB4kggARo=]
~>
<~s8N#rrVZTjqtg0bq>'g\p\4CTp%@tLo^h\Fo'u8>nF,i7mdBK0m-O'(lK[Wul0.?okN:pgjlGL`j5].Y
iSi_Qhr!>JhVI#CgtUT;g=b04f\"g-f%/C%eC<!se'c[ldEp7dcd0n^c-=JVbKJ&NaiVZGaN)?@`l5p8
`5KR2_SX.*^qd_"^V7Fq]tD"i]=PSa\[f5[\$rfS[C*BK['R*EZE^[=Yck76Y-+n/XK8J'WiE%tWMlbn
Vl$>fV50o_USFQXTqS-PT:_aISt2FBS=?":R[KS3R$a5,QBmf$Pa%DrPEM)kOcYZcO,o<]NK&mUMi3IM
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
555.488 426.966 mo
555.488 426.966 li
552.442 428.072 549.044 426.487 547.937 423.44 cv
509.537 317.776 li
508.431 314.73 510.017 311.332 513.062 310.225 cv
513.062 310.225 li
516.109 309.118 519.507 310.704 520.613 313.75 cv
559.014 419.414 li
560.12 422.461 558.534 425.859 555.488 426.966 cv
cp
.372549 .388235 .541176 rgb
f
522.447 368.349 mo
587.399 368.349 li
587.399 400.663 580.341 448.307 580.341 448.307 cv
530.597 448.307 li
530.597 448.307 522.447 402.423 522.447 368.349 cv
cp
.290196 .152941 .490196 rgb
f
524.173 293.16 mo
533.263 288.745 538.53 280.785 552.483 272.339 cv
566.436 263.892 588.133 254.705 583.711 237.993 cv
579.289 221.281 547.794 234.751 539.897 240.726 cv
533.761 245.369 526.832 250.66 519.473 252.906 cv
511.866 255.229 505.29 253.68 497.511 255.327 cv
487.315 257.487 477.867 263.994 480.318 278.238 cv
482.769 292.482 496.469 295.604 500.213 296.297 cv
505.599 297.294 515.082 297.574 524.173 293.16 cv
cp
level3{
gsave
clp
[104.248 -32.1221 -32.1221 -104.248 529.412 266.494 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .639216 .694118 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[104.248 -32.1221 -32.1221 -104.248 529.412 266.494 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 <~USFT[Unji`V5C,eVl-JlW2ZbqWiE)"X/i>'Xf\_.Y-+t3YHY79Z*CU?ZEpmD['[3J[C3NP\$riV\@B)[
]"5Jb]=Y_g]Y2"l^:q@s^VIY#_83t)_SX4.`5KU5`Poj:`lH-@aN2KFai_cKbKJ)Qbg"DWcHa_]cd0tb
dF$@idaHUne'umse^`7%f%8O*f\"j0g"G*5gY:K<gt^`Ah;7#Ghr!AMi8NYRio8tXj5f:^jlPUdk2tji
kih6pl07KulKdd%m-O-,mI'E1n*f`7nF5u<o()ACoCMVHo_%nNp@e7Tp\=OYq>'j_qYU0er;?KkrVc`p
~>
<~Z*CR=ZEgdBZa7$G['[6K[C3NP\$riV\@B&Z\[f;_]">Sd]=beh]tM+n^:q@s^V@S"^qmk'_SX1,_o'C1
`5KX6`Q#p;`lH-?aN2HEaiVZIb0%oNbKS2Sc-=MXcHa_]cd0tbd*U1fdF-Ike'ldqeC<!ue^`7%f%8O*
f\"j/g"G'4g=k<9gY:N=gtgfBhVR,Hhr!>Li8ESQiSrkVioB(ZjQ,C`jlPXek2tjikNM-nl07HslK[[#
lg*p(m-X3-mI'E1n*f`7nF5r;naZ2@o(2JEo^qeJp%A"Op@e7Tp\4IXq"aa]qYL'cqtp9gr;?NlrVlfq
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
510.778 278.287 mo
511.662 277.952 512.543 277.614 513.425 277.271 cv
534.54 269.046 578.481 240.808 578.923 240.524 cv
579.337 240.258 579.456 239.706 579.189 239.292 cv
578.924 238.879 578.374 238.757 577.959 239.027 cv
577.519 239.31 533.727 267.451 512.779 275.612 cv
491.78 283.793 470.101 289.419 469.885 289.475 cv
469.414 289.599 469.122 290.084 469.244 290.56 cv
469.367 291.035 469.853 291.322 470.329 291.199 cv
470.538 291.146 490.56 285.946 510.778 278.287 cv
cp
1 .639216 .694118 rgb
f
551.074 257.356 mo
551.326 257.26 551.532 257.051 551.613 256.773 cv
557.013 238.327 li
557.15 237.856 556.88 237.362 556.408 237.223 cv
555.935 237.083 555.441 237.356 555.304 237.827 cv
549.905 256.272 li
549.767 256.744 550.037 257.238 550.509 257.377 cv
550.702 257.434 550.899 257.421 551.074 257.356 cv
cp
f
531.523 268.752 mo
531.761 268.662 531.958 268.473 532.048 268.215 cv
537.889 251.685 li
538.053 251.221 537.81 250.713 537.346 250.549 cv
536.881 250.384 536.373 250.628 536.21 251.092 cv
530.369 267.622 li
530.206 268.086 530.448 268.595 530.912 268.758 cv
531.119 268.831 531.334 268.823 531.523 268.752 cv
cp
f
522.997 290.075 mo
523.222 289.989 523.412 289.814 523.509 289.572 cv
523.691 289.115 523.469 288.597 523.012 288.415 cv
501.151 279.684 li
500.695 279.501 500.178 279.724 499.994 280.181 cv
499.811 280.637 500.034 281.155 500.491 281.338 cv
522.352 290.07 li
522.566 290.155 522.796 290.151 522.997 290.075 cv
cp
f
562.03 266.334 mo
562.286 266.237 562.494 266.025 562.573 265.74 cv
562.706 265.267 562.429 264.775 561.955 264.643 cv
545.022 259.921 li
544.55 259.789 544.059 260.066 543.926 260.539 cv
543.794 261.013 544.07 261.504 544.545 261.636 cv
561.477 266.359 li
561.666 266.411 561.859 266.399 562.03 266.334 cv
cp
f
501.003 281.409 mo
501.267 281.309 501.478 281.086 501.552 280.792 cv
507.557 256.81 li
507.676 256.333 507.386 255.85 506.909 255.73 cv
506.432 255.611 505.948 255.901 505.829 256.378 cv
499.824 280.361 li
499.705 280.837 499.995 281.321 500.473 281.44 cv
500.655 281.486 500.839 281.471 501.003 281.409 cv
cp
f
139.312 248.189 mo
132.6 240.634 123.51 237.72 111.599 226.577 cv
99.6879 215.435 84.9667 197.038 70.0776 205.823 cv
55.1889 214.607 76.6879 241.275 84.579 247.257 cv
90.7104 251.906 97.6811 257.143 101.837 263.618 cv
106.133 270.311 106.424 277.061 110.118 284.103 cv
114.958 293.332 123.782 300.663 136.829 294.445 cv
149.875 288.227 149.17 274.195 148.823 270.403 cv
148.324 264.948 146.024 255.742 139.312 248.189 cv
cp
level3{
gsave
clp
[-59.1637 -91.6462 -91.6462 59.1637 112.224 250.369 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-59.1637 -91.6462 -91.6462 59.1637 112.224 250.369 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
128.624 265.111 mo
128.062 264.351 127.498 263.595 126.929 262.839 cv
113.291 244.741 74.204 210.094 73.8105 209.746 cv
73.4428 209.42 72.8803 209.454 72.5536 209.823 cv
72.228 210.191 72.2592 210.753 72.6313 211.079 cv
73.0229 211.426 111.976 245.956 125.506 263.91 cv
139.071 281.907 150.36 301.251 150.473 301.445 cv
150.719 301.863 151.265 302.014 151.69 301.767 cv
152.115 301.52 152.259 300.974 152.012 300.549 cv
151.904 300.363 141.474 282.498 128.624 265.111 cv
cp
1 .639216 .694118 rgb
f
97.558 231.993 mo
97.3974 231.777 97.1415 231.635 96.851 231.632 cv
77.6327 231.432 li
77.1415 231.427 76.7387 231.822 76.7333 232.314 cv
76.727 232.806 77.1235 233.208 77.6147 233.213 cv
96.832 233.412 li
97.3242 233.417 97.7265 233.024 97.7319 232.531 cv
97.7343 232.33 97.6689 232.144 97.558 231.993 cv
cp
f
113.825 247.725 mo
113.674 247.522 113.439 247.383 113.166 247.365 cv
95.6718 246.222 li
95.1811 246.19 94.7573 246.562 94.7255 247.052 cv
94.6923 247.544 95.0654 247.967 95.5556 247.998 cv
113.05 249.143 li
113.541 249.174 113.965 248.803 113.997 248.312 cv
114.012 248.093 113.945 247.888 113.825 247.725 cv
cp
f
136.661 250.156 mo
136.518 249.962 136.296 249.827 136.039 249.8 cv
135.549 249.747 135.11 250.102 135.059 250.591 cv
132.577 274 li
132.524 274.488 132.879 274.926 133.368 274.979 cv
133.857 275.03 134.296 274.676 134.348 274.187 cv
136.83 250.779 li
136.854 250.548 136.789 250.328 136.661 250.156 cv
cp
f
103.232 219.014 mo
103.07 218.794 102.809 218.652 102.514 218.653 cv
102.022 218.654 101.624 219.053 101.625 219.545 cv
101.667 237.123 li
101.669 237.614 102.068 238.012 102.56 238.012 cv
103.051 238.01 103.449 237.611 103.448 237.118 cv
103.406 219.54 li
103.406 219.344 103.341 219.161 103.232 219.014 cv
cp
f
134.277 273.675 mo
134.11 273.448 133.838 273.305 133.535 273.314 cv
108.823 274.031 li
108.331 274.045 107.945 274.455 107.959 274.947 cv
107.973 275.439 108.383 275.826 108.875 275.812 cv
133.587 275.094 li
134.078 275.079 134.465 274.669 134.451 274.178 cv
134.446 273.989 134.382 273.816 134.277 273.675 cv
cp
f
495.565 222.843 mo
496.805 215.167 500.651 207.539 507.338 203.57 cv
516.091 198.373 519.753 197.347 529.208 193.577 cv
538.791 189.756 544.97 180.639 551.727 172.843 cv
555.611 168.362 560.654 163.868 566.57 164.289 cv
571.487 164.638 575.652 168.546 577.424 173.147 cv
579.195 177.747 578.925 182.899 577.906 187.722 cv
575.582 198.719 569.397 208.862 560.684 215.962 cv
553.912 221.48 545.458 225.459 541.001 232.971 cv
536.393 240.734 537.087 250.641 533.177 258.777 cv
528.053 269.44 518.334 278.107 503.286 271.572 cv
488.237 265.036 488.48 249.089 488.723 244.774 cv
489.072 238.567 494.55 229.129 495.565 222.843 cv
cp
level3{
gsave
clp
[-68.0142 99.4042 99.4042 68.0142 564.872 164.702 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-68.0142 99.4042 99.4042 68.0142 564.872 164.702 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
487.378 280.449 mo
487.626 280.397 487.851 280.239 487.98 279.997 cv
488.101 279.775 500.156 257.356 514.817 236.412 cv
529.459 215.497 572.285 174.766 572.716 174.358 cv
573.072 174.019 573.087 173.456 572.748 173.099 cv
572.41 172.743 571.846 172.726 571.49 173.067 cv
571.058 173.476 528.102 214.329 513.358 235.391 cv
498.635 256.424 486.531 278.932 486.411 279.156 cv
486.179 279.59 486.342 280.13 486.774 280.363 cv
486.967 280.465 487.18 280.49 487.378 280.449 cv
cp
1 .639216 .694118 rgb
f
570.75 201.789 mo
571.138 201.708 571.436 201.375 571.457 200.961 cv
571.48 200.47 571.102 200.052 570.61 200.029 cv
546.229 198.844 li
545.736 198.823 545.32 199.199 545.297 199.691 cv
545.273 200.182 545.652 200.599 546.143 200.623 cv
570.524 201.807 li
570.602 201.811 570.678 201.804 570.75 201.789 cv
cp
f
542.957 227.644 mo
543.396 227.552 543.705 227.141 543.659 226.683 cv
543.61 226.195 543.174 225.838 542.685 225.887 cv
519.093 228.262 li
518.595 228.313 518.246 228.748 518.296 229.238 cv
518.345 229.727 518.781 230.083 519.27 230.033 cv
542.862 227.658 li
542.894 227.655 542.926 227.651 542.957 227.644 cv
cp
f
508.014 245.713 mo
508.441 245.623 508.749 245.231 508.719 244.78 cv
506.281 208.969 li
506.249 208.478 505.823 208.108 505.333 208.142 cv
504.847 208.168 504.472 208.599 504.506 209.091 cv
506.942 244.903 li
506.975 245.393 507.4 245.764 507.891 245.73 cv
507.933 245.728 507.974 245.722 508.014 245.713 cv
cp
f
534.569 212.594 mo
534.984 212.507 535.29 212.133 535.275 211.694 cv
534.714 194.516 li
534.698 194.025 534.286 193.639 533.795 193.655 cv
533.303 193.675 532.918 194.083 532.935 194.574 cv
533.496 211.752 li
533.512 212.243 533.924 212.629 534.415 212.613 cv
534.468 212.611 534.519 212.605 534.569 212.594 cv
cp
f
532.23 251.804 mo
532.637 251.718 532.94 251.357 532.937 250.927 cv
532.935 250.435 532.533 250.038 532.042 250.042 cv
503.979 250.21 li
503.485 250.212 503.092 250.615 503.095 251.106 cv
503.098 251.598 503.498 251.994 503.99 251.99 cv
532.053 251.822 li
532.114 251.822 532.173 251.816 532.23 251.804 cv
cp
f
494.696 453.397 mo
130.518 453.397 li
118.432 453.397 108.542 443.508 108.542 431.421 cv
108.542 203.81 li
108.542 191.723 118.432 181.834 130.518 181.834 cv
494.696 181.834 li
506.783 181.834 516.673 191.723 516.673 203.81 cv
516.673 431.421 li
516.673 443.508 506.783 453.397 494.696 453.397 cv
cp
level3{
gsave
clp
[1.53617e-14 -250.876 250.876 1.53617e-14 312.607 443.418 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.53617e-14 -250.876 250.876 1.53617e-14 312.607 443.418 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
499.405 420.76 mo
125.81 420.76 li
125.81 197.71 li
499.405 197.71 li
499.405 420.76 li
cp
level3{
gsave
clp
[1.23562e-14 -201.792 201.792 1.23562e-14 312.607 409.721 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.839216 .839216 1 ]
/C1 [.698039 .729412 .929412 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.23562e-14 -201.792 201.792 1.23562e-14 312.607 409.721 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f%&=$e^`4#eC<!teC<!se'ldpe'landaHRlda?IidF$@hd*U.dd*U.ccd0q`cd0n^cHa_\cHXVYc-=MX
c-4DUbfn;TbKJ)PbKJ)Ob0%lLb0%iJaiVZHaiMQEaN2HDa2c6@a2c6?`l?$<`l?!:`Pog8`Pf^5`5KU4
`5BL1_o'C0_SX1,_SX1+_83t(_83q&^qdb$^q[Y!^V@Ou^:q=q^:q=p]tM+m]tM(k]Y(ni]Xtef]=Y\e
]=PSb]"5Ja\[f8]\[f8\\@B&Y\@B#W\$riU\$i`R[^NWQ[C*EM[C*EL['[3I['[0GZa7!EZa-mBZEgdA
~>
<~f%&=$e^`4#e^`1!eC<!teC<!se'ldpe'ldpdaHRldaHRlda?IidF$@hdF$=fd*U.dd*U.ccd0q`cd0q`
cd'h]cHa_\cHa\Zc-=MXc-=MWbfn;Tbfn;TbKJ)PbKJ)PbK@uMb0%lLb0%iJaiVZHaiVZGaN2HDaN2HD
aN)?Aa2c6@a2c3>`l?$<`l?$;`Pog8`Pog8`5KU4`5KU4`5BL1_o'C0_o'@._SX1,_SX1+_83t(_83t(
_8*k%^qdb$^qd_"^V@Ou^V@Ot^:q=q^:q=q]tM+m]tM+m]tD"j]Y(ni]Y(kg]=Y\e]=Y\d]"5Ja]"5Ja
~>
<~s8N#srr2orrr2orrr2oqrVc]nrVc]nrVc]nrVZTkr;?Kjr;?Kjr;?Kiqtp9fqtp9fqtp9fqtg0cqYL'b
qYL'bqYL'bq>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4CTp@e4Rp@e4Rp@e4R
p@\+Op%A"Np%A"Np%A"Mo^qeJo^qeJo^qeJo^h\GoCMSFoCMSFoCMSEo()ABo()ABo()ABo'u8?naZ/>
naZ/>naZ/>nF5r:nF5r:nF5r:nF5o8n*f`6n*f`6n*f`6mdBN2mdBN2mdBN2mdBK0mHs<.mHs<.mHs<.
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
318.501 442.802 mo
306.714 442.802 li
304.236 442.802 302.208 440.774 302.208 438.296 cv
302.208 438.296 li
302.208 435.818 304.236 433.79 306.714 433.79 cv
318.501 433.79 li
320.978 433.79 323.006 435.818 323.006 438.296 cv
323.006 438.296 li
323.006 440.774 320.978 442.802 318.501 442.802 cv
cp
.635294 .454902 .909804 rgb
f
499.405 210.089 mo
125.81 210.089 li
125.81 197.71 li
499.405 197.71 li
499.405 210.089 li
cp
1 1 1 rgb
f
493.126 203.81 mo
493.126 205.544 491.721 206.949 489.987 206.949 cv
488.253 206.949 486.848 205.544 486.848 203.81 cv
486.848 202.076 488.253 200.67 489.987 200.67 cv
491.721 200.67 493.126 202.076 493.126 203.81 cv
cp
.0705882 .0901961 .160784 rgb
f
482.138 203.81 mo
482.138 205.544 480.732 206.949 478.999 206.949 cv
477.265 206.949 475.859 205.544 475.859 203.81 cv
475.859 202.076 477.265 200.67 478.999 200.67 cv
480.732 200.67 482.138 202.076 482.138 203.81 cv
cp
.454902 .27451 .721569 rgb
f
471.15 203.81 mo
471.15 205.544 469.744 206.949 468.011 206.949 cv
466.277 206.949 464.871 205.544 464.871 203.81 cv
464.871 202.076 466.277 200.67 468.011 200.67 cv
469.744 200.67 471.15 202.076 471.15 203.81 cv
cp
.635294 .454902 .909804 rgb
f
287.587 245.607 mo
189.211 245.607 li
177.049 245.607 167.19 255.466 167.19 267.627 cv
167.19 366.003 li
167.19 378.165 177.049 388.024 189.211 388.024 cv
287.587 388.024 li
299.748 388.024 309.607 378.165 309.607 366.003 cv
309.607 267.627 li
309.607 255.466 299.748 245.607 287.587 245.607 cv
cp
1 1 1 rgb
f
gsave
298.456 388.349 mo
174.565 388.349 li
174.565 248.186 li
298.456 248.186 li
298.456 388.349 li
cp
clp
281.369 409.189 mo
269.876 409.189 li
269.876 381.384 li
281.369 381.384 li
281.369 409.189 li
cp
.0705882 .0901961 .160784 rgb
f
288.29 321.825 mo
286.611 321.825 li
286.611 296.754 li
288.29 296.754 li
292.737 296.754 296.376 300.393 296.376 304.84 cv
296.376 313.739 li
296.376 318.187 292.737 321.825 288.29 321.825 cv
cp
level3{
gsave
clp
[16.6371 0 0 16.6371 279.652 309.29 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0705882 .0901961 .160784 ]
/C1 [.372549 .388235 .541176 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[16.6371 0 0 16.6371 279.652 309.29 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&eYfi',)#n'GM8s'bqK"()Ic'(`4),)&X;1)B'P6)]Kb:*$$%?*Zc@D+!2RI+<VgN+X&$R+sS<W,U=W\
,paia-71)f-RU;j-n-So.Olnt.k<,$/1`A)/M/S-/h\k20JG170ekC<1,:XA1G^jE1c7-J2E!HO2`EZT
3&ioY3BB2^3]fDb4?P_h4Ztql5!D1q5<qJ!5X@\%6:+"+6UO4/6psI477Ka97Ros=84Z9C8P)KG8kM`L
92&#Q9MJ5U:/4P[:JXb_:f("d;,U:i;H$Lm<)cgs<E3%"<`W:'='/R,=BSd0>$>*6>?b<:>[1Q??!^iD
~>
<~(Ddl((`4)-)&X;1)B'P6)]Th;*$$%?*Zc@E+!2RI+<VgN+X&$R+sS<W,U=W\,paia-71)f-RU;j-n-So
.4Qes.k<,$/1`>(/M/S-/h\k20/,(60ekC<1,:U@1G^jE1c.'I2)[?N2`EZS3&ilX3B9,]3]]>a4$5Vf
4?Yhj5!D.p5<h@t5X7V$5sdn)6:4+-6psF377BX77Rfm<7n6*@84cBE8kM]J91qoO9MA/T9heAX:/=Y]
:Jaka;,L1g;GpCk;c?Xp<)lpu<E<.$='&I*=BJ[.=]np3>$>-7>?kE<?!U`A?=$rF?XI2K?smDO@:E\T
~>
<~.4H\q.Olr!/1`>(/M/S-0/"t40JG491,:U@1G^jE2)R6L2E*QR3&ilX3BB2^4$,Md4?Yhj5!D.p5<qJ!
5s[h(6:4+-6psI477Ka97n6*@84cBE8kM`L92&#Q9heAX:/=Y^:f("d;,U:j;c?Xp<)lq!<`W:'='/R-
=]np3>?b<:>[1Q??=$rF?XI2K@:<SR@U`hWA7T4^AS,OdB4kjjBPD0pC2.L!CM[g'D/F--DJsH3E,]c9
EH6)?F)uGFFEM_KG'8(RGBe@WH$O^^H@(!cI!g?jI=?WpIt*!!J:W9'JqAW-K7no3KnY89L51P?LkpnE
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
264.232 342.866 mo
209.331 342.866 li
199.076 342.866 190.685 334.476 190.685 324.22 cv
190.685 294.384 li
190.685 284.129 199.076 275.738 209.331 275.738 cv
264.232 275.738 li
274.487 275.738 282.878 284.129 282.878 294.384 cv
282.878 324.22 li
282.878 334.476 274.487 342.866 264.232 342.866 cv
cp
.372549 .388235 .541176 rgb
f
286.551 372.621 mo
286.551 379.431 281.031 384.951 274.221 384.951 cv
267.412 384.951 261.891 379.431 261.891 372.621 cv
261.891 365.812 267.412 360.291 274.221 360.291 cv
281.031 360.291 286.551 365.812 286.551 372.621 cv
cp
.0705882 .0901961 .160784 rgb
f
266.018 420.359 mo
224.145 420.359 li
208.357 420.359 195.44 407.442 195.44 391.654 cv
195.44 381.502 li
195.44 365.715 208.357 352.797 224.145 352.797 cv
249.418 352.797 li
265.206 352.797 278.123 365.715 278.123 381.502 cv
278.123 408.253 li
278.123 414.911 272.676 420.359 266.018 420.359 cv
cp
.372549 .388235 .541176 rgb
f
249.69 413.724 mo
226.551 413.724 li
218.428 413.724 211.843 407.139 211.843 399.016 cv
211.843 378.986 li
211.843 370.863 218.428 364.279 226.551 364.279 cv
249.69 364.279 li
257.813 364.279 264.398 370.863 264.398 378.986 cv
264.398 399.016 li
264.398 407.139 257.813 413.724 249.69 413.724 cv
cp
level3{
gsave
clp
[5.91497e-12 57.1306 -57.1306 5.91497e-12 238.121 344.064 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.91497e-12 57.1306 -57.1306 5.91497e-12 238.121 344.064 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
261.983 327.092 mo
211.581 327.092 li
205.005 327.092 199.624 321.712 199.624 315.136 cv
199.624 315.136 li
199.624 302.879 209.653 292.852 221.909 292.852 cv
251.654 292.852 li
263.911 292.852 273.939 302.879 273.939 315.136 cv
273.939 315.136 li
273.939 321.712 268.559 327.092 261.983 327.092 cv
cp
.0705882 .0901961 .160784 rgb
f
285.579 324.675 mo
285.214 324.675 li
283.929 324.675 282.878 323.623 282.878 322.339 cv
282.878 296.216 li
282.878 294.931 283.929 293.88 285.214 293.88 cv
285.579 293.88 li
286.864 293.88 287.915 294.931 287.915 296.216 cv
287.915 322.339 li
287.915 323.623 286.864 324.675 285.579 324.675 cv
cp
f
185.273 321.825 mo
186.953 321.825 li
186.953 296.754 li
185.273 296.754 li
180.826 296.754 177.187 300.393 177.187 304.84 cv
177.187 313.739 li
177.187 318.187 180.826 321.825 185.273 321.825 cv
cp
level3{
gsave
clp
[-13.6945 2.83569e-12 -2.83569e-12 -13.6945 192.293 309.29 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.6945 2.83569e-12 -2.83569e-12 -13.6945 192.293 309.29 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
187.984 324.675 mo
188.35 324.675 li
189.635 324.675 190.685 323.623 190.685 322.339 cv
190.685 296.216 li
190.685 294.931 189.635 293.88 188.35 293.88 cv
187.984 293.88 li
186.7 293.88 185.648 294.931 185.648 296.216 cv
185.648 322.339 li
185.648 323.623 186.7 324.675 187.984 324.675 cv
cp
.0705882 .0901961 .160784 rgb
f
243.695 273.377 mo
243.695 275.33 li
243.695 275.556 243.512 275.738 243.287 275.738 cv
231.951 275.738 li
231.726 275.738 231.543 275.556 231.543 275.33 cv
231.543 273.377 li
231.543 270.386 233.99 267.939 236.982 267.939 cv
238.256 267.939 li
241.247 267.939 243.695 270.386 243.695 273.377 cv
cp
level3{
gsave
clp
[2.04992e-12 -19.7995 19.7995 2.04992e-12 237.619 279.998 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.04992e-12 -19.7995 19.7995 2.04992e-12 237.619 279.998 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
235.756 268.594 mo
235.756 268.594 236.235 253.025 237.245 253.025 cv
238.254 253.025 238.923 268.648 238.923 268.648 cv
235.756 268.594 li
cp
level3{
gsave
clp
[2.04992e-12 -19.7995 19.7995 2.04992e-12 237.34 279.998 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.04992e-12 -19.7995 19.7995 2.04992e-12 237.34 279.998 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
219.921 308.3 mo
219.921 310.396 218.684 312.095 217.159 312.095 cv
215.634 312.095 214.397 310.396 214.397 308.3 cv
214.397 306.203 215.634 304.504 217.159 304.504 cv
218.684 304.504 219.921 306.203 219.921 308.3 cv
cp
.94902 .172549 .352941 rgb
f
259.166 308.3 mo
259.166 310.396 257.93 312.095 256.404 312.095 cv
254.879 312.095 253.643 310.396 253.643 308.3 cv
253.643 306.203 254.879 304.504 256.404 304.504 cv
257.93 304.504 259.166 306.203 259.166 308.3 cv
cp
f
244.825 318.631 mo
244.825 321.71 241.224 324.206 236.782 324.206 cv
232.339 324.206 228.738 321.71 228.738 318.631 cv
244.825 318.631 li
cp
f
242.528 352.797 mo
231.035 352.797 li
231.035 342.866 li
242.528 342.866 li
242.528 352.797 li
cp
.0705882 .0901961 .160784 rgb
f
200.312 409.189 mo
188.819 409.189 li
188.819 381.384 li
200.312 381.384 li
200.312 409.189 li
cp
f
242.528 348.557 mo
231.035 348.557 li
231.035 347.107 li
242.528 347.107 li
242.528 348.557 li
cp
.372549 .388235 .541176 rgb
f
207.77 372.621 mo
207.77 379.431 202.25 384.951 195.44 384.951 cv
188.63 384.951 183.11 379.431 183.11 372.621 cv
183.11 365.812 188.63 360.291 195.44 360.291 cv
202.25 360.291 207.77 365.812 207.77 372.621 cv
cp
.0705882 .0901961 .160784 rgb
f
244.776 391.689 mo
246.285 388.035 244.453 383.821 240.831 382.346 cv
237.165 380.854 232.931 382.66 231.458 386.311 cv
229.982 389.968 231.782 394.178 235.41 395.655 cv
239.089 397.152 243.338 395.341 244.776 391.689 cv
cp
253.972 397.64 mo
252.551 397.588 251.136 397.536 249.711 397.485 cv
248.901 398.573 247.971 399.524 246.912 400.352 cv
247.003 401.78 247.094 403.197 247.182 404.566 cv
245.844 405.141 244.539 405.701 243.186 406.282 cv
242.268 405.293 241.302 404.254 240.313 403.191 cv
239.003 403.384 237.675 403.415 236.309 403.248 cv
235.377 404.306 234.44 405.369 233.492 406.446 cv
232.165 405.916 230.847 405.391 229.482 404.847 cv
229.533 403.449 229.584 402.035 229.636 400.595 cv
228.569 399.788 227.606 398.872 226.775 397.792 cv
225.36 397.883 223.945 397.973 222.589 398.06 cv
222.011 396.718 221.445 395.405 220.859 394.046 cv
221.841 393.134 222.88 392.169 223.931 391.194 cv
223.738 389.879 223.706 388.565 223.875 387.193 cv
222.821 386.263 221.749 385.318 220.673 384.368 cv
221.207 383.027 221.733 381.708 222.269 380.362 cv
223.688 380.413 225.103 380.465 226.519 380.516 cv
226.951 379.982 228.809 378.078 229.329 377.643 cv
229.238 376.223 229.147 374.807 229.059 373.44 cv
230.397 372.864 231.701 372.304 233.058 371.721 cv
233.973 372.706 234.938 373.745 235.924 374.807 cv
237.238 374.624 238.566 374.582 239.932 374.755 cv
240.864 373.696 241.801 372.632 242.749 371.557 cv
244.076 372.085 245.394 372.611 246.759 373.155 cv
246.708 374.552 246.657 375.966 246.605 377.393 cv
247.12 377.825 249.032 379.674 249.478 380.208 cv
250.883 380.118 252.299 380.028 253.654 379.942 cv
254.238 381.282 254.809 382.594 255.396 383.943 cv
254.398 384.868 253.359 385.834 252.31 386.809 cv
252.504 388.124 252.534 389.44 252.367 390.81 cv
253.422 391.74 254.493 392.686 255.569 393.634 cv
255.033 394.978 254.508 396.296 253.972 397.64 cv
cp
f
240.002 255.187 mo
240.002 256.656 238.81 257.849 237.34 257.849 cv
235.87 257.849 234.678 256.656 234.678 255.187 cv
234.678 253.716 235.87 252.525 237.34 252.525 cv
238.81 252.525 240.002 253.716 240.002 255.187 cv
cp
.94902 .172549 .352941 rgb
f
grestore
75.8705 438.638 mo
74.227 438.586 72.5864 438.014 71.2133 436.893 cv
59.4033 427.257 31.5619 403.647 28.1127 392.559 cv
25.7284 384.898 27.081 376.65 31.7324 370.497 cv
36.3652 364.368 43.5053 361.11 51.8398 361.322 cv
51.8954 361.324 51.9496 361.326 52.0048 361.327 cv
66.7861 361.794 74.1132 374.254 76.1152 381.571 cv
77.248 385.706 74.8119 389.977 70.6757 391.109 cv
66.5639 392.235 62.3071 389.828 61.1528 385.726 cv
61.0112 385.251 58.475 377.069 51.4999 376.849 cv
51.4814 376.848 51.4633 376.848 51.4443 376.847 cv
48.2065 376.764 45.6738 377.806 44.1196 379.862 cv
42.5058 381.998 42.0527 385.095 42.9404 387.945 cv
44.8095 392.947 64.1493 411.086 81.0307 424.863 cv
84.3534 427.573 84.8491 432.464 82.1371 435.786 cv
80.5468 437.737 78.206 438.712 75.8705 438.638 cv
cp
level3{
gsave
clp
[1.0766e-11 -103.985 103.985 1.0766e-11 55.4219 457.237 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.0766e-11 -103.985 103.985 1.0766e-11 55.4219 457.237 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
61.3603 345.362 mo
149.121 345.362 li
141.13 453.397 li
70.8251 453.397 li
61.3603 345.362 li
cp
level3{
gsave
clp
[1.0766e-11 -103.985 103.985 1.0766e-11 105.241 457.237 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.0766e-11 -103.985 103.985 1.0766e-11 105.241 457.237 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
106.779 276.58 mo
106.779 276.58 92.0922 279.395 90.0727 293.483 cv
88.0527 307.571 103.165 310.198 105.894 314.207 cv
108.623 318.216 113.092 326.428 98.6518 339.669 cv
117.993 334.988 120.281 316.609 111.771 308.161 cv
103.261 299.714 97.1196 300.147 96.9506 289.327 cv
96.7817 278.508 106.779 276.58 106.779 276.58 cv
cp
.94902 .172549 .352941 rgb
f
351.681 180.725 mo
346.056 180.602 339.655 180.227 331.411 179.627 cv
323.167 179.026 315.631 179.957 312.03 171.958 cv
308.429 163.96 331.699 119.94 338.555 122.448 cv
345.409 124.957 327.098 163.636 330.081 163.329 cv
332.744 163.055 334.755 162.892 341.313 162.61 cv
347.872 162.328 361.059 163.405 361.059 163.405 cv
368.14 165.631 372.06 171.686 371.106 178.769 cv
370.222 185.338 357.307 180.847 351.681 180.725 cv
cp
.0705882 .0901961 .160784 rgb
f
334.584 124.117 mo
335.268 121.449 336.721 117.458 336.721 117.458 cv
343.851 120.725 li
343.851 120.725 340.715 124.969 339.761 126.142 cv
338.807 127.316 333.899 126.785 334.584 124.117 cv
cp
level3{
gsave
clp
[1.58752e-12 15.3333 -15.3333 1.58752e-12 339.185 122.237 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.839216 .839216 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.58752e-12 15.3333 -15.3333 1.58752e-12 339.185 122.237 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f%/F'f%/F(f@SX+f@\a.f\"j0g"G'3g"P06g=k97gY:K;gY:N=gt^]?h;-oCh;-rEhVR,GhV[5Jhr!>L
i8EPOi8NYRiSibTio8tWio9"Yj5]1[jQ,C_jQ,FajlPUck2tggk2tghkND$kkNM-nkih6pl07Hsl0@R!
lK[["lg*m&lg*p(m-O**mHs<.mHs?0mdBN2mdKW5n*f`7nF5r:nF?&=naZ/?o()ABo()DDoCMSFo^qeJ
o^qhLp%A"Np@e4Rp@e4Sp\4FVp\=OYq"XX[q>'j^q>0saqYL'bqtp9fqtp<hr;?KjrVc]nrVc`prr2or
~>
<~f%/F'f%/F(f@SX+f@\a.f\"j0g"G'3g"P06g=k97gY:K;gY:N=gt^]?h;-oCh;-rEhVR,GhV[5Jhr!>L
i8EPOi8NYRiSibTio8tWio9"Yj5]1[jQ,C_jQ,FajlPUck2tggk2tghkND$kkNM-nkih6pl07Hsl0@R!
lK[["lg*m&lg*p(m-O**mHs<.mHs?0mdBN2mdKW5n*f`7nF5r:nF?&=naZ/?o()ABo()DDoCMSFo^qeJ
o^qhLp%A"Np@e4Rp@e4Sp\4FVp\=OYq"XX[q>'j^q>0saqYL'bqtp9fqtp<hr;?KjrVc]nrVc`prr2or
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
329.359 105.502 mo
330.26 106.361 344.965 120.392 344.965 120.392 cv
344.965 120.392 345.019 122.738 341.242 124.293 cv
341.277 119.837 335.224 121.237 335.224 121.237 cv
335.224 121.237 327.807 114.34 326.523 109.676 cv
325.24 105.011 328.459 104.643 329.359 105.502 cv
cp
.0705882 .0901961 .160784 rgb
f
434.291 123.975 mo
431.612 115.797 422.102 112.946 414.31 114.714 cv
406.519 116.482 402.035 119.173 396.272 124.232 cv
390.511 129.291 393.314 132.098 376.231 137.64 cv
359.148 143.182 358.094 155.301 359.431 159.074 cv
360.768 162.847 366.064 163.625 366.064 163.625 cv
403.961 160.044 li
403.961 160.044 416.406 158.426 424.377 152.86 cv
432.348 147.294 430.657 135.61 430.657 135.61 cv
430.657 135.61 436.97 132.153 434.291 123.975 cv
cp
f
437.982 178.326 mo
437.982 178.326 442.137 176.338 445.311 177.2 cv
448.486 178.063 451.732 181.751 451.732 181.751 cv
438.076 182.093 li
437.982 178.326 li
cp
.815686 .819608 .988235 rgb
f
346.637 185.48 mo
333.492 186.617 307.716 184.669 305.391 175.398 cv
303.065 166.127 298.001 126.058 305.672 126.135 cv
313.343 126.214 316.38 167.18 319.569 166.823 cv
327.61 165.925 344.31 163.242 351.908 165.558 cv
353.238 165.964 354.209 161.697 363.322 160.325 cv
376.465 158.346 376.115 177.32 372.078 180.719 cv
368.041 184.118 359.781 184.342 346.637 185.48 cv
cp
level3{
gsave
clp
[68.5445 35.4337 -35.4337 68.5445 299.03 148.654 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .388235 .541176 ]
/C1 [.0705882 .0901961 .160784 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.5445 35.4337 -35.4337 68.5445 299.03 148.654 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~?X@&F?!U`@>[1K;>?b97>$5!2=BJ[-='&I(<`W4#<E3!t<)Z^o;GpCj;,L1e:f'q`:JX_\:/+GW9MA,R
91qoM8kMZH8P)HD84Q0?7Rfj:77BX56psC06UO1,6:!n'5X7S"5<h@r5!D+m4Ztni4?GVd3]];_3B9)Z
3&iiU2`<QP2Dm?L1c.$F1G^gB1,:R=0eb:80J>(4/hSb./M/P*/1`;%.k3"u.Oceq-n$Jk-RU8g-71#b
,pX`],U4NY+sJ3S+X&!O+<VaJ+!)IE*ZZ7A*#oq;)]K_7)B'J2)&O2-(`*u)()@Z#'bqGt'GM2o'+toj
~>
<~@q&nV@:<SP?smAL?XI,G?<piB?!LW>>?b<8>$>*4=]nj/=BJX+=&r@&<E3%!<)cgq;c?Rl;Gp@h;,C(c
:JXb^:/4PY9he>U9MA)P91hfK8kDTG84Z9A7n6'=7Rfg877BU46pj=/6:+"*5s[e%5X7Ou5<h=q5!;%l
4Zkhh4$,Mb3]];^3B9&Y3&`cT2`<QP2)R6J1c.$F1G^dA1,:R=0eb:80/"t3/hSb./M/M)/1`;%.k3"u
.4H\p-n$Jk-RU8g-71#b,pX`],U4NY+sJ3S+X&!O+<VaJ+!2OF*ZZ7A*#oq<)]K_7)B'J2)&X8.(`*u)
~>
<~MM[1GLkphAL5(G:KnY25K7ef.JqAQ)J:N0"It)orI=6NkI!^3eH?sm_H$FRYGB\7SG'.qMFEDVGF)l;A
EH,r:E,TZ5DJj<.D/=$)CMR["C2%BrBP;$kB4bafAS#C_A7K+Y@U`bS@:3JM?XI,G?<piA>[1K;>?Y35
=]nj/='&I(<`W4#<)cgq;c?Rl;,L1e:f'q`:/4PY9h\5S91qoM8kDTG84Z9A7n,s;77BX56pj=/6:+")
5sR\#5<h=q5!;%l4?P\e4$#D`3B9&Y3&`cT2E!EM2)I-G1G^dA1,1L;0JG.50.nk//M/M)/1W5#.Olkr
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
302.283 130.166 mo
301.139 126.385 301.088 123.253 301.088 123.253 cv
306.579 121.863 li
306.579 121.863 307.916 125.865 308.625 128.556 cv
309.333 131.248 303.428 133.947 302.283 130.166 cv
cp
level3{
gsave
clp
[1.58752e-12 15.3333 -15.3333 1.58752e-12 304.886 122.237 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.58752e-12 15.3333 -15.3333 1.58752e-12 304.886 122.237 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
407.516 150.687 mo
410.112 150.622 413.97 154.149 415.81 158.433 cv
417.648 162.718 420.224 171.848 420.224 171.848 cv
439.6 177.54 li
438.443 181.803 li
438.443 181.803 420.655 182.28 415.375 178.948 cv
411.903 176.757 407.224 164.413 406.227 159.241 cv
405.231 154.069 404.919 150.752 407.516 150.687 cv
cp
.94902 .172549 .352941 rgb
f
291.222 111.356 mo
292.378 112.016 311.269 122.799 311.269 122.799 cv
311.269 122.799 311.931 125.221 308.409 127.811 cv
307.296 123.173 301.37 126.188 301.37 126.188 cv
301.37 126.188 291.887 120.936 289.352 116.423 cv
286.817 111.909 290.065 110.696 291.222 111.356 cv
cp
.0705882 .0901961 .160784 rgb
f
403.642 147.474 mo
403.642 147.474 410.022 148.435 412.66 154.965 cv
415.297 161.495 413.918 172.249 407.429 176.534 cv
400.939 180.82 398.447 180.058 398.447 180.058 cv
398.447 180.058 378.753 183.85 365.548 183.357 cv
352.343 182.863 363.548 165.356 370.86 161.051 cv
378.174 156.744 390.447 145.759 403.642 147.474 cv
cp
.94902 .172549 .352941 rgb
f
400.573 149.834 mo
401.57 148.785 407.562 137.634 407.562 137.634 cv
407.562 137.634 405.009 133.811 407.502 131.19 cv
409.996 128.568 412.772 134.402 412.772 134.402 cv
429.051 133.804 li
429.051 133.804 427.102 142.892 421.118 149.184 cv
418.732 151.693 415.133 150.33 412.637 148.538 cv
412.637 148.538 411.363 151.43 408.697 154.932 cv
406.031 158.434 399.576 150.883 400.573 149.834 cv
cp
1 1 1 rgb
f
424.012 178.676 mo
424.012 178.676 428.167 176.688 431.342 177.551 cv
434.517 178.413 437.763 182.101 437.763 182.101 cv
424.106 182.444 li
424.012 178.676 li
cp
f
391.703 152.609 mo
394.528 152.538 397.517 156.233 399.518 160.895 cv
401.519 165.556 403.822 175.082 403.822 175.082 cv
424.162 178.935 li
424.128 184.338 li
424.128 184.338 403.048 186.181 397.303 182.556 cv
393.525 180.172 389.256 167.749 388.172 162.121 cv
387.089 156.494 388.878 152.68 391.703 152.609 cv
cp
level3{
gsave
clp
[-42.4833 -35.5336 35.5336 -42.4833 418.752 187.236 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-42.4833 -35.5336 35.5336 -42.4833 418.752 187.236 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
417.417 186.122 mo
470.59 185.51 li
471.041 182.432 li
417.536 183.047 li
417.417 186.122 li
cp
.0705882 .0901961 .160784 rgb
f
441.393 183.399 mo
471.041 182.432 li
474.996 159.666 li
475.39 157.398 473.629 155.328 471.327 155.355 cv
448.48 155.615 li
446.662 155.635 445.132 156.98 444.877 158.78 cv
441.393 183.399 li
cp
f
441.417 182.773 mo
417.536 183.047 li
417.417 186.122 li
441.299 185.847 li
441.417 182.773 li
cp
level3{
gsave
clp
[28.1564 .393717 -.393717 28.1564 418.559 184.296 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[28.1564 .393717 -.393717 28.1564 418.559 184.296 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
462.507 170.981 mo
462.45 172.46 461.205 173.613 459.726 173.556 cv
458.247 173.499 457.094 172.254 457.151 170.774 cv
457.208 169.295 458.453 168.142 459.933 168.199 cv
461.412 168.257 462.564 169.502 462.507 170.981 cv
cp
1 1 1 rgb
f
462.185 370.093 mo
462.49 372.097 461.519 373.906 460.017 374.136 cv
458.513 374.364 457.047 372.925 456.742 370.921 cv
456.437 368.917 457.409 367.107 458.912 366.878 cv
460.415 366.649 461.881 368.088 462.185 370.093 cv
cp
f
483.099 370.04 mo
482.794 372.045 483.765 373.855 485.268 374.083 cv
486.771 374.313 488.237 372.873 488.542 370.869 cv
488.848 368.864 487.876 367.055 486.373 366.825 cv
484.87 366.597 483.403 368.036 483.099 370.04 cv
cp
f
498.964 396.312 mo
499.411 390.184 492.013 385.004 486.568 385.004 cv
481.125 385.004 472.56 385.004 472.56 385.004 cv
472.56 385.004 467.695 385.004 461.493 385.004 cv
455.291 385.004 446.798 390.184 447.244 396.312 cv
452.955 429.809 li
493.254 429.809 li
498.964 396.312 li
cp
.94902 .172549 .352941 rgb
f
497.171 390.68 mo
497.171 390.68 512.758 416.541 506.883 424.009 cv
501.009 431.477 490.238 431.527 490.238 431.527 cv
483.385 420.475 li
491.218 410.207 li
485.343 400.872 li
497.171 390.68 li
cp
level3{
gsave
clp
[-15.6504 -24.0403 -24.0403 15.6504 503.498 426.147 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15.6504 -24.0403 -24.0403 15.6504 503.498 426.147 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
478.489 379.304 mo
478.489 389.572 li
478.489 389.572 478.489 392.372 472.614 392.372 cv
466.74 392.372 466.74 388.638 466.74 388.638 cv
466.74 379.304 li
478.489 379.304 li
cp
level3{
gsave
clp
[6.80176e-13 6.56959 -6.56959 6.80176e-13 472.615 381.665 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.80176e-13 6.56959 -6.56959 6.80176e-13 472.615 381.665 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
459.886 369.036 mo
459.886 377.284 465.585 383.971 472.614 383.971 cv
479.644 383.971 485.343 377.284 485.343 369.036 cv
485.343 360.787 479.644 354.102 472.614 354.102 cv
465.585 354.102 459.886 360.787 459.886 369.036 cv
cp
1 1 1 rgb
f
449.682 390.301 mo
448.137 391.78 432.471 415.658 439.325 423.125 cv
446.179 430.593 455.97 432.41 455.97 432.41 cv
462.823 420.475 li
454.99 410.207 li
460.865 400.872 li
460.865 400.872 451.226 388.821 449.682 390.301 cv
cp
level3{
gsave
clp
[12.5378 -22.2711 -22.2711 -12.5378 445.97 423.058 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[12.5378 -22.2711 -22.2711 -12.5378 445.97 423.058 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
469.678 427.943 mo
450.095 429.809 li
450.095 429.809 426.597 415.808 421.701 427.009 cv
416.806 438.21 444.221 451.278 451.074 453.145 cv
457.928 455.012 488.28 456.878 498.071 453.145 cv
507.862 449.411 529.402 439.144 523.528 427.943 cv
517.653 416.741 493.176 429.809 493.176 429.809 cv
469.678 427.943 li
cp
.0705882 .0901961 .160784 rgb
f
451.23 405.29 mo
494.977 405.29 li
496.679 405.29 498.071 406.683 498.071 408.384 cv
498.071 431.379 li
498.071 433.081 496.679 434.474 494.977 434.474 cv
451.23 434.474 li
449.529 434.474 448.137 433.081 448.137 431.379 cv
448.137 408.385 li
448.137 406.683 449.529 405.29 451.23 405.29 cv
cp
f
448.347 433.883 mo
497.861 433.883 li
498.481 433.883 498.988 434.39 498.988 435.009 cv
498.988 436.489 li
498.988 437.11 498.481 437.616 497.861 437.616 cv
448.347 437.616 li
447.727 437.616 447.22 437.11 447.22 436.489 cv
447.22 435.009 li
447.22 434.39 447.727 433.883 448.347 433.883 cv
cp
level3{
gsave
clp
[51.7685 0 0 51.7685 447.22 435.749 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[51.7685 0 0 51.7685 447.22 435.749 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
470.312 420.693 mo
470.312 422.162 471.562 423.354 473.103 423.354 cv
474.645 423.354 475.895 422.162 475.895 420.693 cv
475.895 419.222 474.645 418.03 473.103 418.03 cv
471.562 418.03 470.312 419.222 470.312 420.693 cv
cp
1 1 1 rgb
f
445.199 431.676 mo
453.488 436.067 480.447 450.345 480.447 450.345 cv
478.489 458.745 li
478.489 458.745 462.323 457.335 451.074 453.145 cv
439.825 448.954 430.267 443.814 425.494 438.212 cv
420.722 432.61 436.91 427.285 445.199 431.676 cv
cp
level3{
gsave
clp
[-52.5373 -22.7126 22.7126 -52.5373 480.55 456.502 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-52.5373 -22.7126 22.7126 -52.5373 480.55 456.502 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
464.097 452.211 mo
464.097 452.211 456.265 450.345 449.411 452.211 cv
442.557 454.078 440.599 456.878 441.578 459.679 cv
442.557 462.48 449.411 464.346 454.306 463.412 cv
459.201 462.48 468.15 459.19 468.15 459.19 cv
464.097 452.211 li
cp
.0705882 .0901961 .160784 rgb
f
481.427 452.267 mo
481.427 452.267 489.26 450.401 496.113 452.267 cv
502.967 454.134 504.925 456.934 503.946 459.735 cv
502.967 462.534 496.113 464.402 491.218 463.469 cv
486.322 462.534 478.489 458.745 478.489 458.745 cv
481.427 452.267 li
cp
f
480.447 452.423 mo
480.447 452.423 490.501 452.907 488.385 457.574 cv
486.269 462.241 477.727 458.329 477.727 458.329 cv
480.447 452.423 li
cp
1 1 1 rgb
f
465.076 452.367 mo
465.076 452.367 454.682 452.852 456.797 457.519 cv
458.912 462.186 468.014 458.745 468.014 458.745 cv
465.076 452.367 li
cp
f
499.29 433.543 mo
490.741 437.69 464.042 452.211 464.042 452.211 cv
465.76 459.582 li
465.76 459.582 481.077 458.49 494.737 454.091 cv
508.398 449.691 515.818 444.745 520.591 439.144 cv
525.363 433.541 507.839 429.397 499.29 433.543 cv
cp
level3{
gsave
clp
[44.9663 -19.0419 19.0419 44.9663 470.083 455.446 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[44.9663 -19.0419 19.0419 44.9663 470.083 455.446 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
479.469 362.502 mo
473.711 362.255 470.399 365.356 464.781 363.436 cv
460.076 361.827 459.886 369.036 459.886 369.036 cv
459.886 369.036 457.013 362.25 457.928 357.835 cv
458.844 353.419 459.166 344.444 474.146 344.965 cv
489.128 345.486 486.322 362.303 486.322 362.303 cv
485.343 369.97 li
485.343 369.97 485.226 362.749 479.469 362.502 cv
cp
.0705882 .0901961 .160784 rgb
f
386.056 20.5876 mo
386.056 11.5803 392.969 5.14671 401.496 5.14671 cv
404.056 5.14671 406.468 5.77366 408.594 6.87572 cv
411.362 2.7307 416.082 .000227498 421.44 .000227498 cv
428.752 .000227498 434.872 5.08324 436.471 11.907 cv
438.503 10.4885 440.971 9.65062 443.637 9.65062 cv
450.565 9.65062 456.183 14.154 456.183 23.1614 cv
456.183 32.1682 451.328 35.3601 445.394 35.3601 cv
445.394 35.3601 398.42 35.7937 396.995 35.3601 cv
391.453 35.1062 386.056 29.595 386.056 20.5876 cv
cp
level3{
gsave
clp
[6.32914e-12 61.131 -61.131 6.32914e-12 421.119 -16.2262 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.839216 .839216 1 ]
/C1 [.941176 .941176 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.32914e-12 61.131 -61.131 6.32914e-12 421.119 -16.2262 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f%/F'f%/F'f%/I)f@SX+f@SX+f\"j/f\"j/f\"m1g"G'3g"G'3g=k97g=k97g=k<9gY:K;gY:K;gt^]?
gt^]?gtgfBh;-oCh;-oDhVR,GhVR,GhV[5Jhr!>Khr!>Li8EPOi8EPOi8NYRiSibSiSibTio8tWio8tW
j5]1[j5]1[j5]4]jQ,C_jQ,C_jlPUcjlPUcjlPXek2tggk2tggkND$kkND$kkND'mkih6okih6ol07Hs
l07Hsl0@R!lK[["lK[[#lg*m&lg*m&lg4!)m-O**m-O*+mHs<.mHs<.mI'E1mdBN2mdBN3n*f`6n*f`6
~>
<~f%/F'f%/F'f%/I)f@SX+f@SX+f\"j/f\"j/f\"m1g"G'3g"G'3g=k97g=k97g=k<9gY:K;gY:K;gt^]?
gt^]?gtgfBh;-oCh;-oDhVR,GhVR,GhV[5Jhr!>Khr!>Li8EPOi8EPOi8NYRiSibSiSibTio8tWio8tW
j5]1[j5]1[j5]4]jQ,C_jQ,C_jlPUcjlPUcjlPXek2tggk2tggkND$kkND$kkND'mkih6okih6ol07Hs
l07Hsl0@R!lK[["lK[[#lg*m&lg*m&lg4!)m-O**m-O*+mHs<.mHs<.mI'E1mdBN2mdBN3n*f`6n*f`6
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
311.073 39.0046 mo
311.073 32.0701 316.396 27.1169 322.962 27.1169 cv
324.932 27.1169 326.789 27.5993 328.426 28.448 cv
330.557 25.2571 334.19 23.1545 338.316 23.1545 cv
343.945 23.1545 348.657 27.0676 349.888 32.321 cv
351.452 31.2292 353.352 30.5842 355.405 30.5842 cv
360.739 30.5842 365.063 34.0515 365.063 40.9861 cv
365.063 47.9202 361.326 50.3777 356.758 50.3777 cv
356.758 50.3777 320.593 50.7112 319.496 50.3777 cv
315.229 50.1824 311.073 45.9392 311.073 39.0046 cv
cp
level3{
gsave
clp
[6.32914e-12 61.131 -61.131 6.32914e-12 338.069 -2.88301 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.32914e-12 61.131 -61.131 6.32914e-12 338.069 -2.88301 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
78.7929 25.508 mo
78.7929 19.5046 74.185 15.2165 68.5009 15.2165 cv
66.7949 15.2165 65.1874 15.634 63.7704 16.3689 cv
61.9252 13.6062 58.7792 11.7859 55.2075 11.7859 cv
50.3344 11.7859 46.2553 15.1741 45.1894 19.7219 cv
43.8349 18.7766 42.1904 18.2185 40.413 18.2185 cv
35.7944 18.2185 32.0507 21.22 32.0507 27.2239 cv
32.0507 33.2273 35.2865 35.3547 39.2416 35.3547 cv
39.2416 35.3547 70.5517 35.6433 71.5014 35.3547 cv
75.1952 35.1858 78.7929 31.5119 78.7929 25.508 cv
cp
level3{
gsave
clp
[6.32914e-12 61.131 -61.131 6.32914e-12 55.4219 1.48054 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.32914e-12 61.131 -61.131 6.32914e-12 55.4219 1.48054 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
354.414 241.439 mo
262.333 241.439 li
258.235 241.439 254.913 238.116 254.913 234.019 cv
254.913 210.139 li
254.913 206.042 258.235 202.719 262.333 202.719 cv
354.414 202.719 li
358.513 202.719 361.834 206.042 361.834 210.14 cv
361.834 234.019 li
361.834 238.116 358.513 241.439 354.414 241.439 cv
cp
.94902 .172549 .352941 rgb
f
267.299 236.098 mo
271.305 256.125 li
291.332 236.098 li
267.299 236.098 li
cp
f
345.758 215.737 mo
270.99 215.737 li
270.251 215.737 269.655 215.139 269.655 214.402 cv
269.655 213.665 270.251 213.067 270.99 213.067 cv
345.758 213.067 li
346.495 213.067 347.093 213.665 347.093 214.402 cv
347.093 215.139 346.495 215.737 345.758 215.737 cv
cp
1 1 1 rgb
f
345.758 223.748 mo
270.99 223.748 li
270.251 223.748 269.655 223.15 269.655 222.412 cv
269.655 221.675 270.251 221.077 270.99 221.077 cv
345.758 221.077 li
346.495 221.077 347.093 221.675 347.093 222.412 cv
347.093 223.15 346.495 223.748 345.758 223.748 cv
cp
f
304.368 231.759 mo
270.99 231.759 li
270.251 231.759 269.655 231.161 269.655 230.424 cv
269.655 229.686 270.251 229.088 270.99 229.088 cv
304.368 229.088 li
305.106 229.088 305.704 229.686 305.704 230.424 cv
305.704 231.161 305.106 231.759 304.368 231.759 cv
cp
f
544.112 116.362 mo
452.03 116.362 li
447.933 116.362 444.61 113.039 444.61 108.941 cv
444.61 85.0622 li
444.61 80.9646 447.933 77.6423 452.03 77.6423 cv
544.112 77.6423 li
548.21 77.6423 551.532 80.9646 551.532 85.0622 cv
551.532 108.941 li
551.532 113.039 548.21 116.362 544.112 116.362 cv
cp
.372549 .388235 .541176 rgb
f
456.997 111.021 mo
461.002 131.048 li
481.029 111.021 li
456.997 111.021 li
cp
f
535.455 90.6599 mo
460.687 90.6599 li
459.949 90.6599 459.352 90.0622 459.352 89.3249 cv
459.352 88.5876 459.949 87.9895 460.687 87.9895 cv
535.455 87.9895 li
536.193 87.9895 536.79 88.5876 536.79 89.3249 cv
536.79 90.0622 536.193 90.6599 535.455 90.6599 cv
cp
1 1 1 rgb
f
535.455 98.6706 mo
460.687 98.6706 li
459.949 98.6706 459.352 98.073 459.352 97.3357 cv
459.352 96.5984 459.949 96.0007 460.687 96.0007 cv
535.455 96.0007 li
536.193 96.0007 536.79 96.5984 536.79 97.3357 cv
536.79 98.073 536.193 98.6706 535.455 98.6706 cv
cp
f
494.065 106.682 mo
460.687 106.682 li
459.949 106.682 459.352 106.084 459.352 105.346 cv
459.352 104.609 459.949 104.011 460.687 104.011 cv
494.065 104.011 li
494.804 104.011 495.401 104.609 495.401 105.346 cv
495.401 106.084 494.804 106.682 494.065 106.682 cv
cp
f
359.657 343.724 mo
451.739 343.724 li
455.837 343.724 459.159 340.402 459.159 336.303 cv
459.159 312.424 li
459.159 308.326 455.837 305.004 451.739 305.004 cv
359.657 305.004 li
355.56 305.004 352.237 308.326 352.237 312.425 cv
352.237 336.303 li
352.237 340.402 355.56 343.724 359.657 343.724 cv
cp
f
446.772 338.383 mo
442.768 358.41 li
422.74 338.383 li
446.772 338.383 li
cp
f
443.082 318.022 mo
368.314 318.022 li
367.576 318.022 366.979 317.424 366.979 316.687 cv
366.979 315.949 367.576 315.352 368.314 315.352 cv
443.082 315.352 li
443.82 315.352 444.417 315.949 444.417 316.687 cv
444.417 317.424 443.82 318.022 443.082 318.022 cv
cp
.372549 .388235 .541176 rgb
f
443.082 326.033 mo
368.314 326.033 li
367.576 326.033 366.979 325.435 366.979 324.697 cv
366.979 323.96 367.576 323.363 368.314 323.363 cv
443.082 323.363 li
443.82 323.363 444.417 323.96 444.417 324.697 cv
444.417 325.435 443.82 326.033 443.082 326.033 cv
cp
f
401.692 334.044 mo
368.314 334.044 li
367.576 334.044 366.979 333.446 366.979 332.708 cv
366.979 331.971 367.576 331.373 368.314 331.373 cv
401.692 331.373 li
402.431 331.373 403.028 331.971 403.028 332.708 cv
403.028 333.446 402.431 334.044 401.692 334.044 cv
cp
f
620.263 28.1946 mo
620.263 22.9914 616.009 14.6921 606.579 14.6921 cv
597.149 14.6921 592.061 19.2375 591.138 23.1799 cv
589.964 22.3606 588.538 21.8762 586.998 21.8762 cv
582.995 21.8762 579.75 24.4783 579.75 29.6814 cv
579.75 34.885 582.555 36.7287 585.982 36.7287 cv
585.982 36.7287 613.12 36.9792 613.943 36.7287 cv
617.144 36.5823 620.263 33.3982 620.263 28.1946 cv
cp
level3{
gsave
clp
[6.32914e-12 61.131 -61.131 6.32914e-12 600.007 -13.957 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.815686 .819608 .988235 ]
/C1 [.941176 .941176 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.32914e-12 61.131 -61.131 6.32914e-12 600.007 -13.957 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~d*U.dd*U.ddF$@hdF$@hdaHRldaHRle'ldpe'ldpeC<!teC<!te^`4#e^`4#f%/F'f%/F'f@SX+f@SX+
f\"j/f\"j/g"G'3g"G'3g=k97g=k97gY:K;gY:K;gt^]?gt^]?h;-oCh;-oChVR,GhVR,Ghr!>Khr!>K
i8EPOi8EPOiSibSiSibSio8tWio8tWj5]1[j5]1[jQ,C_jQ,C_jlPUcjlPUck2tggk2tggkND$kkND$k
kih6okih6ol07Hsl07HslK[["lK[["lg*m&lg*m&m-O**m-O**mHs<.mHs<.mdBN2mdBN2n*f`6n*f`6
~>
<~dF$@hdF$@hdF-IkdaHRldaQ[oe'ldpe'umseC<!teC<%!e^`4#e^`7%f%/F'f%/I)f@SX+f@S[-f\"j/
f\"j0g"G'3g"G'4g=k97g=k98gY:K;gY:K<gt^]?gt^]?h;-oCh;-oChVR,GhVR,Ghr!>Khr!>Ki8EPO
i8EPOi8NYRiSibSiSrkVio8tWioB(Zj5]1[j5f:^jQ,C_jQ,FajlPUcjlPXek2tggk2tjikND$kkND'm
kih6okih6pl07Hsl07HtlK[["lK[[#lg*m&lg*m'm-O**m-O**mHs<.mHs<.mdBN2mdBN2n*f`6n*f`6
~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?NlrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]orr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.0
%%For: ( ) ()
%%Title: (chatbot_6.eps)
%%CreationDate: 7/23/2018 4:48 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQi#DOX9dnB)E287:staZhh['6G'R9R9<Z2XgM=f;*EC6[P8[=XJRZ\!]1Ia<r;47cZ,#UEAOqO_F*.B#.T7eLq:oWpuAm]
%M4a_,nFD>N?U&o-c/Idaqt&V[DV9FM>ME^2G@-$uq.Dqfaa\[2g\^HKB=43EZhHGehRL'p3Bu<oQ3o7UM=M=_]RBVJLMuWg]`-0V
%QV[(bs8Mfaq9)jss*T%gdutT[?Tn3SIe.+EqtoR&?iG%hGlHdg^WSM3?`($pSisj'Hhls]-a.aiAmo3EMAQ<ApMuPS!'dg'I.b[$
%V<Q2#f<=;tjPDlp-boW!@=G#ZhW0cGMt05/Yq9:2BM5C!h#6lSs4(\qqo+&-0(0;MeHc+1guA?q1MUT0)TN?u-[QZkAGj34SC0C-
%7H[9LJ'aD>Js5<rcVN,9E5g#da:EY[]*'c#EVm2s"ca[409bpVb#;6UHflO7\l/C\H2R;AIXD+>ZgV89HLgpcb8:2B^YAcDCH$]f
%s4n@eKll+rjnA7Uq;q&<rnj=FnGK]fmqt9]IXM+#S_j@thkB.Y?6uemMk*#<s%?[:3BOroptpDOj\P[)n%p^BF+3_M><Kgh$$k4C
%,es%rJ\-.,>(4V\`,,8*rO:ZIJ+EH-dkr]":"k$S'E0ffURs+/c"=`2fZ8krO^aG*06L@C<0H"0TmCY/XAf#qa(P-rr;#cqh*:`3
%rftadrN"OW55Y@jVUbq>^0'uFIs?GBlCVBFHS+'?g"(71IeE9tqrdO\lfE?:T5Zhe?d&JY1Of)ZeMm6+AR3#trWC/m:U8mVit(&H
%_im=@^R?57lgO7Kr9iZrkDOdd6c+5O]+iC^.%H)Rk9@h+gTJZB[df82Mg^(58(jJagYlcC0nk*2DSM=Qq!2#-^3TG3kMD&C#V"Ig
%rPbgM?a%Y[pg)GMj8Eo]oXFM.p@?WHY@$2%khY:s=3"ZB$\#Y^eZ\N,du1Dj0>GJnI#iauAGX%P.Id8s2tl#!+8h\bieR!hK@o\D
%5JE?iT"Vq!5QC'lolp)0h`Up)Ieen'07WcbQS8@*jl`97FT;$WJ%ab<_m:0R48n9$^\ujRVeg_NlLc6+^A<'Lk:aTaJ$KEfRjZOr
%qq51kqW5KL^OH$7o@mI7LYV[>h`lPfns.G@YBRb\fDd/s^g/'DGJALtjJdO3r-Ot*QlF2H]^"B-fCGR4^Q5p3A<"8"H38"I^%h-s
%q9/6()s_d1\`7V"5C)e[e`aA(8jCI:T#dk5\&=-tYQ+DqpQYLPSTG8.Z5o1=ShU-.;3-%oq@B;)mpCJ@rOBK=F+&+WNOD"4NlNNn
%T0N58eW]J$nEfE-nEPets02CVbEpPqh66a*4DFd8It]Bp21tr$mD$A_rp9N#a(+7thoHddp@S1ZQ[el2p&3o?'oW+BMdO6Grjhq6
%45p)>7#'tan+?>RYtl<??$hb4nuq:,?Tr&I>^OKa=5u<lr"o-m500Y*T8>g\@,\ljS1jp;6mVIj4T!a>/6$`_^HHoeQG`.6+.g0[
%?e=G`DngqH^&.@2:VOI(b3<Pf\_])i-$jFZ>@2dJq.J"?%PMG5p5<!J^4%DTn`RNVrmQcA:VIPan;T<m*,Nj"c(^R'mdTo4TDcsr
%TD`,hJ$s9Br&O,)qi`"D#C#ZXKL:tK*V,oHd1136iGc:iSE.1A\tbT:*7HVabHW&uEnh`)DO4Q^-#VOUO<`TDgEK/$h;:-dHaq%e
%e*Yt*Oh[X^s)1).YEE\6?%qUM>c$$ljbhN$3Ot><Ki:%o;jCiGYAoe2/U-X.haKQ2**&$tkF^SP8'#[spVoGrq9-hUj-I32mCD;S
%0)Ob7*1)l%TQ@pq=5;XQjWbNqT7TkQr#)*PGE=ntEHiNj%XBjUY9ImcQ\N!8cS)O+3IGg8IP'B#6MKYQQD)Y%giA[TAGf"ZjrfH*
%0$DMf?'55N!BVWr-u#;WWi:IH=Xm!<9e"$qjR>`)5:nW]-TQ))&JH\_qt";5cRhT`$$(ik'V-67_Vn7M'.-/0W>9#:L:nR$N[b9?
%46$@O/DuS2Cln)r%Nk'+]M'1rdgB"g;qg^%BQ@'47fUZu0(Pu5?7O#fm]c'HA0'IJH8s!WB`#@oqn,`%-kH'![pRip413gdCkpSF
%D5H?[`:4L*Y.5nN?`)e]hU\GQS:,7^efnCeC6Y(Ye^^MOPuG6ToAf6d?QEHm.>j*9^WMs>Tp*e8_gT'uUA+T%\&Gc!?dYV_LK@^X
%/r:H!mYKZ_99B]kIIN4+hrAQop2U=1GNWJWlEREs[P'Aoio47d9eW*qiOpkaP7P.'"RH3Xd6c/b(OGLSkfLF?R;'cU?XtoKR2?0s
%,e#O;mUYm5R8!2"1;Tta[_5AIUJ/O'\<CXkA:d9Gfc8$XZMUbJm!%:WcFg@:gMr\Ar[DeDfi.BA(ZiO6a^&HuVV<Njhhu_aNd&O-
%#hbu/g:`<t.Y9U;!"Lcrh/O$`G7sFn'Ht.+EP7dir@RDcj,VSOf=UbRau\qaT'jo$p\Td]4iq[oLYR\P=4YZfX:L1tRHG:-+t"e5
%Z(@d26tA@kg^>_tiQmdci(K7T`'!Q6</Sqlh!,LjB8t,?@QjS*Pr8'FGL4J#A:Ttr71s)#dB:4%N@q+,@kYIr37/[@+))nnlO1P$
%08-%0]]k6T,oX/o[+Ht<fHPXcM^F?+bd1uhlC)CnKBT[HG7l21]dAY&QGV0`2&92\QISj!PqB#OAL36a[^[+_EKll;MP@$1V7_Vh
%-lOCiDQ0@C%\e#>U4]!"U*.T*MhYu@XU_)7DFK36M(WkD+C[p=PU^`_?]JTSS4*=4L(H?b6m?9+bZ/3G6"^(phT7-,OlB66Go!C9
%g0Q'&;'c*33l9!2%\a&gk^lErko`"gp<nNrFpJo\g^VMTfrmoI4d\C-DgUqBl.rn"73kQTCqXY5]G4Z_0jVSJ8Us[BoY-%cPI8tq
%=Pi\ZoX;E2@p_b"[J'?drI$3-rm#gP8tQp)$`qZ=s(q><B:nAY5+d-@IGWW>\!oQ7U.]iobGalr.i+<.?T2+Fg:u@ZAQUqGe*APc
%C[Ai#5KOqnms7OnO4gW[d-%pao/9'iULA4M%u^k97E29e:*1WT.kefgS('a1d5oQ&@>nD448CC-9X%AfA(C5AX@$F_BbTa`lM06$
%.*GtX2.S>k(In@,O+*<XJ"_(.o.fT@^H'.jep2qVW^jObk?6<d/`tI:7MXcX$1=el$5HpDb&^O*U?KO.3Jd.P`.KMuaWrTsK.L74
%O%B2=>OckHoTmFQ(=25"l9@JP!.\'"/*cYJmJ`PcHZ%Gm*5-+?b,R\Ig2F:HMb&Ff%tjk8Go+N[=d7lFd&.FXs#rUBW'6IfXcMo!
%8+ilQrPs6mO6Tg2d5Q:YBDq\*Se]?e0$L_@Wc^,"RqSMimHEACs7RMB55tI9mH;mG]rsGK7rS/$mQI_$hKus14+$tucUQgdhVT0A
%@gr2^o\$A,cpsgkKoCc1qD(O9O%CE.SaCi1qT.mQo[2p`dq:kbkgEij9+W0e(8f1J"f@k^r^KP"8MEOD$QMIK>(&s46dh(U(%_+Y
%glKJA-A$GZY[74g#90;o]($Z@G[[=#`>ppp.YU3CHA03f<528KJSKJHN2-N1&8kJ:6m1QH']'n.!L1UbOh&`m%p/2%pHHtA47LPo
%hYk`+ml]EQp<Le`;]2rR5ZK(/-+8lY1.#!HSF-fg&reHc:$a0/I#VOa;&87"$Ztshr]KpugNe-+r0qEQK<UDY?sIn`re;DlG^V3b
%GF6SF9Qp#4I`,K^B<%HalD*P%4BqONI!NY8Hh4XXF6Q.VlPAH"0;48(Z6?j(T=?*5*dd.:e;JIVs+Y,k\j#H.B%H4nQUDbm(;QsM
%]3Rk+C1+Dqn`>XQdD09-O1b]0/'>"+K`qO96!`\E!-)lJ3e4@o6WB,b;1YFX[u&S@a0][tXu^"3FHndbiMqK0`N!):[K(n2JTVj#
%k[!kXF>+4690rgW<^hrNU>?k@F*`&A=S0@6I<6d`bX8Iq3lu"6a)S%unamm8Gn=V[MCq;pd?KY'P^sGe#>X2.Y(ETEZ)Gf2/=Tk`
%<#.r'K%N:+<N0Gra>+R\k:"p0M/a0H8>8OR*hseMQO6&Y_,V5T.\H7&gGds&lh529qsnUUpI/%OqJPoUg\9R=q=`XRDa,[1q1a:j
%"nO[c]7rEE[Fn851$-E/mm:>cdp/H%N3,aBlJ4)j:hanilaq]D#XdgMe`F5U1sZ)Xh0!"-S_`BokFL@0\h"rO>Wq`Rd'S8FU`N_+
%c$+I!iYYG=EB8!@*2b=-H!'Si<@t)r)#/)D*kKTBnJ:pfb6ue+e=3ttNULl[LJI7&T#?=-@3`+G08`?]lmHSRj('lXoi1U7\(]&=
%/Y"q+m\kT8qQB+s_LH\H2AsTP)E^#RSnnq]KJe9(EdV<^r&CAV37O-<U+deNHFMqEo,=8^No0LWlMondq[pJDE=Di]gbDK/[I;uF
%KQ!q/8&mX>cVDsjl=DUNm1>7@&<FuKKc2V6LQ0&Y5nWWe49LC/7.@Ua)S[N"ERHHqCnp7ZL2Wk"SK@=ccTg1&W9'^@3sn="(8#ap
%5(-)IkK):4UXP/p-fWl*1+hg7ND8kU%ojh6)OL/TSsjOb&)><o2u2;U?g??:\prUP';=:$7B\'VL:qt$We'&P.piM!#'QH1Q$/gS
%Q@O;'f>'R3RVaBi-1:o99]%#0,,7<0>%<BpnS4&k+kS6*76iMi:nM$T0$oBN+#/NldoiG,f4#5*A7plaX?k<hZ$22ub]043J@^J3
%f6E?GHn#,_&bW[TOU/MXM#FF&T/Il+N(Ju3dAY/*QWbV4O8ab,rT.h;'ET=Ai"6/';p7kK@6[2`qD\1,H6lqI^L=nU#0*qc>8_2L
%4=KU"7*s3]e*Hn\D%mGcSF85RdH7sa1.?BW*8?n@C#1%K=^u4+HgG<]1WCZ:=HE$k&Qrn!AOtKK/^\4dU9kan9XYYR:h(]WgbSAr
%AP&.JGpH;KV:9ah0L*S55#d)>G9e:",Ag]_R%D:aY")(r[;/^2'[iWQO6DDQ"&f.HN1@2qpY#<SKj(Q`p^upp<lUPQpQ-2RbfD<Q
%XLk1(VI'"M6nh<kB,iYVo)t(c.3+erENi""WCQAm>rmnQ@Vo/g%?7sm'oKbb`n<Dl8kkQ=RD-/5en.e3>=oBj)[TADk#=4@fHW6l
%@c-\BZ!K4rZ&Q?aR.9,CUTf<SDs1-<@8G<c(f(8FF#Uom.+&!!g9m9un+#BsC_+(OAq=cZG&c"^8%CTI?^e=1*pM[?(IttpHp@J3
%^MhcjU#:k\TuVl#c@T@rU[%nSUD[I]F&[U+5W)%6C[)&ScoA9e\K`J,@qo7\fJmhbWi9t'O->42N5/FPjEg<1)_C5:FSDY?alf9Z
%*%nK[X-3i,HI%Sbl_1H;HQkR!o?WJ(m/>R`ZC0sTrRlPI?)ArTJH`u=OuInh&AtKp7t8$tlPaa3:,f[2!5%6_rRClXor:ohk?aQJ
%Hc;)rgZ^Kn#[`B9;O@>jA.t:993S`Rr#N>bMg8dsPm)7+UZDuP8OG=e!VA@?mmfnKLO+uuCKq-,DEQ%q@9o=>dk%/.*`"X(89N^-
%i-`^5qXCt]5Lmum@NS/@S0m<8R639Dg9@>f.jC?T5OR2lg..p9Ujm]_XZ0SS6Z!cF^LrC^H!%7SgU17Eh>XRpr]Ze<HH/D[Z.#\3
%e:((rPa/tN>*-*7Bgo$Bl06_e0(I/%Th<M'R72Cs3/%\Ea@F:(IUf0rg%1$N*9t/B%(3G>[,Jp(R;&n,f47[bWARK:A/S:FTe!N+
%1c"p$Qk!0q)i!LgQ#C`@EN=K'/`.J4;\9$Y2Nrs<"f[5#Z]O9j'ViUo;CWl6%r*3ZY;(a8We=A$UtKZD[BM-8<Agl#J\LH78)71`
%W[*=f=;Af.nun_F"</QBkp"K^Jq!>Lqq%>Ej_Nb=a*7?;9_&(Wnu21kCr3"C<n4Z/^K(4qlH>R$GRfSeDW/fjAir7Aj&((TdQcna
%^r?M%G6:*"q[Fm&If5Peo+1Opc;N"Rb5Kg?qf!)7j8+ZUY!C`A"kp,Dk1!h'A[BM&.\f^]CGsl&CpIM(PZhQ)_'m)r!2T<^fKqGc
%#N9'?okE.bk_;[p$uA#Qf%QUq<NHV)>?Y@P5#(Nh@;D78Ss=h&A=7Fd19ks=bIamEoHPYtS)`ASYnTO<QJr+,p-`S3Dr=kg5=';<
%G1C%2[Htk126.el.@,%^KmY(LLIGH;?d,3D=h=1KH*Z;iAXiR[[I64aL0*QW\rDA:lEF*EFG8@Ii[o]s<J_*S3H`ZcU_\</D68f7
%C/5fHaCO%0cA"E%h]41TJBi/K,YNI'%'#gjHR@bo359@!/1%/i]42nX@lh![CdbchEIJZA7$WU1]qk!c%tfRI1lW7tCCTBE*NH[N
%WnLsVW_F].#-?ND<EF]#91\L/L@9uWo$%M]N+?o$_42#7aAD>)E)b(!L+.@TEnd^]et(_eRp"MU_8)j+(kFj"g-H@=If%7R4#4&N
%=NB7;<*mg[23PAcY)I=9#?0,C(=UHcjO5f;)3H<7&OrE/+H+)f*GF\'gCC^j"]fgEV3WuEOq]%FjIpV?]-gtCmsb"OGEdU6UGVuL
%rWRDdeTQ4j0X*`\<bk'n#.1L'3R>nQd=%a[q*Un0`3'a?%-n1VEG9P9aH(A*l",&:2KW,JP?krDY2<]$GITOW53Omc0AcRAl(bm^
%qV_,C.'N0dVTj%.GkKnaqnLnaqULcGhqV]KT!`A^h]hJ(A1DP\ll:moDd!h/4/jF:Bf1bQa,'oAMc30k_fb+W1<S*-F$f?;[!YBA
%Adm#5&q[QIH7Q@R4G.\dVIKE6Di,='];*8i0RP<FB\cke]!Zdo.oS"+./".f/].qZ@Dt"W1Nd+AZNa0*ik"#,B6cIL9YV4XIPD-"
%1c[@I;:Je5d*0e(jV8977NEFBV@jP5<\9h"Fk\g"*t*/*2:=(+[jb8+MBgQ6,fN7^)pTNqNQh0C%R%#qmUn-MJG'pinqhilR#rV8
%IP_U)/O3#7:DQ>/Zin(9Rs25$1`cLel/8pIADRmrmJ(;&V,,!pY!b4l8-CjsR+UOAXb<ICRuR,O"VeduPo99)4ie(*c()ZbXUj&,
%MKA3"PnXT8_cc?oi\o/3ZJ!k<ZM.j8(>:um'P3c'4Y6.FrmhYUJ:9[K@EhpVgfoYTU<JmW1d&7gr5ped%YS?m`rLo]E?HBkMD0l\
%-WrN?.q\o:-a<ka$,Ql\l]3/%5So)7'QV;(E+j289)g,0Ku,SJW">O]=?2cRVWnkUnq?.5LE.rP[>(=mCaiO`@>(0#>#HOH\YC^R
%5V#BX9sB%Zo:/Q#biG1,QRm$*A@4Eu1?T;+:*H$6hYUa<Vl=i7c.2d4X?SZ/UK'%sU_a]QS+L=trFF-ES+>*gg-$6J2ri/=[iE4A
%92NmgZ8$0VQ7[@8(pq+?H-I8oH&g^:<>5(Die?lcl.XD52FRV,)e2kW<RDdb7Ub/@W!>un>2t1&>NcqQl9e$*b;'M#G:R\@LSa/a
%m-2G08(PN`,+g<[DFFKUm"J+JZ!sYNC?3)290I:B)PY@XXb`udWgQMoOH6*_jk3QX*7#3tR6b_CZG)r@3OtG"gq%R+o<5jD[6/Xc
%dlJ.Dk>LI'4<&-$NZ#AgQZ$mt-O4^g!DYLo+/=E_B);BZ6Tc2XPeMN50_&G16r=YZ$7A"Y9,(=b&`LZZUct"S3qA?7,Xp,mgiY\t
%f?HPiU<s8%FW59g#d:'qIb9Y0kl-+%,U_t.I[i@^2`"Mm@KsZ<9NX1.fBeO#0=Vg';+cQn^?U&Ns1u)Nb<sK@%!ndlnc@(2gL=aa
%8s^2oG`CY+*USOD1D;K\LTQYL>$A."-8!):"dCbNeXW!h!MKluHOuaAi\V.6J8J1_7u8ROW2j9.XBkc?97`LmU4F'T+m9V/X+hJY
%#AVaW*!/EML*4_hRYj-@Ft2oZi0>JZ<l*Df*:sfs7Km3:L?iibA#*NEJQiY/rK%?D091#EL^tJ>HVfYbFQ<[fo'dfHI->eIr=23W
%*d>!3*-0(iSbMp>diBMkA+FItR7SGt77fDM&TK['nls6P%13nD(C^ZE<%^]Y"Odj5U*S)9.5^lX7'>[C#0&$LH6dQ<,1N:.kbd&o
%7Qh!leKhc5[)suG^D^RI@VM$(%5F&?Ar:_@/8UDs298g^X<2:7c8trcj#E(R=dF3*9oo6.%Q>EPT;2Fo*oRPu4?M!160UoKkb4b6
%qP`_rKZ/-sg7&UBn36.-kW;!)O507Ms7tEZj4bj%,YonhrDmsRDQOmJJdIUK95"$OeKS<HdVfccQDt6<,#;h9SScToR5<LO^kX4n
%T+YqN<7t2)*mMqkSOo)#Url6/))/rZ=\dep)mVo/Mcr@rn?>NQiVG9d2EQG+fLL"QE@YPE--\p=W#`:.3a9.9-@r<>B9L:h_8f-D
%LQ>#)aW3%2f:.hVA_Pn8hKp98me@lHa8ZkOoo]Tf'9XfX;&M3/_"mGDZ5\K`%jfXmUUB@j1hnuB7(R3Vn$`]?drH)I/6P#>:GV;-
%/l:D9-J%QS;PCF=6;8bB9X6_kk.2eI-$Nn2>p?'Jd;ic\qh`&A6E/PL[R0#/80]iSQ!A&9WJi;2PNj6T6AcMX>j2lrYOOfR?%A=j
%2L/X$[RdrN2gJH1k;7NN>Q<g?\t/hV-%$gEn)\Q#I]SZsX+t>pk-7F(b[Db\Da3f&&%U_qci)bcNYA\HmG1'm@C]$TiQe"^::E"N
%9bp*Z-&@fJ>F?[c7.Y9.on5YMR6$:k@K<']i$Y2D7c-6?oQ4#,<OJ?s?pNm,@q?!f.`C"]s(?<"TM;[>3k4u&B_+>\EX"H3hYd;X
%R<3\;*]kajc7-&7124-em$]CC(j.m;*nI.?9D[V4J6:j=C![D]U[80(X!\Xedfe/plrIhW4#M#=j*$=>:/frIMQ8&((6B;m-uZOr
%ms;q:#b0lPO'<.*j+n:c%sRc`EI-Yb/)'%WdDtc3#:V>KF$'S=>o[n*8"][ncQ2KB5"Uu7''5<Fq'8g$ef?tHPYVqRP=53l;*NhW
%cPVt6l$ol9n&'XS9GOj$/)p</^bo#]PKOE7k=*rW>9$8&r08A,0i`Ucq]S.a^%GVq]"fMqD*6gZ\Y#;G%J]%/+l6`gV(,aI?,*8X
%4d+,Q^YAtLb3#/aht:bCkm+!B_t+0Uf[ODNS)e$X<X^*_'^Zsm.(QaEf[%W>]eqjIEK8H*PdTlHXY!Iho(hn?-VkFP[hEUQHK3=a
%PHkmgVWD&O1N=%]_L`$?ED(:m4l,oE="!+M\=XN$H)*7d?D:Tu"#op>Nlg9b`8"]hhTOR_1;s@`:q%>8+7Gg"*C'1C5Aoq<N(n43
%i2BY=g@.qUNUBYdb<QhdSZ%3e&JfT!7oeqbEO));#-jWaftlrn_R^*>*f[SG)5+%s6?DXrf1IjpL)_KF<3=,BW0pt*KWUb#NT$dA
%QK:&q1]*ca3gF2\.E2F%f>1Uq8fCj4I6Y'G!e2f2g?,9@oAV6&^*bG63\RZt0<T%7:UQNjh2]p`;eI75a]GgiW`.(D45r6J82OXG
%Y1B@S*)5kRbH]W.K*u$LDQb&R8+(WhcW*.sE[!\\S+T.=K(Co#kX..KcOOubIamE,*T-P49ouFE.[4'odeC]/i44T0FH7/2p>^TO
%@u!135IP'Z\,a*59&C:NG=$ke1\8c._.I[n:tkNF7l`$iY1I^BSn$UN&V?P$'L?Y!$"_lAk$WR/G?.9"=a#lsfR.UgVB.)Y,9U</
%=/#QuF!H5&/AMs%TV*H99.h(dbd$W^3!)_;Mo@.F520D'4ZR@Djl%;.OGKt_G9d%796#Qg6\`FqP"(JG*d&H<Uu%%WrU4b*1CKI(
%^8N28QOT;)b3,LH_3[Z>n47IX1.fb5H^$$N4[6HGaQ&?Tp-\9CLpPt"ptNOC[Wqcr_FsbX]VLLa)gFs=(Y3Uoc1:<`rgin#c0f4^
%^IX,?]DjUrr>5@k9\K@qkdh*Q)2lWT5KjmF>%+6en$u$XpDI"XGi-aU.;e%>$ReU-p'N*_JY['(;R,7%3gr;Yo(AP@7OqU5&3+b9
%!6kbbTZ7'j%qHNf[QW]3B.^8MqC'r*\qBHqjQhTVnU]T1n+!l7a"nk8-u-8TMD0!&WY>+u_B)::HR")iqF$1HB-!.9+e]*S-9(2U
%bamJKf"gZJCbf'4]gL&lkFZ$Z*R,:QF59]s4R0=E>s?MTI+@HUnl2E"AZA5A\(rdK(T>nN(m>.h50?j@HT[QkT1i6,Xe>Muq/Dn4
%=c9>G.nV+Y(0X31dfTu\NFkY2Fkb!2)lDGVl:/[[LU'r4XBBp-fgH`:A(=bD1*-2W88#u^+60Lb5Q$.hHcn^3rRg.n'D'pD[]mdo
%Vmdaga%)Zm0#ul?*UgEui,/4(lhfW%Z)+UqG&1CWCt!e:pV[%]0`kLRikas;D7W*+=-e6o3BW9Agc@7jhY7b,-b!R9EO%0Labqh'
%gWGK4H1?$42r3N]G%.^@=H-37^A;Slou`Vn.1NNa>d>CFF=4TdRB4=-3!NO$+:@>QRLj*B'hdsSVpMOgn_i?W@p@lt:!).S-.+V5
%04MLn"EhCglE[e>>J\jZ,9P*=NaCqGWJBq]SDJG1*T)1g)irbFK=_D:eDo!uhrT*L:`<gSU5S?SMG^W1K"$?[V.O'7_ttjj5;@,Z
%/A2[5Gi(SV6*H[$j'C+(B+@6'#>/0rSK#&>#lE.e_;eL`2+f91PMMdp;p7ZF+Ku-I<fU8(.^fKr]pNS>@*tkBM?>Fu&\N/)\]j'-
%N,+YW\6`3U`nYt\qjHa>T1(=%kI@:n"Sn'[[PPiWdR++;BfK](p1ZJ59*-!WI6j)YAkbBb.RpbYBm\_M(MIE#Vm0`fiW;_:=@r>J
%NTB2Ell9L3\j[nbJdmY:6V'3c<n],5O7q?p6l)(*%IhC3o&p5FRCfrm##LHC5G7qjIVlZ#S%IN['4o9c>jgS#n*<E[;\>#En]Vh7
%46jd^/rkp2:9ME+'E-?MJ%K]<`qM19'Ob,9Yjf]T9X.eh5n@RhFd$VYARe*`8F+TC>MV4UArtfK=Z2a[_2'`!0Z;HL"#9GZ@8InT
%=!"6ifPl&gEqat1h0%IX0m:RD^D&fDk.T5iS<J9;_4"Iq9m\8Y3*F3gk>,>#'^+lSNb:YiH-<jC'0=l/JieUuEGr)%Dk2*mNUnc4
%nsDm@q&QbViqN#aJ06Le?&Kt1POlfN=@IZXig-q<rGQ.e&PL(Y@5ff(p6]UfSXH_SI$0ej3:>C_o6]?P_mSe4nS<Ud^E+!5*X1p=
%8=.Y)6E>$W75T/f4,q3ib=O&$]O,fP]UWYkNOuWl2Ejj)4W.C;ldADCK*d_HZhc9:*_Z61<\Hn"he/"GHQh!gO4C_,$.(^>g2S<q
%f^JQ8]$q%@43;HuB.HE0K5e=B7[I`-A/eW*VV2W[@3K_361'a3TIFbJdFXF7*G3P5L3<I)V@e-*HPjeRQIVEJ"8g&W[KFWs+T79c
%*A[H_j7nAhdB!rkfT.+nkT*1I;)(:>7K/VCW:0JhVUQY)o?^e!*7JVe6s1t'ID',$*(['Mh9P<&E1'0S5cElONV)'Y(U[P!pL3@\
%rFc;T&nM*%A3HCKdW[oSqrO.9L`1c!@gBBQ_*_0\4461;aI9[hV?AIih$#Ab5b[h)[i8eo@b-S-pj03glT873n,2@t*WNG6ph0/:
%5a<;4f4Z_N4ctUsM$8tY@Ct/0;+Y:LCi?p^ot;l?X9?/OaeAu\f<iRt[%6ITA?/pYp:/mVn$!tfmeh,\-aJYAUE/R"F%>'X_KPRu
%>s3emh$2C?Y.9tQjBt&rbcGlP]Q8P+c\56;S'R*U#Z)G=c<!cPLSXDjf/HTW@]]2"^S3;\r=LAcKBlk=l@[]D%^Icp*Zr0%12'il
%+9-:;<.7E4nA&I]lpj21Ng$ASRnW**NI.NB*o+SNh-8X@&P(.Q>AO[>h8E1jB_[p8S==_9OLPOT22'cJ;'3cjD<.Qaa-:qrak5+&
%+mV3_2Hjoq83PO5L&P_-'@Sr33(cDG;6I6N[8:JiC;kshdkU%#S-Kig@@0c^k<);Boj0;h:H^PBrjhZadm^JkgU<H8LO%s$a%J)a
%WpOE=>H'L$n+QP:&LHWt2r8_j+nOpgGQ8-IJ-1"#K0j34-@FHp#nQEjE5#u%G(\+dkCe!HKY`L86ef#6r\JIPnJ$l9'$tNYJTLZj
%Cc?`25^V_eZg/B:QNX\MSJ=&p.WA&A\*U/7[]@84q^Q:EYAR)q-NN=(lBk1Q`SJQu$Uc-"K]'S`3#u'I"o!t@LJicR=_dFa4a9R)
%`aMHTDb:DO9FQA(+o!61pq]p;UY("EE@!(/!tX7.XIkKqI@M;FD/eu,.!QU:S='g>"+G$)mn*TKJ[!lKc8eY?*3l%6bdP=29"&:j
%46NKondTF>loFCZ3FgKVroK.Z(goN[\,%);_"QCt.3^We2k\!pj%U5<D`3Zbd)2@P4D;MnBYp&/56`dl'aWn!%`;gAidj1_KaP5>
%C#5M,fq>F["JSh:?e_<AEba)nc%tkH#N&7=ITsHnEo"/u<&U/M9aSKY/q,m)nKiJNfZ*>A!HYC0I:s##H##T:]Bj`OK%M*[a9Uq/
%+%'*-0p(UWX]40K%Z3P2Yp2#=Z\him[>/sKo?h8rS7k!E>cmdIs*Ik%QP^a'2-DZs(-7I-+0aZ-TeeCS?6aW"e+I&!IjbZlrDaD6
%Ra32%<\pGf>R,>>m`\8ndgl-$mdYq$/)!1Re'@IcgM!\737,5s.2H?=C3DA:D#'k_.@=.QgeBDi]trjFHQm=:qe=j[r8.$n%pXY>
%]fQZ(R=%R1!0X07]kKnuP5]m2:/.A/e>`A#B08jD^Nn8;Y9mp'cgIDXmXP3NB2@aKEeRQ-[)@*uK]8,$+[>$6HK?1i&KKQ]Y[O0A
%FL_H:j=\"JIB:DoH9&MK\@#h*\s?mg>!QdQUa7jIIB0O^\]oo4aDa<,,ETo-:+Ob5fZJIlgD!tB>86:EMY_G+j19tLc*Zj"jD%(H
%A12Wmd*0=7!-Y,U-FO=qk$L(?H=h0C/`)t:<6Qa-L!#j@I$'1H[T]1L2gXWVG.Y^7/^S;=\>4ll0@3CJ>MEO?EH@t1aq\Y+)%P<*
%TLT6kAWisS<s:65;^O1rRFVe%`(c7-O[DX$8_D8N%64o:_M/#Enm3sKoZFj8RRk\WBnIi)KKYYL8\?J\REIoT73U.:<V,WY]aU\Q
%JB4+-rn/^s=A(g4YgCt7XO^:/?A?j#.%jD"m;!H-pud'D/#o2[G.9Sm?*94!W[o..bu&cM:024ELp)=JbZ!HR?BgN)M6^V@B7!L)
%rn6u#.'Mu+q8f*Tl)3Z<*lXR:Z-At%bFj).HNK\=N#\3@3:am1^#@&u+a;/"UHEeN2]S"`.X0[ZU^uY**o:j0Q&Kb(it\c]E0fQi
%NiSMQAL/D1_m@rM69EI"?"'t>?:Z!T"N(`Hi\[m*?;)rGEW1u2.1P%-L?$F.@HAhas5C*Fi6Jq*HV\7H2\,1`"9MW>CR^eD2EB.+
%$(hVEDR(.Vl0Z=0]gmfWc`Xk=qp_teF]T@KaaDt`e@%<PhCGYMdcufo%=*,EhWJqN3%E\sGRU9&Fe1K46h?>n&1q<`;S>Hk@R.IX
%q]-btQgX\16n9^EW5E5.]Rq^pP)(;=Cp-QkNE\[5*S_+4U"f?,msc.%&!:S"16"5NeE`U"3X8"aG;.37N6I`o3+22tq1i.#q5U]d
%caVsn''2l^>_ZQIDEOfH?eWjSD\`U-P\%[HBZ`HFNLs7\SsmW@f,FB4#XC.V"p&7k`@7hA$'kCR'S5#sbc5DY<i`g#'\;H>>n$u0
%4i5K'V<G;V`s4MmQIglaGSV,Uhk+eG>Mbof3dnPIN^B9%L(8Y/K3gRq\&Fao_!)flXIIc4/SD/:SlU(H,]$&=:T=fJm(Z<%h.OcO
%ILOEAk/]YXdcAgE8V+;BX2F#K[oK467H%lZEGa"*mS)fg`HKuO5[&e2Eu8U#,gE#.R73=]Z^j\.Gpg2FpfYk6Fm$<iGr#NO7mF6.
%8MOP*FiV%<,D']8RA[=S^m^S#cE2@mD.hA`'s1I5lR!ddrC3D^lg1)&=J$6rL>I2*)Jc8^[e2uudWu;8-4?]Zc'k4_6[,VLllj*"
%`F9i.5a+R#-6!sGRFri+7O\Yn]eNa@NG7**_/a%NlWC68:cA=?X8KI6r65H3Cp^A*E,::Y4h(^uZ+B++T]_ULI0A]*?r%\)m,qXS
%O59#r?T^Z/RuQSIZ2rW*o[>^#IVPG.h+Z_?YnC'2*%a-qGgl1ajX7VE[g\'n;VO,?:nM]lCfb0eldi9(^f@8>$gj;#('8otGh_5[
%=q\W5S%Q;:q3#bmJS@aL>KqNTDfI\M42[;#'!'5S-fpSe2QC;!3Dgtg19b.mSZ!t]og5D`\/QRrC_YW0V=#n&X!C1.elfST_B028
%Chc)?_K.rA4-NZf3h!Yf)/]Jm#9clgnjh@*Eo-DN.JY'ulfDCI@Tt..i3&D&08<$<O0Is3]]Z+^n.4CKP+"NHG&Rq,9=ND7&nYe[
%(p[/oGQedt:42813!6saRdcGOK?aXaH#K,\mk>h;)n<fP8"1$V%5K:plAT*hf=T=aO#AA%"QqM07r]TjGpMRXS4=63coRomqOY`L
%)V*(^T>u)5X@Q2INUApCo.IND#g[!CO0XbO==D@kIQJ$WM*BYFH#Xl4bE<N*F@RGGH/.#6T>uC%rHT47H2NrbVU'g=(-E:1SnGo&
%(E=SiR0tbtNgohuc\Q^=Ce6p&/"Y*ROWiZVZ=SmJqmA".-GqUAnpeC>V1$D>Z;gM?0aSDS@<d#"@o16n`OC?+lTWt#^Kt'-j+U^@
%J(t4oIHe>f`-'$i1Ck]9CB78"(2*EoKsOhD)XK'!o46-pkg',AUN((6`Q?BK[PM2.+T5`]o4\QBqQ[M.i5Fq(`<oSGL>)/AX;f]#
%]6H,EmhR6kEAeQ4OoOgN0D3T@\%BQ-GFia8a4mGqs&?7^iB8"'Ja[d*"f:[ck+q`[$:oP$]?9ao)<=!&W]IK]eot?UDLK:m%G,g:
%)D4LJi"`r?#,Nu)``B]0l&@3@,MRF3her=?V_bcD3ks_<T34=KZQ@r:kPV43GBLUQmS_L/\jV:(7;+R0.Z-=Q1a#JJ&jLK:;P^53
%Q)fJt&%N,qTSZ+Xj'9f6qrNUUZ>rs0Q$8=#4a]3+P[0Gh'0:G#8RR#GlD@jQSueU6(35l&VC`N1LmgAd;-04E.80J_*:42t1bf]q
%=B^c_X^K-&p?^Z(fM-%2fncO4RTOe!Sj:=$+NMA&3M&8C0`_e8IHS7up:M@<]T;`Sij^0>I4r*ug2jk2gbjVfCQS-N!7/(.WUBpK
%al6$8%KX`?b0PV3Rrr&EWe`/:-24f,T/55BV/,noF,'QpNr/"39uT^\./A[)Qd:3'[%V]7iU(bWD):$]BR?n>TBkK4=uL^Bg>:,\
%H(O[lL\I;62F1%V8Fjp+nF&@bY,?kG;I^@@S7fbI=_j;I29>W&coPIVLaghn[GkV!o?_-ggZQN0pW^B,04[i1T",@95*kfu`sPW^
%0Y64:YWV-md)WO3dW_2*'3K[f^U<HEI;Nod^IEbETg.rH]'S!]fN?:-41jU7[q??BC?Y*NcDT8:b?GOmR1A#8j3Q6M`rT7b>(#/Z
%1pCp3]:#8#M^`g'D9N2EER3'$$L&G,Cts7,NYM5%^m)p!p6l^ZkAr>H@g+:,QnSeBL/.g2-\1b>!9L+=nS(aGRM2=U`1,o-IkF"^
%+7Ge.hkd?_9t#<H*:buWHh8\5OOhb9M^BXf6-f8>(\X$41RE'($DrKk@2+a3K,On4PJ@BLZhtoqpAS"M10s@^0"3[JGId?<T&0?L
%r]X,lbfkF+bPRK5Z7BrkY04CR<@oXSTl9HFA(m1i/k`!(_VO'g_>TEZ4F;MVGItca-Vsa_.rFnH:Dh_3%."W3p'CiuKRnQg^cl17
%T.mKF(t^4np(Q<QBhj&E';+F*-Of?O@:7OSeN^cqnXEV+?G(a\igVU8QsKC\2kPTnO5KJO6%AWu-a-n7^Nq&0r8EELT)@otQZ1m[
%O#uOR9bG-Q-_5Vuo+H7%[@8N7AJ_YaaUpY7GiQL:kF_d1s8J\kYk#`g5Q==TrVssbs%?Pq.,D-)ea?fDkHb!]F'eNDD@+a`eaL0J
%(<mX+h#5-fH+_fpCi8f/oCaLan:,r&J+`[3g!eR!?G:[Tl;,$alh2TRIsCe[q<k0X?Wm\_Fo(sfl^+fh3]q]an'[2&rU/A1qlbHq
%s7H!1G(58tr_NILq"Xm[KAP]j^\l]38+P.L-H<?um'%;;O(.`a&S48mW*baXrqVE-A(utte=3\,]Q57OUg0tn;CFJsKU$-L5!JFG
%_;-XjQ$'gsa?5[kGN2$=;k+]u];Ku:+rupuRq%PZ/B_#\]Hh3R/&hMBKiW+gfsGfThino)mYFN`lk[.>gg8Pt9la^ROeqE@-/Q^U
%G\P8Y2<6)9iC82+YEt,/\FE/I^;V%R&Ul)?i[-;KlP=B4=LPg`osAfSYe6F>$0%NBcqm*^2/rImc[R0T[C2P)@f3/&W`5PDeUf[2
%Gk3EUDca8m8&Sut#$a7%MDIolfD1m]120hM:%meg-s[TU7KYbtl,.\.7Fn-Jf:71(<rC[F<Q#GDPE0&2f5c6$@Z^k?mC;Wh]Y$PF
%:7fqqS)ldh:6RW"f9&'6O`m5[me>G[?FhItZPPhlcBJ!+C?,Y3]Q'#CO9q^m-:W@H,D;4cq*$h9-H:p5@"R>TMnGfu&aa6iUI3h"
%jC,Q.6X?m;Z&J1s,$kDEZ%rsW(,)lSXLA:X3A"ofpd(L&DY@2%dLoEf/WR[WghL\_IU!e07"R@7ek9SM(/.W7a;CSH/9^oXII*:]
%R<#T,cs5WPGG2A_Oh6W,li[9Y9#-,aoA-R5<pAqc*\!hHp]-l(kW8N)lh)_L=fb+,edW\R7*i*6\Lcc;6+%@V7ja*XDnV`9g;r&V
%7/cMkYIY=</Ru59EMona;io+,0XkW0b2&5u9k6u>(G0<VD)@%qmp@,I-o9QqjBIGGj?+LGDg]I?YXZ=dI;>!KBiiEd2TPJj(A+Z/
%M2Y"Vn'iie.17]cS_<ITQ1U&X\Ld(/AHq/OZFXTF24a!A/T:f*2NVtPb@CYSeAk81#uE*.V0%rLMAMDLI4VM9@AMT6M"uTf`054Q
%9*1^s>#Ho2/Ku@-ol2TC5qEZe$sY7a.L*u=+u75"l#h0\PA,Orm6lb(*DrXhjjfmnIZeDr:C*1]dNZ+.qEfWGIFVPY-L"Smg]s1g
%CDRJB;fNqGLWkR;fKnMp6g=ki=f-YL(bOuG)/KnX@e5D_V8+]-Vm3mlbSi4F-quj2;*S$KF*-+US,=<ZU,K$/h'H`ma94Z(H$PEV
%lC0@Y0*2?rBu*km<b70k7@MLiq3U@HT1*3Uil_iYnB43nGj1,/.^Xc^J1Xbh[XK)RhXj53%P]p(6k&T0r@SUR/UOp^(2?f'--NLY
%;V4U8l4?uI71Y9.>,g<LbN)Pu#8h&FOO>eI/*&R!$Jkd9f\n\S=<+qOL)BXt\H*HsZrGG+rQ8qS!fE5/()\kqA"5*ZdU^5Iglqi(
%ZZfm.K(]0lM?\\a9j!Dm6_';oq%KW;lS"%UMMW\g>\83-7g(qR>*<gt:oGeLaS5@1/`.fHZofRk5f"HCF@=)`A<p\Hfb#A"nE>hf
%B",rkf76L=?<heAH<[I`Gt*N0PYlqa09oZmG:`<D;Y^SQN+M)bN'kIIfcF<>dR=GqPqp9m=og82iSQr`"C!@?%U)g]98cL+^2fmD
%2usB;UuR,6`+kXba#jd*c]_)#<(0E#E9'_KVD.C#[`EF1CuCX58Y0KV-Skt%j@.c-A;Q4++]BRVK;bn@K\5KJ=mTU!46Dp:Qc)D`
%dNJM:0QZ<>"\+FeJ[!WIG@<^%@!^Hq<F-^u'u;d]&uGh[Qb8#7X%<]+CH"f2__T4k;-lFr29Bs+LLk1N#gD"Fo!$+L^FXdgaYZ`E
%QOh?!ph;g3VE?F$Amu`G#VUF)i`#ePXs,NI:#=a9WeR;aij,L&88H[rb7/,ZUflR2H*;OR.U?5pdN!D%)KsPlML9s]VhilXM'BN0
%[#=^9dK(6'J<bu[6EjDD<"@,-AjhA!O>ju=aL#fs;Ika[]%dei8hc@7_d*`3d`StY:=j'6&R?S6PZ`b0oWWm/a&o]@(W+Uj(SB?m
%36ZF\!s*SII%ElOfH3DE-WUhor7DID$mPl!\q"3LqQ)8&_dW2UZKRSEhej[^H$h^*A8[;<[4AN;7&spIerTdJ;FNLdfLsh8'Ij7"
%I/bDNP*2a!QV'Q%=$'YO9N673i-USu;'gosG8%/cSfpHRCPOLP-9N$+]l[]0Z<@bKL:@Yig3mOHr!jfiT-Wu@O#d\C!)`O$UTQ7,
%`9J;Df<Co,&QrJ@fq>(F&W<e3C(Ds@H7V(:(fm*LBf5TQW/Jm?Gfr?0O]N,e<+MC+X_:WfLLbio2UGi26Q0\i27CZe`b>T;Wot(]
%Gpk6g;(C1RQmB)_C,eYVNh]>aaD/(]kYfW+I9lV@nd&s']fmK@<P,!W`NkYL-pt)u9Qk.\rkA,H6$++k*1e"[Uag,F@P/rX0Cbi[
%+so=Z9MUa%;tRVjQZJq6,G!E<;H$o8Us`Hd7!]OLbffq4((mN^Z&(%a@I`18OYQBa2A[aA0#DGAX[I[cl"U(-,[Cp)GO70<>.!cR
%e1brgRe+e<SO`beR[V^OY28hER;JTPSk;rZOrN+#dNGD#)@F^L8F95b'!,tVnKG5AD*s`IPbM!r;,gWcE&9r-iEMV4m6k&unoW8]
%ejAgJ_'*Q'4Z$BoM>U,?-d'(uo,sC"/\s_u7<mD/om*/!%ZS1UPo'?[$8D/9*#jXI+I5gjP>FG!W2Gd:R)@/OSjrS][dU'EcO9d?
%+oL>t?XW%tH$&u;mdIo<rT`'oDg"?.*;31#rp];n?bUu@PL"f<7F;H9i^O#A3`#BW;Lee3=M$k2W(`Mqp!4$[N3=(Z&=tX0a]2?c
%D:j-n8VuK);^4T4_8n9sM_^BJjo>V8duMSU9/UF*Pe$:&./k^g*:+,;(h2J`b#5J\".b&Q45srj<[*+FYOH#;F(qX_"Uhjmg9U\&
%O5Hf6je"a%h):o=20H(E]BYUa9b_=4<jleo\r5N<(kaA%UlH2fNGlGs:RMb('EJmO]j+i)W_K=NCP1b?OSiCPMRojK$Un=;%)F)"
%1l:3i'*5SZFI.7RZOao_Lc(U<^i75!13c8,_uYT-;;e6:#^^OB-JB1E'Xl'M`4?0++XVA;(-$5O'A_B8\l=tsi6.,OA-#8GA\O%D
%S(Y<n?:1fg5'>dr'^.QiMbAohZ);+7TWeDa*%_.6r9t6M$nk53L^'G/]bs4G"VSUDnPm:7`-b`pXZV$F.c9"U@Ia`sU=u>RY't,(
%W0:RAYE>q)fTu/8a]Mh(E*8].'oM59,s`s=aYC-RF7tX?'Pg;%Po.#U"K]:5<gZ\T"LKj6:T'jl_7%_I)^b/d(EEl1PP5nX?qBGA
%G]C_A$l@P%Zn+?[d$BI>%6BusHBhflCY\tW_H<SFP4YH+bYDl7koq@a=th-Z!h0:V"^4#L!%hX_7CE215sm,sdimD\=6D:dE0$bB
%p]Lda["p@]\mLBr6s4d!lH_sTAajH+e:3_7dP7.:?%X`)>olH5&8Q&Um2R7-@QZ$GbGr3+TLk3G4ICO@4,5T-NDOIFeh$q141*'Q
%Q)>BW[UMK#fX4Ji\e`sMla>B%Zudc_AWN**8fl96LCa_seA2P$ice&%oR=Z$Gdp"JL3TtI7:44'@3d!Bd6^4;/klm=G_X:>)(/Tm
%!B(BjYU#r]rU'Y];jn+IR-#.4YrPQ\)'eAG=\N(g'F1j64;YaO-n>;bLh;:i?mi257Dr,C=KdWC+a,8<`H+?f2[TjL&2b6b:*^&r
%9a7rY>Hf#7Oa.HD7CZJia2:U`Xd?r2BrN5f+-8:I7>1IF3GV)X'4E#a>#ldT,Q_.bK3:PY<P1mf/L+&tfR;K'^uojP?!EN+(H5MF
%aI2hkR9#OXAf:TbO"@GdP;/mQ]"@/^JGX"&VT0GW3?Tnr=XmWR8;9Nh@4C=Fa/-fnA:P$29JH^iBb1<KF0[Fl;%U04^M#o?M9IXe
%&,mj@/@<pX!HAB?LX"og5#s]p<Zk=g6<1ot<\1o:`X,G.<%i)F*>3"?39@H5!OfjlPUD8=/u(&YM*N`N<ikNa:`'6XMRh4Vn3:b%
%T@Cd$DQo^P.DTm2;[iiEVgO]"K5h<,1rB%TI[@Q;jueKV<,^ASPdZ0@"\r0"@d!k+Dq@i.dF&qO-d@bj'BC/,=[5VGUkg('7ISAl
%/aC9raf2nD#snuZVC,Ik,Fl^0,,Re3M$_Jt8e/'5KM=uE'I@\5[M\9L*YGU`+6-[#c1Z>&S*'fl?LYXA!WE*^:.25^gFIe%.p@pU
%]?o;7Gds76fckq(7ji$h0ujW*4?aH2ihY:+'-Sg>-\;G&9,;HA1B_b:EKM51Y;\7B`0$qm/b<"o;c1S<q?mbC:ltjIYD-d;f_'o?
%75I8JMY]&`(_%]NPlU+``Tk\sFe]"a*'QX)ZDH#JC#doh'sA-MA#5?+=o(=uMU&Fr+cV'HCJ1Ce+Z=tTHu0=Qk(rf*I^e0,<eS+t
%["fiK5tj;Lr_U6J!_K[M?/s]409@IlAEhaE_MdY1:IgaZH"f'$>3JZ""=rJdTplo"'o?_dod\OGZqrTj!cJmT5mBeu;s:;:lp=iL
%MZ/m[jt!0pN%W0V;3WFh6;:bK#c-0\cZfCA,6M8d!s(r[.'R3\\.bD;^p:5Dbd:%%3Wb-Al48q7!JI<"#5nuu6d0+e&"#u[*"g2=
%p-Y0H"N1krV!;]"Bo9.Bi5+2:J.c-?mq"9`XVu84."[\@\KL;U#f8'#O^XA^<gQ7K:Ku@U_*5M)jG,<a&IV(%&9cIS\^V\h/aBUG
%KqSWW*#0JV/d4?M3iJ[L:[nk>^]H\.Ad5>4[SS6,aEK?4H"lSp!g]JmbCP4X=A[EZ&]OuNBYjbX31U3djYK'X1.:bu,8:/-Q83TO
%%&uX/PY9'"?=Xff%H3-\UG`]WbqjYpU-<Z^"Re!*L7ns_cG>@i$Q8IbV?&r7+Y=ZGXu%7.BHI44!6=/1jK'ou>GOG.0(`76#Y(+3
%)T:nYf0T>Ug6%6YMG.Oj+[?7abIfGTF6j\c'-3Ko2Ai.2Y[AZOB_*4$!e@'>)K:]D8M<7C`s^HnU;&$,(%D]eaJ3#JMf#+#Ms*V'
%"[sHKr+`Sk847D;K`bM;n,SO]Hnu\,-MM:UOkT#,7>kp_AX:=p37(EYKTIeu;(20/J/OZG1l+(=-HZr8b*Kc-Ja/OXVOC%9j:[9f
%.q^$H/WXV-WJJQ&X:fWT]X^_E\6A>oL6%+/03nr?35t/lA/jl']G2'?2#=o".BFElI,pQ(<b0&t2't],8p?Y;a*^U00Of]<-M!)b
%.L,m_TVNk8nJldKU8q:Ul`gFV//Z@A(:Da:A-26JKLB5"*II66Cm@>SV(/A+8lj#(0b;tq)O?,ED7tMfQQX?m1*KKP[VL\X!<e(Z
%cOk]:!?N9o<nH1K6\=?nO`K*.=S(Enqc^)45Z&ZlSkPu6!%XB+BG%ctY$,$_[2"jO?jTF.*QT"HCSFpB<YW.[E=CQQ4lWZkJ3PS`
%N6tnE8#:,e>4BC*!o$@&8<J555D(Oi7cQWa^@gN1l^MjhpUJrn7uE3uSBS(1A^QLU)W<aF1M0jK):&pP3=Ee?<(_u"32FqE`$uf(
%D7=@+`&<,j#Q"Yp>a')6!6O"pP?)KF=W#sQZ,dg"&#,r#L#G6V3j0,BW/O$Z9&OW^GpVH=+HE@%WNQaXBS8rW))GkM"kIIG=DZDP
%:e*/J9\*.1=Ftc8M'5frIKX)t&i3OF(a13bK(']X)=^']!"P;5IGLV(+![=)M.6,$Y@-,j0:GTsLt*F94gB--$WD?VhNa`7&iCja
%1)S$I0i\S6O>P6sU2?,jP($Tm?c%5)d]Ka;R1b6G*akF0"2jX!*E8MO*Pg=%.S1D?Su5.I2#^2hi]LE)BGG;]5"OH5#'S@o,'g#W
%)5r20$:ePb+u&BI3'oAV<sQ`4VXYc9RgSW)m_mM^EslA"GaLa:C"OR5L7i>#X?iQt#&VV'JYT0[!GTgbj[EWrbq@7;p5%]cC6CQ9
%;^C!]`F2:@>!t)I.T)uD)_KPK%IO%oKfr:7SHDdkVFWrg\4,dt344l^2e#WWpON$<%rfVKesY)l99rmPjRr9'N*@-t&-X2[M0r-q
%3'b/"r?TO9-M/he9AiID1.h77B"!N"_A$CBL/C&N9k"/>5\cTpiXe&M(4os9-%a@,GR*7G\#O"ah+T#E1BJ@e7Z@,`6E:k#SnH7s
%i%6fX-KQ:_61Y-c)4<6hoL>G9GV^lZc.caR?tR\Um*IO1lL?JJ;`?ePSCiT_EugCoK(i%K49oS_,sL0%Y#<Y@Pb_Ls-?VB^(_H9p
%oNk=*Hq+c%$i;p:]ON2r;?_-nR6r,*13W7'2?^T$a]%[u,=88rErq3-GT+OJO@4,jLg39"e8$jN0m&cG-dA.'1c\I^fVp+b)b3jZ
%!WBom!,:@f^^"EL$NkVs;Ennc%&8"K\jFmg]/cURE#ZM6[%Lhb&,-[.l8::`6tYh\(TiqCLoP%^2-[?ijF"32e]=#_TPg`=8O[.&
%Y]C()_5(C8dHI1sPT<CHMW1:oM1\[TCa*nOi#j8/"\r3!0/7Qj(N-,t5@s2MQdfLK[-Y0k[=QC04:]sI[YE;jas<LY\N,e?"'&&]
%Oaf.$i'DDo_DiNa-pAgWBnep@@1;']2?"+CJeeiX/1)-Edqhgl=$rar!^Wbidk]qXcD9aN->%g,_8e3b7H!'\I3dH#fhmdnH:o"_
%IbNmSc,f(d,XZGan0)p@Ts3LlUBNq?1h:ii2HG?:n^%JgM:DdnNN%%k9m%IHU0!TK&WO53U>r&tTJ\TenF^$,^_W?91Ba[M"<im`
%ePl`#bQkKdXFNR>n3M'Y)?><KG5uW5TJQUI6,T?IMK(sE3()@dkTNFZP(iF9,WI#VR?/F#IH2ZI^+n^s;D!4>IUFoC0sd=V7HT=1
%#a(>Y)eA)fFX)Nb_!,&V'_KI/JjRME`B9(fAAU19FAa]Do+LX<i(5pO'@*SIp.u*u%Fsn^?,c:6XHU,)%aq).1jE*5Y@sW<*L`U'
%?>,?"?dPIOS0m?*;T%#*`'*'o[hZRiRhr@A3>*31)XtDp3&V&_/.2;T]ie<YI[E&%;IP\FZ-YC5CcuFS1]DfPKVuWsiE7:Un5,Qr
%lsHCXTen]KcoBgb#ZZ6'?qZ*VY>CT/7?NNE,"lT`,HFqbUq5B4-(1&&#cd%R):MK?##qN+^IGXHn0Wjc4VA!1:_P%Q9NB2lQ7!qs
%+tjL!.D?6I&NLk'ZX+9B<feC1_JiTk,mT%%ZM8NB1*:ElI1mW!Y=Vm$Okl2n6oCa5,6?RTp^U['3)D7P-:iB5Fo[1r.B&B6"L.44
%rcSZj.7>U=?pc?([N!^!k'<\$OY+d;d!UA%MYmJ%`3_m)!SRToOO,lC7a:C4[,6(9KpY!7TE+s\(EiTmZ()]/!r]i#E1/G=S.HM[
%loe)BOD.NOdVbb/UaGAj"B^Y\3(=R1L_Y!b+CJSj87M9E<$?lh11j)\fTLkrX/M1PaJrJ&_a5`\!D-=:qT*Pc$lWma!NomWQE5'k
%MqoCnK@IZ-@Ci8g"u77k^h]qfG0#b8_HWl^c"Ys!AL7UK_%UmR.>j2<UekT&+E?]@I@BKC,c#rCkV]^ij"D&BML)81+RlUWplYC_
%3W]VS190n#MkuMDQ209T14]"\&WMNa6AoFe#,Hme==AS`#=#gpkXL@ufP'8]iX%"?E'7tSO>i*u3XS&c7>G.U941Vd;HH&RW[BhZ
%1e@\>\KJ,(Et@-f]@>toa?p(o+X39'O@@HDJs#!AN*R+<'!gD.gHe#ZUtmILS2KV&>fF;"<5j_+fgiaW]h4YDERA3Lo1?P8iT/L*
%D"T]]2TJ.HM6I*oFdS#:4sI40Y@p^d%<q0C32.AU%=/LXeJ#n.`tc.3BP<b=a::o02i58!&qgX]iP?`Pe%oBE%5\"=m=-)7OjW2^
%bjPrc6$d7H$i)rQK\uL;eB\lQHU6"`q_DkLF[e@kKVOPi/]Y-)&9o\CPTd^VeW+D0,:Ab2Ob9@/[OFj!Sp&:MHQDq>21&M1Z-bF%
%e-&Ud\i:g=#N,kVWsN:P1-VB8D<b?2n)]mbr(_YRN:\084%i(IUoObBM:9XaUuJ(CLb$<X6:B3Ngr,oO,i@TgAj_bi)JY@69o!P`
%+XA_c+HK3*"EGY_0bQI.j]aFcWQpT=P04-&,,$"uV2#+@#`Wh*B$^T*pC)4(eZB+];rsM;N;+$TMo"8s0El1LbZ`2ThH=:XBIXo\
%?S?!I0$kpUO<,u;BfK*6ht&ai!QmqYBpbW>#'2+'AnAm_/IPqf:\dj7:t$SYf*?,=c^]`c0KiTM;'H#SP73;WBZX3<VC7eN<ejQe
%Jc`<5J;7k(J?pj=<^g_h/db<-nYKl!<(K^fP^u8s7Fn0qVl!lDNN>qJ8VPiY[u5ed$q7LNJ)=Uo`GT>n3t5POcjMWP!9`<Q&ZZ-g
%i^n:5)qe825<R*^;GY*h!,4c%Y:;qH:dD/d0Qa$Ip`T>MoXj)P6&<EEB?SB)@Ogl!G6p[l!n1DYrAkk$72uu#a"nTHZ&G*N3'L[q
%U@6G14,PUd"DC)t10^-UA=$m;de[VX&@@7Xa"35T$fGWI[QH<plS>%]Dhj.AR*o^[!Z4cR+-j'\>qB\:>>Q?G*Pr7;"L>](#i#Ij
%9Me!l>)7l3-r"*daMF?3c4m/snH@_s3uimq`0m3_K61l)6&7P=(I3Y0`He&=@t=UK!55hX994U=R49l`A7g9A5X2cW*_'HW(r1`a
%$'f3[rB.L9\RI9^i,:6\&inN+Sq:Q`TUo"P9arV@#sO9uS&m48)rfMeS2Ipa&FDr&@G!(K9^8r1)Hr1L7BqqPU)n6[TH\H.R%hV:
%oMA"s<U5K$n5=#L'3SXsS?E@5+4&lW+Pp1-CpIVX_N*2bAoiQd)3J_G<#EqhEZA8MYO8aI3SL=$Kl\Hbe3_*eZls10!o?7kai4IQ
%[LOB/=!C7X:dB^k:j`7Q2b^ag?9>.79-u&bHa49QZe&e`CelBs!3e.c.[mVo(3Zlfac\S6#_m)V(C@Q)@WIa8p!6Z]JD)$fbCU&H
%[0/]Gl\R0%@_*LtCZHI05q-PgIW)XZGU-WR]M)V<L/6Z"6pD<O#SiC'H9duk;.NK5iXhM7#iHj\No>)m0.Wr_5WA9,iQa`TUQLtH
%>iH&"2'?W@(5R<L>r&T:O'n:&HDh`UN"Y0)U]S14H"dquBMo7n9:)LM"M/\0Y+/e=Z%N&ek@o1eBP#=jM3^[:<tRV-Eu#(m`MPL:
%BW7g;dHre3au?2PHPO<r.t)2:7/(1-^^F&a"#-ChfI^ldS@%3iTePDFi887sH6I$4<e)%(8?p)BC$Z3ghJ8-7,^EKC6eF#ur#IUI
%3E[su5\WD96<#/I.fWsN7ZNd?MQ)Qc?G$aR1a=<P+QjoG<TV=pF_h7tUM=\%bZ#i/W!/;W=VO6ec.$.$FlY?KDlWFc1_ef#3=e@J
%'-WS0'q0?8!)@0UIe-[dYTFXPK!uTm*6GJm!p!P3O=fMjBW0,X!qM.<4BbkZ5JV)jl?5'1f)\I$XN1hR0ps/h-o)iG/lk"OfTGGa
%(nP/EYMKpVJ?M7d::kn-Zu@0F.:reoD446#'"F6)0k4L,7E+V6l4h+58]?52g;%AP<AOtNbOmJXm9IN`Y>t2DQtM-t\,a=(1'qrM
%VE;CYJ^a]O1P7\QPV-RiZ=5#fTTucMOF_,*F.RQfS0#H?&N8kZUpASQg*/;lF,H!1CT4J'&eO$;2Wi1oFe;&gWT/tX=E;f2bWKK=
%?FhCQ>#^FZ-#EaM0A'VgW6eKTe6s")YB_ebUW'!T$`.$=$^b^1`0er$O/u)gY7k5n:hlk-,E)2e"Q`N6NtjCHJ?P?%RKTuC93tX&
%<@f[/.EeC*RbgF!KCjRWFU3Psk!eCiaI%ad5h$>f!`LofWIr;r'G<Y50ck)PF]C>t+>ORsaXD[a-`oda$W9YMg_j+0TNQ[O"HY?=
%T%S1H9!)bj'm'l5dk&bD=T'WPSJaeVS?_CYa:'YN`*!bNl%dof'i:"WD*,"iAVW<Q+F88g"q*PO.u-:<JqfN;9YVN05_'0?Z4$"*
%laikp'f9KhVj'p7iA[2E"U0Y!:r'Wbd+]tDA;VjPJJbeKi5%HB-6E<85Bb\O=JD_j_T6]H#SL<=Zkb^ZB^of-3_fE94PU`*-9rN,
%ep4MU^rkH<8;#X8dI.f)oM#"AV:$91i0EeU3"N>"CsbSXLCrulW3Jk!\7^MHi>Tpt(Z,LbRY_3Z!5-o%A0qFR!1@Q@hF`q%U,<H+
%c$5p]K:qn+9[hX:0NnK,TLJ6OXEY>%X5"t$NDreD<mZB9LBamK6,L11pY5=O9gfh*"$2I8]]Ol'-+IZR&M9GZ%75S&5_o$T'Q=n$
%!)!k)o*^IDK&p9F5QYjk71-nP17d8bB*eb(XE6]\@N`GQI7d$B3SkX)?jI,ad9-%!VBR1:O`X`^of###hD_Zf@+3Qe7J\&..^T!0
%b%=r9#X!eQ*!aDYeaA-\YOQFr6T";[cg[lq[=J!_E.>Cl)>-7d0g&]uGUgBS7/7Z;56'&lhl1OGRbn!\&)QX[:X^u3s6<Z]T"Xpa
%q!u$]IJ*0gaP6?F="f'uc>It,P2G,GGQ6asrRYDu6dD=\G!GrYm[sLaI_8#8oT"'=W*6*pM+(_JDm_ILBhV2A@DR;EggY68.8)q*
%#ene[0H`#TL/E[]^lk"?VmR-]MKp#6'I1%aRYI<A@NgjA9$L1+l*R2$_4ErX-B^"FV?UTf>"8#eo%f[+;CGF#0E\f+rr&U`KYiW>
%'W3[+`/dbTMh!a0$HJoE_8NN"3sG1b.L?)3(Q^p6dO?=@4rX!VUo^]hh6=eYpo67cWR2IjR+q3NQuH07YLiI!6C.'!1i^io9;=pM
%`Rf#q:+@/skgrfd.V3Bp?^p<PY[)c'rEf@;ri!m<4;:fu3gbcpXCr",B4EA8;/;tM")1]Z)'@C)K`!+:KB*j>4KslDBu.GAPdnUX
%KD:\YbtN8RH]==040crV2%Z4EKG#$_`1=i8G?SRJJ[qJMSLMBGD"Tq86V4Gs*"*7ML#I?`W.56Z/K3E-Q8LckU_!e?'3L'sKVEc7
%/PO\"g6EQ36lN5sfG2acNQ?W^"F_b0A4?#*;nlKh3M7D1,T1-P7Cns[i?2ZH1&6i!&PG0H`e18tm<-pW=(D<Jl:7-k>0(\mn:L?o
%WoTT3;B]h6SOWUEC)Q2&],HSsb_4?H8AQeL@8Oc,#&(t00PWumn-*L%HiOm+fW1Bj8C:^.h?AP)eE[i(1h92ClLk,L9s\*sdN#Ao
%"6<_6ho'l/DH=*H7P9'D@<&!QE@Do%cajTUTn$]V[q@;3e8@eG'(IY&of9Fc[IaPQd!(-]R%oQJL=@a8=d[:A$")4Qjm\@J%#.;X
%2D%3H/U]]=2m"E7VAnEQXA$SGN)5)(C#?Tm01CFCjRRU@i`hqZ]GYJUes8RA&\A\$),h6nYiNKt;&jkq7Hk,<=kUIS97+lr0s;3b
%N7QT3=n-LC2(^:&)Zs*Q'TO6P%?O$fm_^9nN[5lLh);CH-,g&&X(d8)=u$@60SFP_!an6J=<i--kq7:$``%Wu4WuO60X7.429Z=k
%J6>I@6fd%K,J4IH-rE]6CS3s1<O<qa:LHIi@-0c:gTFPH@%\-b->>^cG`&pD/_6f>M\aRi/s_Z8QU9&1Q0[csOf0EW__Z&tJ54;m
%\P2.sT^\lb*K'Gl#bigU^(E05ObOR]*K9-rG<rME(+Y5%&:?nr&Sd!H_KlT#&co8ad:+h*<*>YeYYN=oNu7tl3IhsnO6*TZe<e9g
%JIG@Ek/X_=V0`:GG>4iLSRsPuo3jr:Tk"q2M\[0Y/`4sUG2V7Y\._s'VA+/$Hr;>OKQQE$OCTNQNX!Pm"C;uBEW_(8CIf&nL:@Ub
%'$^n&PDr*>2[ILJA3_J_F,IpkHA4cW6r4?*'i<kK>^Y7>(&gh$i[$H-C)/p(GL8*B:d?NSZHS;/&.pZL+.:W_?ce)e7.W9#PLgtE
%+)Cspd@r5@.jD\/;-[7/&[^*mWTcF'=phWKZ9C%GF5.&o6t!slo0h_BbD4Qipf8Rp$Ie9`j0\nHJ8e#n:0(82GWIkd$]2"(]RlI(
%,7c.3C+S:J,'*KW#`GC-Oq?lsYZ_,"TaTb@<gNG6E,\[)e;0KX8:j7k0N+bj[6^GG7Jrp3+YnJH@Mj?ug;C_sEZ*Sq<Cc).L,&e\
%27l0.JHRG`[k]*-M%[=R6_2c%!36bXQZ-qZpZMYm<^?kqWceGl)fa),e>OOd[tkk%V?0Ru5B!7+NQu%j0E1?9Y>:N"^)*1E1VUWt
%5TseYOJp2r(d8,)ARNZ<8S]8^V37>S5eI]`YlRN$=eh#;3m\5P13gY[X3D6D7@4J$C^cE1J`7+Y7c9@8;ai6$GZc."P:B^kZ%/Po
%'Ekl4j$OV?KT_8B8nq.F:f/<G;;tC8-;gp$FDYWUK82b,gq_?>BS:mSD^63p.`6@b"d'0H:9\pcQ*?ng$l)JZGnMFaBZ>psE+@Ok
%;fVqYs1jj'.#G&,:dS%n5E!Vr$c;pP@4d^M8Q]8irrpko,<l0q"0=(\RjiA@KFSHW11[dI%Q*8$!L#g3%VKf^L+4uXU-ags:l5AX
%/\RLY?9t>F9ZGB%K'u0$Znu&VHtq+A.a9*3&g14`VI@kO.TQtnW/+S:Wuqb+a!$P%Ct-7JfDbJ7D+DC,`4muh!Z5/Ypl>pI5U6Y)
%7"'k=>?No)3PBUO+;i0fH5l8ZfpEYF-d)M<X6VGEO\L@dEqCi$Oq0*,:g?i?_4_=UP`q"QZ0'de9je(9_6dR"\]E,Uo@muZI50]A
%#$LgYEMKBO&M:r<.97d6VVIp93'bU2n<=-j%YKO;<]9qU#4/pr7$7cM13*dX0b]!RT_#+=U8/QU!t;K`?8MXQM.j1r5s[QFbgJUI
%9;Rj,39G,]7GbX;NhJ,%`k[PN_Z$t_`Csbo??98+PU!);1lsk$qP@P3bCHFj=nMd=E&<*3WPK`D%6q$(A8rpMQsRhf-S;B0N(Mn,
%^=m8ZS&TJl-&)RZHTV9;aJTlYE;kP5^G#Vg-#k#ub63B04Kq9=p69G$2*Qg#_l(hfOr=%0>0K<JLqnlS87pbDB@6oodQ"E<<X;<u
%QAgHh0FK^n&JW^Z?ls^"\Hd7!X6>+G2@HX#-8dK#6qdS<<'>k/agdFp:8TRo*0;aG4:MSV'FSI@$!?`Y=p5Jk(/+9/<^M@-M!`dG
%Z6n(G\ukc*O>QB$Q\e:VW&"OrY\2hmU@i1M#7]HNUV'@EXohOnX.%;qPm-JknALVf\q4Np*3iVS]<5V%(b7.h&IcmiZ7B$sKO*j\
%`ZTgOF7//O!mrXmjc[4'iR_`R=3sJn-tO:.Ho>:TJ-DOdlV#:OJ.Au?,,hFs`b8c.O!Y_[1Q(.gZW%#nc9"IiQk=&snq6uCQEb"o
%=?]r[-(Ej:GQnK4<fdAd)]WJmK,bmpK"OPFQIC5(4`<X*'O$)m1`W28CufI%H-&IG'7'))Q6L'E%1CaUAnUUF[41P])6h+Zaj/%t
%,tG5MFN-X42SSoF_@H3;Em^[W#2d:l,rH'm\C-U$8D+[Td.H2!Tk*hd5bq;UVd2Vb5%)f?@HgXE4Ab:%pcD7Ca:<sQ-A<.lOTp"Q
%RT]>L-4Ao#+V@K&O3ncCC:YO-#pc8A5tQlE(5N'@#]Pup='0lXY0>\EWXMJ==U*q!XPT,.j.;SQNF&C@#m>@u;DlQ"/]7h;4on*8
%fB/SH2,NgJXK%i\X`]$1:b&R+P#:o!dNd+:U:%5"$3?=D6g9ul=q?WAUI3rh/R"s#B.-<-dR8+`U1IWI4cPFH`[H%"E/]4=g%A'D
%81fA1r&T7/@doZu#MH.d7tt1i'ob1d=unf:SHpXkbZ#fDQWA3J10I,j!sg`87l)XRLL5?:'q7d(5Unlc<oJ]M,9?Xr/^2F\S`.b<
%C!kW[+=lNF_s3q*aoW/cp&E\76;g+ERJ"'`Bk:iqYW@H_M(,__ZMN71J6/(nh?<4W[#k7f!%2RBO>7V7"EOa=l$uHhVhrAgglioo
%3(6m%*Vq^R.L)a.)9el"O&H6&dV5^$@_k?I?,1tY"_1?pZjcg6>[(2M@'Xn%lkbU08E#'U/Lk4I(bT*a#WXBF?e$#[&@:sE(I&Ue
%;u&]$56^;a,&%17OXl,$#;TD`ASFM\6Ye]aDlV>:3L!3na?h9[SimbFQLh-l;p6'e8jLX1X/qF#nY)5bH;]-`^'F!nqHQPLfa-c6
%OGdg+YcTA'E@(SJVqk<":4ajtEgF.[`U[/JJt`F<?*XWMST^j]b&1e0KpFuGL;fA;:@=AG,_Tqk#nr,hW4lCVK3kAhJO'1NTm)s2
%ARMJLW0/T5P=6Tf=kZrb52jP2U*df2c/=!qZ7tt'/]r$&1SSq!VbrY28(6'W[8i#^bcT>cJHR*1/dcOY[?A>LCp/QVC^+l=4E21=
%K`J"ur.W,Mgr._Iq`Aj#Yg0DuZ_p%+Jj$gN@S.q^@3;Pj`g%b;1Zq;DaO#GTQ(rLC/+7rEZ0`C!8d$lelm#W8%!S$Un$(W*=2["I
%U#jqSd_pQCJ8u;2,[1bo:S7`"d2#oSBM#&@RK5]'ruS5_6+!R%[^oP9/VM)Yr8i*^!="J1"f",=o*uPB/Cqi!-Yr/C*2HXsL9];[
%22:OhdT[>;=L-@U2OMi./1+t,A@>5ejdUg_B_L(l"W^;-81\4dQ-#=c8/2c2FW1A4[pfupW%F@]hnhZ$ql!p#aMS'/2?d8"E`9S^
%l4jS^g'ld(-''+(AcQ8K%nm<q2D$g%Lt#D6PR4cD'5M)R"/%;Xi^JA3[\>,U"B@/>?q+sq[,?m^Ah>;1LdJf`i.K8;,S<pO7CB9m
%TMpEQ$$IkTRX)4J0h"g,?FQ*e0Pd[D`rXD&Ub!^1)0B3e,$g4sW%7Hh1c_9s0ZL@%\:HrmaFeAm_()'G-T)nW]2GLc\#+\,f2#@j
%T4rdPitKRmMVQC?n!PJd<MM+tClBA7^."D$Xb@?cJB0L0L+#rpg/CXuKu2Q/Yo/i#fS"lG[4oi<=b21E=FsHKO=&dEDD@S)(mj;7
%"pnXWH=BQa+eQ.u''>dRNSQ94,J^7]jC1GeCg*q.06-k!7-f`9*N+#f%VQE@50P>SPj&uQ;dc"L*BL^1AL+(`mMn^t3uK;a0r)l2
%#VfAc2k-Bqk:W0.'q;qgR-5hRAITcH9mI"V:Y;+p0E8aZ^IFn$a>e-ZJu%7^=0H(s'#Jdn42`K?Z6;0Ak@c$(c\dZ==T[$sdAgfW
%FG5p$mh4^BJo$-,2\!>`fHj2I9\'j.>sGPs).EtSfZq8PA-J\`)VDVd"o`?&9Fuan;arkcj7mJXp0n7V6%OU2\uQ5513)#&b&^F=
%"*[./[:`n8^ojNsX%Z5^nQ*0,`-P!CR"iah1k1^$D,0B5ET#BipM*C0=uD(fqc""@5EWu*gFa0B\(-PV5Xp4=q1jFAB)3%]AjS28
%@V.tW*jb6te2bM,@&_d6:3$2u`RcoB3(oK5p=pP)MbtE(6?1"M902)H#Mr$%Nm9!^SgIVtSPHgtP=uoRE@Bt\Um34<1;XgPaM^q/
%T]($/,u$ZX/!W(LpN4Bu9]F_'+E=0/c6U-*']R:RGIV+B@AOISeMN$cFh"?'kK]I4a3/SaE4g(n'G9nj,N"#jieBB3+&Au>dtWJU
%"4>:DCNtJ)>1t).LT/fu''^2A8V8\-i=(L"(>qo/b&AI</4A5HL1e]ck_.oo=k[lY$`E.nB%d]"3)U\390-OB37D7Qr\1WsmY[8,
%)-8e[0%Tt=<B(Y(Oj;gO_O4LFh&0-NTf)E$)GrIB9qghW:H7[fiu(L7iBCRcjU"HJ&N;/mnq9*mN'iNMGeuaKaGeQ`'+R&P`lbbQ
%iF$RHRnBRbLEL/Vf7kRk^1st/E%47nDMR37*9#PCO$\8,#Y1m+FPe2HQW\j0A645!7ag7HDWnpqHdFG0m,3lqct/;kPDM;r1N)\_
%1_N!^_*Ka]b]ls:UOUA2^0q49+%6kLFCK2CD:rMt'/;J&[ZW.d,mNPXE5#)ki#oh0.D99skLOSX:Ch&VNX&PZ?j<6,AnH"!p79UC
%-kD\G^DZ2npQK*`f1ZX6PRFdhNmgNA(Z!4C^:%k!_6o[gNQ)IRHdTUpm,4]&Je,S,#=l*9+Er-NdNfrN@F0Xj`s^W_D!Acm7'eAP
%dt<i^Mjm"LkeVD*\lr-\E%24G)g?aM;JKX,Y73]U%7qn&GCFLKZ,X`\c4:E6Ql12hH>q:9Z`KhKK9I(.gBhtNE4"iS59#&j^okgc
%DY2k'i:%UG34EL0c16T0*5Lu5*G=.@AtMRj_3Q.4=_-;HV:1&QQ'5E$FaA!pI2G`9dXsWIagmZW*"AA"f@du3p?T:_3_9(>X@UPm
%fYO8ZPg+Wo%Se,Or#UJ2S,a[1r/D_eLg@80op$O;.KT0`K,iZd?PZ2N:(Ig?O+^qGH>of%*K!T&NY\bmn+>OOdE;4n4h0NQ>sS9K
%4ZL;JX?G:cK-O!a7YoHEP<b:N18>*+]\##\E)53CRKbd^-`pi?is$l^&9gV0c-UG=Rgs=TBXrhU`uAo8O;0%hp2t7lX,r^Y_6q7t
%S<Y(!Rhri&K<I6"jP]l6!m`Y_\@s$#D'K9m5G;#,l_dJe:Y-X*c-aCF9P3.#K<p3@#?BpkB/#E8*h=7?S=Rcm;1lL98YS7'\5tjb
%[o.h\?=g[rQ5Ua!RUY3G)B:H$#+mq636nMY9QWW2mTE%]rCRM/:cG$]B2F5E6<;4FB52Ce>9b(GC2gcaMZms2gUPU5-9'`<E%@3;
%]5rV"7HpF*2n1(56d',ti$=Aa`WJeME:OI%mUX3E:2c3#8Y$f*>A@<O_:M==gu.hOR-!)5_9"R2]:^'$318sNK<jG?`sCo.9u[Xf
%[)HF+^ah?'G8O>+,NAuPgf:#SPoC^52TE*fF+ZiD-oYc$#02fd9s:+u_9o>mk0=F]'?SR8gu-OXb,@@@K1!g6EA3"qiMKD')&s<B
%$1AgR<i)nBDD6]a!41NQY8b)pDj\A_J]*N9c3t0lXj_[8$kAk("Wf`]3-dqcD(@EP"(E28d_Q>u\XVj+$XOXU;)bl?E7pADeQK_>
%Qe#CG.6+[)^jnL&D3q=YfhMi[][Al`7e#2ts(!GZkO]+,n:>(fMs(?aGj`,u)`$mkX:h\2EIecW@ZmlkJR]lIZ#n.lN^*sCCc`6=
%,:*Krf0fbeXs`8D&V2aoQs2:f,&gR(-r^(<"HMV0pSegWZZ8?UVD9?7[-0tT)^=do?0T5a!JcNJ/JC/S36`9"'O?"";`:/Hdt">;
%Omb-b(G>TW/^MPDmb@On(3%^[&r#eEhrNpoMn6>2V<ZiTC1GX>Kif_[eeV`77aS8=Q89_'4@(nAmYp'"(<H+h/`\[?[,534lMW\*
%JIQ%6M2Uj#.nb*_!![Bfhe?fUbQ&-JK0,bE"#u\]iUM!sE0tI/SML@-CYVtiDf0R;g6#,1mT;jtg)0oNUHZ8Q[Ln#le$,sHN<#KF
%2Q4">&qJGs:3G[u7Y?tGbl$AR1DOGbSH0]>h@9I&f68"an:0JH=_HD*^r_mW>(B#fHr8s!D&C&kaoaVr1P!sJFik\!#&r/_Lr$LL
%0aP;)MsLT)XQtFAd0[Sp0"J:Ls!@al\YD7d2_A]T5Ks&_,h&Q!dJ:Np=enaVr80no$VRp?rbl[dc$ZkCs%UL9)@.;]Ds#:%K00#j
%/I!,3Sc0QZNiq&Q&1d]<2qFiTh<D\rd`.g.:B+%o6cP<Jo\U'E<**/tDsmSGqP6mdN><fuhp?kB\_-Q`m=Aa$rH.mSa4`8(SdkWW
%TB^t&)#ZD@ETL8ol+^@8_rS:%s%Or;<6n&6%C8n0`squ+((U'hn*Jql%(1U@2sfEe6'rWKfY@6^*kcFWhln(kB="H7VVX]DAC,ff
%jF&g'UsjggKbTjmp2<GZ@`n#.Mmq>^Y_2ln=(\*0)tn26PK]korL7C./+5Or[j/_h4!XdFGA9`C-iYO\-Hi_RjPNX$U35;6^R<ip
%=kCd1fs7!gY`aLJZ(Y&Cs5lDiK'VLTFSAcPc/db5c63C.jPT/U7ZKS)\)S6,-(T%*PE:rg2!T#Oi54k\NVON!eb<-NM8*2A`s6_G
%DnNb.;1BtmG"VCg\&@0?V'PKIhe_7h:n@BN/S*Dh&:`/'neV0LGf2osAm0).^M2nb3\c,j]*O:9k&7P2R`@@3"eZ(B@VKp8M,\3M
%h9,Z?F5f4M2iX\$-:l<`AND6K&F79ljQ>OqgCSjun<"ueSbO.aTC,A"M8(bk9()@fKD:p78st^!qO8@=\j,UVrN-[r16I'ucDiY@
%^Qm&%V_dm^2!`FoSc"u9I<q<Pr#9U*;OVOV^[]mD8CH2+nR]:%nqR+4Skl0HAaJ;fWE_rar>R]%bak1#)dT*V?Ch%aiXqA`Y^^F6
%gVkuBD_qRkn(ce-#eH;tS!mb?i-_C#``-Rg_4^d>Q5K4M2q6a/%.S2/r[&c-*>pp22m_YPV-gCThh[pT$VI>rAr'&XS7_&)+u,?V
%ho>VS9:9TT\A&nM,&4^Jrh^F1,iMApc'hF;Cn:Q0.l;,#qir\R<MKrco\[mb,PtfFs+[)<A;hK(D[(hb^!l5\!MSa1J"?QX/P>-6
%U&RS<PJK<Y2]cCs`m=;7"SZTpGPZ6T(Xf8Jo\Y$EXc3eg2eJn$mnWnB+XXJ^T`8VsKa]XSqJT%>A^'E2h\[_YkVq_?R@MhQ=bGUp
%?!HmBrf*EoO.A05rO4,-!J&qOIkuqB3-=?`Ft>uIl('-$SZ$nBD"tbZq8O7Prbohb34m*Ys-_EV4_QePh[45>Yk!9"h2h,Q_uIu7
%\me2^K//,WBY/EdDbn!^1.,.BDtZW(TI)[V%-4P&_>inniP/UrDff/o(NfXp=PT0e3?.s9i,$Ad[dnpSp\;VJs38BX=0UZ`7c^`6
%<d',q)qj%.D^PI%:l1(X0"\t"c,-TikZV#mc=DUg)uacAIJK`,#6-XQN-0o6cMu/K0tmJ.s,GG_V(XM(E7U7nH`G?kNjm)%oKG']
%j)o(XFTQMUF=h1`&:e8bld0_TE,>Uce-Wp9WOC"Ri5#8MXhb:Yd?R1>]Foa1A2LCchoIqC4pZf@)_L3Lc2?H9#Mlnbo7&P:?V.ni
%ru:.J;:s6F,F(EU&&6SCo:[J6m,*V-k]5=[J)d<RnEK;sLtO8nDY2g/a42osn:-YrK'$A%s!IA"2XD=ZhjD1d&U"(kHBk$LgdM\>
%kU%o$!cW9??!@WN);ER0)C#5P$d/gb"Q7cEI?P\R`?S/KN.V0O%4pf!:k1>M"D-47_"md[4us#FL$/Iod,Vf2^mQQAcZ;GTm[.q5
%JeTF1f+-p)Gt%iFGo1?nR<<p,.>C:^a8sS66JZP,35CqRY3+n@!fk6)H6+(u^mP@(XU9g8!4GJ]!niZc;]@THk*Vt3831?`-:u!+
%^\$Q1l<cLW36RIuEbn:^BhHepl6P;TqV8W&OFWP%L3o"u8ANX1[cP/aJ2=dZNFY'V\C5hhF@H=lB&-(mPCR-`Z"e'9J7IE!5(6-+
%N_=d0IO,#-$WEWU,iF%S^uRc_Nb:$ZFHD#'qZ9;#2^I='&5cXr8AH+W#:r)1^u:]JAE;U"%M`kDBluKB32$@bZ$$UrJ-"Ba)\-gD
%PI=t?JA\M?D8A:=\Dr%d$jY)ui+Q`Fm,.jk[&9CmcQ(kf4%C(Bc2m@CVgV;j#<:R-q-c3%i5"_pADN>eJ>7fl*ZGH*`8<k42&O+@
%DTH6q!,"(0;U5Wa&]n]HXo.(t87hHZkPoG.s4N_;)c0oPEFo/>_\26,rXB,e,"6+]r=/RV&F?(hB!m-]/+[tk*BppMhp$>g(qeaV
%7+Aa(n:!H"1M"8kI\T?O`!tRAa%aHC&3]W6K>ETD8=fGnAe'^r[^=qG;q/"Phl,/$#Ll>[))6\&Yi5M7G>/9Hj8;C>4pahCjYo`U
%5g$ZLr.`$eGV^ZDc3+jYiXEI1$dc>(hf.;9Q0auE>;Kj2\A")2`R;1(eTV<l5s2*[d8dGMK<8,1CaKZeVtrl@&sIO>Dmgcl\#&r@
%m+'@_3n6/obr-/^KC+;eQQ)Ob?6hOE^/9IE+NZ[f2uL[?7e$r479?<aHro'<Hr,28DlhJFJoC3^VRH&Bj/j!;-3q:E0fgT`Sb]tP
%bS1ZLpLXL]TY^)V(0VndIW&aGf?dQEDg6]H[53!pjqOs;jPHh77P4Prp-rApEk9QGhGDJ%Y/K0&<$9efds>N9>mEH=_s6(%GSmO=
%Uqab:mA/SE/btJdSDMm+'C7K,dMn+21hN<+)cA%>I;UD(7b!ZmpRTZ8@9`<qc@k%fk!ohHDmYUHD\.4N2\+;GbNOpt`WQLB2d2ZZ
%)Lo`Sa;I><fU:/,oasjf/#,$+.LaZ5T/XJ8OKI7#]G\@IWC(=ies**h3cE$8K,#@\TE&FK+M!-M)mDOQo9R^lfKTE@K?p$kIjoj.
%o-VP>Emu\52e!L08somW2rSb@!c/1VTta^O1'kRekeu-_/"nmY28/3*Tf5^TcDQrSRk7Gs>=*6b;qqjPDmZ`hHr,.<F_PArR45fU
%,9mYj;gQ?o@%;[BHG]ko5^c;i9f&d2YYocLRO<sXT_(\]na8!*GDDgrUGq.Ypd>'GHgfZ.a`1jJI[:rP"2;imG"dSK*Ke68lIKHX
%DbHg]d]@!2Y0fKkR`#OD/fIHAoBU=biuX>N<HodXh*b6t9f!D33hMQ)E'Nc>:1NoCTj]j&K@66c'(D&FV`1`OW&3caV`.=++%JqA
%^4^KOV"CMjQB^HWV"=j&:3-,)l-8!;+7i%fD8g,W)jK4?2aF*WVs>*p*s>;td[P[cE2kpp[r!aFVt:aHPeF5ahJu;G)jK4'8'6)o
%.D=\,$]RiToL:fk-+u*,Dh_0<8Ec&i-+.51o]CoQIQ4+p-5+TmUeuHe)^W2bN7&Y`9BP0Pk\UWn\2Z6i_c%0e@)hD)'UYbV14#^h
%"ALfj9Hn/CFjB3qU`?02F@L29pp._2)80bZ'*qQ,Da4`2C`m&uV:_(O2Aj,1hTnop0mYYCN/$5KdMr1\:l[J,Dto\&coS#4cu<Ye
%rCH/^,Y(fs)Psq&RW5.q-MAml25TqW0atk&:?bKG:tWRKdMl!%&AXga)dkm_`1><q?(f=`;bCsb(PG+9V71<a$_>aN]!K<a:2aN9
%NesTle!hc!MeRgmRohiC_9V;)(']OTV`0-QqU'@ZDk_S0*GCu"BSfhn3i=ohF,l@<Pgc*j.+[.8e6@M34B4tdl0`WfcUbak]L&T^
%7d>tPY:+!@;K%<OBLL*I]brmYZJ8Qq\KV55F&#lO\M!a28\MYW\u%l*NL\'i@SZ45Ch#fYNR\uST7O4AlciCKC]+I>2mGNHI4&Da
%SoU4&HD?&$hMfsR;jM^`NRXHNhM"P&9'X+Wi]i0<]QY)1(."oqR#u\N/J16V-hV).*bS:ood9"-;&a[(op36X5E)DpFCM6)dR_(1
%Ru1\*N78eI(CP^3WOIP[>oZGLkopr/h+UDRBi(I+ViuE_TjR^BAbFo/eIUQ<5GL9L3l>?[@Qk7:H]SUAeDDr/.Q7nH$642le7pt+
%#D'_uK-\rH:!2E+<ecZjg01e=5`LL5C/Q#[]#9p6.0Q`c\dR7)O@iOY_\.[e&ihL//'**UNrULnmiEX3T%8a1DO"TkA7`);*\1]7
%?moR6YTHhR#V@C2'R.X$Mol:)JjdL>85UcUR:Mea(MS?^JiHWL!h`#O!g!RsBum;e&TaH,e?rc\ND-cWC;AP*["a@X8U(O#dZ/&,
%%B0k/>9$U?W/*Ks'tQ?2VuY8=Tjg&=UBXOleH@S/^ghp$&G^6I"+l=k2!!.Q8/!&o^n:o9O6Y__"%a-J)KdQqfYZ&sW-TJBfobVe
%W_b[hpg+,g8DjfN6]77FTX?h#323c"5WS.$4)-$Ai<Fu=^2!sG`sh7fUIA,pOBt&"V%G.e1l+tRPre_YBi$4VgH8&"PEbrs*J,[h
%=@s#8;pgb5-W<Hb(Mu&ebGde%qpJAt2-Qe<#;)YFdN1k\:^2dYJC)1J)O/[1G.?`1nDZ(se>pf%>S4@^MVr'ULC@srk*0sM$ehsd
%ZR(qhP5Bm[%=fD>K?tMs)JF[r0Dupm<X,filg%^ta0hqG'bH+^IZH=s`ORq;*n^<p!s*qCq9ViF2ZXB(q&9GOT[i!Ek.lim0P2P`
%aYU'?MMG![;,<.f^duKfqZ9lR'?;eYomiiccsh2hG5TADK4^gi.Enp6Ddhcn.O53_/hRdh/F@=[Oa%S>e/T0(pZ0B5,2o1+eHfkt
%]K32B:97Po`3Q<A/TAPR5lQ1m!eqb\njpA^[09Y>:bCdkQ:*/S^gfR7B2p?08dMQnA'#q-`Q]!u^qr+Cm^uNg;L(T:TGNQ=\s4S`
%Ua(`o<*%QU3+W:.+m:*#mu`H:0U%NmjbIHIiWmMikB`//0"u"`bT<jn,ib.+V0KA4B)4MOCIK4HaRkK.5Ob$c>Y]=>di^&a(6G*Q
%.3M3R"dI#\.Gk>R#b.[_$Bu<K(C8H@KE>%o%&@o/<D)HL`@f[N,TR6U+B[\8cA.o]c4)Bc,mG_(XJZs[0B4ER?8a3D=Q?FPArMpW
%\c#W*LGKJea(&0A4S".d,;$Nk[!a&9&c"(^`23&\;qE$d&55ij8qp3IO*dkFdZNdj*m"X3c37B2P!^H,+km$Z&S,UdQEe5;;"LGB
%!(,WbOCjOhV@p1g<7im7LR*XQcPI6"Z]XlSm&@'>_e?KXQ/6bOgYp^#ooq.OKD<-O,&^KtW.K[<&:B\<mBiEV3763Aj*Lkt`:O7]
%:XTR7g>T3U!9p==TIRquAm,Ip'a!DL;*@RF)jrE]Boab.*\6oHNB4;3,t/ZU#!#ppC,B.m7ib9f#3<f*[#KE$%5N29P`^FM:A?9O
%f4nS0-n'6$P/<2Qo>Z+&OX`.(c-@IS%&+mG\][Nk`A,RUU98-!rFD8'<b4Cqj+68ETe7dU9frWJ&Y\,s\ugQ:Y-SQB(85ujga0oS
%=s=_Mp+?sld,KuJ]JRcZKP#ub)idir\)8;>lrk7$`1QQ>A*!tcWZrfI+1TC`8]q7sVBFVs2a/JJD:kF2C=B`<@?^Fb)a_:TQ!QsR
%#*,G$;iooM3P#O.-Dqc4W,G!K282+3>juT8I;40m6p.DEMYI>6AfQ=R9#l8Y[ikNZdQ_'3rc9#T#gq.?#Ph?9K:[;j,T3kCK.GCQ
%ZUqeF_O8[A6?=n7b"W,(Oq.oKTlpXcQq'1N2H!>9NFpRa(563!J0B]s\3rnt6jphRQpLg!=)@-f&ibu6LHcWuP#F+"OSY%WTc9H"
%8df^!EACm##TC^WE4a$1U+d^'UjB_e#O)r,!&S>)gR_)5(g8=07;3B<'"g[rk?o6i1qs`@$/06^QU]';%+5<^n(3ACPTo7L"b-Ym
%``YcJ81/NSbf)qB*R@HM'B"#qW6h9e5k(57bR,;R8uXk6NJ>Z[kf?%5'ifGJD*cTDnoH<Z^V7n>&ssNg)F[[eMa,L4N)XpJ*&IDY
%>/.$gg!g>IcAt776C+"lgeij.Nsf&>n-([9Tf4R7a.fd@C^-IN>sV/re8id[`<:IjOO7:MQ,u&(`QiPh.QS1C@Y1Y[HVuEAa$Q@@
%*<=]HaZLW[)tKW5-^@mlH1E,f9[J_MO_UnqNU9$[da]Q\,h@`tFN&&[DJgY.a9*6j[S_Y]VLh/n!8e^G%ZdnXcUt2S,fW@Z^_]dP
%f<f7;_qZ!S;02p&,BCg/5(&Z$8$nXQ,06+HQ7<G+g^2MaK2V$!qG98$:rQ$B;o5)7Mj"oGAD%$>JXcS9FFe%!l_#4b12,3-.&]-r
%$hMoq63.',k"7jo'q[Q)jhn?TanC;F3I&ioKrALZaldr#kih'CH%uXiJU,.FWRb39g;X=<K4bU:If&cK4&8U!g+68+K9pEl91Q3U
%[`BX\VJpq?6DY&(U/R*e6`;U1n5>DZ$t1L+.bTLd3J^P*i>nfiL[Mlfd7pKX_$(DH1UK5/b^sSG/us\t1m2+t>#2#GW87]HnQ'+,
%_,)Jdi7<7(pb$t#nTp7sr>;[`c_.S1N[!<RAMX<q,0lC*7p8#^R4GS8U'ts:9q"-4qfbb4Mb9l["ci\LnN!SB@%n'SEd^3GK/#3N
%/#Z=cUS'Z7p^KD7,&;/cR!SuOjoK!eYV&$^_(V9NCD#rg(WCu*$lS>AZj'Of@(OYU3%?Z#a[-VVTWsi*gVdTD9/d3u/"VD3_3iPB
%]^i/K+=,<;JF3%S%V^YNKeSBs=%B7XLG?uR(qD"0+<j*W`hG[;M.DT*+0=eI#GSIR0A7?8`5f=uCm8P8qULGO/4tZa5?a\KBLI_H
%KSR5WSep+8-mU!3"ZW-A$T@.-"d6;#+.+2RmV)qY"fkJEGAZRu(efMF6<GcCFa&E@huKMk)+Una+ntDO/Jsp:RK@9@0Sh-%LSmJa
%SsV`6Ent.?ps,B7mLkV#U6RVk&mirdPZ((3$SB/#d(i>E^=\Y2P#CO`P$r*gI2hk^WGu?[B*c@>EIIKEK;fB,"G8"4TW5BBq%8K\
%D5n;]'j_PU@C1(U5A"jF_o`#d"Q32->u2RujM%$mM0`!;($Gp,.$6hB>i5+JZ0RM4$qdN'l01<lL(:^6:^@k>!=L_AHS-5]I_c^I
%coG,-2fs-^nsM(#Btt*sM1j52N<h['MHErQf+t3t.&MT^J3k1<b4hs#BlCAfU*s*L*Wi+%$<_p?m-&et"Y`IKB7?2[-g2#@4"8M\
%.m\J%^`[e0m<'7GYcgp]JC+F]p`TI!TZXK/#j23.F:HA#PQns9$O"KWCsDmp&@@=,dP<*MOCkS<Y_Ia50Sm2*m[Q9A+f_h?Dc(!m
%M_OsO?t.*.?>At>")lj$GA3'5BVJI4XUghG,Su5(];0!L2f12SSb=8CEWQ0#"sSD-@@],1gC7f+;Z"P'8FJ&+/hIQ!Xkk4"e!?_#
%.]mOZSJYE4U(03c8GT-]"s-?eE;-.p@.I2a6`C+NH*GGihOFcf%(+g,T\95_nYN9+Zg&UC:eB?4+[V/dY!C8;C11oMT8u(@g0Z[8
%?Pmk/dhcC"`Tk:l&).u"![=Nb]^<3m=#\I.%YMolLZWe8Xg'B,e)0iB=AV.r(.Q/OOsu&43-QSIZ)0`+oC@G+!+2TuFc')]9@G7k
%mDS/*NN>&NM\I.*b\IWHaAbihs'hg@<'uf4[TS#/TLI6WdZ'+/Y7mVh#:)=6m\+n,dAbm:oa7lAagAoN8>45jS=k,Z3c[mT7B:eB
%e3-6jL?+jK%AlmA[Q(oGQJ1+#9qp1N$,S,:U_#88a?=;Q4MuCUUBOn@1qo*<8TZ.42*%uh$.96X^6L6=pa*k%0p#gl7jOQ:-q6jj
%?c?'JgRD\h-3ZhZX%a[uED386)np*GDa[8>#rd)Gd"+\pEX5SU+9_Bk/WiNB8>I`;f[H40>$&'#;Qs8"[NbGK8g.ZLNV8GELRCmQ
%><Z;=!E_qd9C&&[IaOJ1hBeOpdYp^5P?`s8(eO+YDF].._<n$uTP3<<#ip^hn+\_kSi4<CQYeJa"@s`EqK*!j1B/m2ED!#?1l1$O
%;I;r6o]Y*W$+39fb/-7a@Z+O()GWVt"BV>)aVBqAKq]Qs'9r9O^gUr^!A1D=:1Rt$P=%ls.;**36`l.lM_DLj=Y,IRBs;\51.csj
%)W@RXM,oHu+V'%pI&pF\1[n@R"^$nM'Er_rWVAA*WEY;4!cJBPb@hbG*(o@ub.oj1KnH`,C2@<0!?_a_eAkKBV7L\S,irGMqISqa
%";jpt\u&)o!Du-nIESTA8Nfm>d0W/tpZ%@B$49l:&HJAk<l0ch</K^uRF;9^QoX>j7/abh$Wj0kD/ZC@33/&dT[7/ET\g3q(8?/;
%6Umme/pGgPiAgBbOKfmL6J0#J"9`MEC#C913QIqcU=jMe3L6WA8(<J$eU_GP8JimH=p!>1jFC_)/_DBE,oN($8ihRcgIj^L*iQ-Q
%_^jt+9h6L;;j#HK_/hSLN#4M^$1(+UPL4N;?<U4b1^InONZRgl3nPII0I;V''A'i]mPQMP9;D_jX"q'#j$>Z]BG(c,Zk0M(&tb.o
%4XT(D_`$`bo[PW$10m;1/2C.f-lk>H)^g["e5l3BW,W2+'4>i5C5A!pbqRhI[KYT!:\$n03J#h.0L#ll0_#O\-N\S'(oa-,PLY_<
%NJmlUX\T2O66SW:Pu9sIVp[9W[\5CQ&YVDpWZ[2<'EQK7N9=)"a@PUi_Ng)p"_]&^"4oSm'<c]^N0AAK'7QR)3.DQd7^uQdBI_.D
%M1EsuOiXrp@^jE47og3(HkbQl;$1H"nk-@lJ]I8@pSMt_,:(+tjCK@AC^)g%I'>_0W"rEQ[J9?h"\'AN<SOK6>uD%h'loF.6^08[
%M^[X[KJr=oY&oR`Bq,sQ)FjuQK?3rB@\m1Jj&DX=3-Mq>>7g"7O0SAT+21ZtQ-:[$L1?Wl"7K7(0ru&I*<:9aU-oS'8(:KY(dp*)
%0l`ThgFJrEb^c-]:"6EZ8_d:4h]*d*'+mM8I4OES0rJTTF@itu)"L+e@RT@(@Ve"rE$Z,eV4;97S4?=CD?lmXgc%Jn&K+9=a9k:O
%c"csHncI.o\AZ::8H!)Hj,3JZZY"sa%&=0W6E?'cG^H?.:6HK]6(X@QSL$t85k)QUP"J`cm)3T2[]#LP$T-XQ^!4$_C?c0?+a5ci
%TgmVX1T<bG@j8HD#?BKaSQ$Va4Y%K19Y2\X1==1l3G?8m30<hpROK*W^I$pD:8P@u9eBq$Pg/E@8t]dROgUVa4tn[dX:1W*>ph<[
%V5/of2sZ''Eepe,6=^AG"uop_2&iEl0^p;)42?&OhIRfa\r*pXR!Jd154VTZ73,=H86-a!gP&0&>0+@um0:17TK(%9)c/Anr%>4d
%Vscr+-"*j"Q=Cc:YMo)9XbDYVNAceU74Bn4)^ntl$]\26N"Q,WrC8[:=>'$0GE#oe=Z@rMUIIOd"E,(3:OoJ*joTUt,gk1Sg,ie(
%%.^*TA*Cb*61[p3C'eq"7+)`P+rj"JjK\Jh&@&m.Mhn\@-]SHtd/$53o:Y/u0eNUM;9-HR'g:)?krJ#OW$I-6bDW''8@&6-E&0a@
%,^!L`G6JWhbYqClj66b8'6]Ju(VBcKB@0'9n/`"]R,cC\5uLP_m3b"p-K119$QN<)iWM.eCE-M;n<c]Pp]rHV&)hSgSEg3Ok;c(f
%#9?k'&JBq>KB*[N@2a0Lj>TDKOi:,Eb]#Ud1Rf!O_oJV`!n&1.TLfiujL!l0,R4>!bi5o.09Ks(fX!^7:ofF/80@%ZG9Cs$&HnPQ
%*+$Gl?35$G%OU&_8cApJ$Zbi@U+Xg:Z@r39>*?nlK%1p.crNt;.YX@t7"^o_"r%D62[M1*3>,PU*WS[f4D8<C+g=D@rCZ^DQG+"R
%3'*)1&!UleJd]T,(r`OEM$]=j#)?!<NIXB86[\([-!4<;Y*1,h-SW.40eeiB>JWJELVu`#G?45H$!=R4=963I0InM./B-bnWZ@'7
%DKMf$pRt:l;$D45W89i5$$qE>T+4S[;R&;SnqGs&O?ad+rJNO#VHhJ]nS)3".%c$%O8'+p,k4l;QJ`*S(ti;b6m'k<e&P/pT;+Am
%Q6]BG:_@M2hmJf3crjjZ":-mC>02'j)*dAG2Ed/g&Ahs,[0/-Z\g\+pOO@.k*<=@j<-euTAbPm!Q@:@C@OkT^!\.[M@nS0TMXA50
%$r8lU4`uiq&^NIA2_ZPg`q\J8UO+'he#^(Y82qfj`i:g__SBFu8THUXrWErlA:fp+ccRIo,bC`ajKj(_Q7@C9^c^+lH]`H;j2g#o
%>S#=[7E/dBCR7W[3$+OaQP/l7gkM5pA0fV.%nlY_/lKf&h"mEGL1YHM7])Yfae7XTNm'"$SBN/29GK(J?VGR_0bO\D._.rVTW/p,
%Gf.sXTuZ&m*3tJ)RO>X1DBZ>HC3K/4g-$DrJ/Es*JTmrM`u_*lKds8O.4U;*Fn:^L2tHWP64hnf2MRqn/BMQKp4NF-mCC<cX&%#;
%-ZZZr;AF.p"cNnnB8HDkf[uRS"\_O-COC0p<CEi<F'4[al&hf)JG__%Q+P!`MRen\_U7H_GOgpo'GF>F144-C,&;,(K-MC9-])%]
%R)uqV!DJt$3KcXNRC3.RoOUP4J>u-uADJ5UZ;HjU8Z7GkIFfOc0\HN3#pMFK$Af7TiASKe[lPH>#44qp5]_NE9Ui+*%P;3]nO*ZK
%+pp;-P!CJ>gUI`56,O1'e7^uH*+t7Ce1ab`*t>'1PiA@qU/@"._$X>/O"Y>ZQcCN88C@NhE[25p9:$k?$92i=:hU#jO]f7h@7qfK
%*)W!:3m8:,4Y@qo$JI7?Ch/0TPdWpP.tc>:]qJDg2'J0;&no\9,G2\aSO<ge7+lF-A`Ga^IY$DWY]43^j<,=$U$%;%V@X!S+(_MR
%*?b0QV#P7ii#(bMH%M/&HYGcXTJ&X>^f.'5_26/A(6e<u,?\TneeWfP1I;,Vc=-'$/*3Nk-&IYU7</hlGA/bl2QafW1qHPCZ!5<i
%-7*TS8m3AUcBr"(eR958Qr)@'=p%5f9:>giWuU?!@O5IdE`uQqjSGeAc,B)pY8PnG1,+MIbC\&r30"A@OKs:LJA!f0YY7=08.ai-
%"U8MFm6ans,dNBWYN38*NY[(WpnM<TA#!_7[eQK1GoWkd#5XqoCYE2JU4+bQ0e!qNfed"nr7jl[Z(hDPB4]1*>Zl%2Tg]=gYf$>-
%V5!N5_Bjoi%9f89[18i5gOo\N"%1q7j9a"s"N:@Q@3f0fhNTsR:]\H!d[sD-Y;t^+8Bu-LqlrpNKW&pR@KJ<d@%.jo+6cNWO/sb?
%?nE6rZXIcD^E`LRM?"Jo@A&YsAOjP-/2P6!#oFO?EYYulC1uZ:ioo"Di9`K%n=BDa8Y-Ep:lhWsL;`.Addr.#*6nZ7lG41Rm2!+T
%9Z%%1'Jju20l"?;2Q;O(3s4]JO6%JtC;3:c0dI>XdFmK]")9"i5>GN.<\$KR`$@IcPopIX*MXCGBVSHebRQWB@E1q7AYcJ"e[U]f
%5^'bXmo2nO;+\\T!>#'tdcjG=(6T?NX$QYHRZHMnTrKM4?``%7<?W'I#suFhaG#\70]t&(*G,0mbp09N=r@KI7,&ZNeU\^K_^(.r
%<Tm;Z`/2C)=I)Be'^^TMlV`r?@)+aF61HL'7-_h`5f[T0aA=i??2S`agiDI-2tD)o2iWl`.>R:/;2\NP;X&=)ru*&\AI/tQ[Be6/
%N[tHP#/CCK7FA$2@17U''K,BW"QWOG+?-+LYt,RW9#;8eAGO(f8TL%HHHV99UP2)tE[kgXGR&cQ7Yj&\^eJN_9%>qH+WlZ<]XL<6
%TTK=jISh2VA7!KG*CT%Y`K[MSL$5M//M3^<6OHplWoA9,HG@nmW,0aG$-)NQa)WZp:IQ]_"#"E*[Z?^\@l2&$A4<<kQ^mX*X&?S8
%!ON26-*b-S'oOas-&8J%!QD&^M3Mst@D]p]S8+J35han)A3eT]Y`udn1*Dd?Ed-r:E[Jre8e<m[@JNDCClGC0R)jHNL%s.gloIpU
%(?GiFSQ81?#liV56K7P[(oW9pHKH>\:`(E<,-5=tOk8*kH;nq1_C]r460<Ak*ETV0P)/bFJSJL[d`>st1Nl9_8!Yeip1@S`,&\g`
%C.2Q9\OQ$$&e:+&Q<LG%<`TiA$4O_.5U$4^A3-,FeoY[t_P/:oe<)"d/7hc=C>fX&,]:i%.u!'pFEc:DQ_m=NGpegne<!2QO-FEF
%K(M3an;n%$BG)ZI5jA&O,S?QHm"NK1,bss7,fs0.@NeWbLl3Y'F#f@i)+d-PW,p)`+<ne56d[5a=SX$X!<GdjEp';j@ad<&bn]3P
%&-;na0h"XfR?$aWpbHEg&B6PS^J#+F&5?RjG$:Vo;j!e)1k<#5Jj^2Ei/Rsq;K?.XHj;/OageZB)e^Xj?lrfVUh*Cu'.8AART;DY
%07_J#r@B/8AEf!rJaJ84,K>ZV&2NA+(o6JM%G,]R#rY_61)(nXk<2))9A3W4kZrbNTk0r-Keb"YcTqt+2K!Q/7F?'23OEp^U_'2H
%"ZFFj!$@XdE_4=TKpfmcf`L-Mdrm'D0%-mKl;],:`aF"269.9o9p+Ts.c)JR$tHUYaWL_RBnB1O$@+[OW2MK($+7)QMFFnXQiY^^
%6R1Tk?`d9+(*,ujmH2G,8:lKnT^&IkO?Qtj3DJ4E^ugao!fej1HGE*[NGXcgRGMf)`peYE6&eGO(b<S8'UqgUHt<L5(h;jeAqV.=
%ONj!k<@kZ]4#U5;^o3$'(o4ri)o])n4e4>?$pi_n9A-P(ODG1C>NjCYEH/DD3[p7o:@R$=/T,Z*kk0f-JX`iUacImBNWl$jAbQ2g
%=@+(NB\`7'`?,KK)RS!E`stUO2[U=.7Bf(#qP&$!l(XDr,`N3:*"ENIB2lZK.8!*g`b(`[Y05i+FbHJP$.AkjOrKe]Puu&I$!p$\
%'Q;oU;BK','A[CJ8lX_dGEH=.,$";rnGllG$5%l])R\#<:t\jibW1'mN5eR:ao:P78sEr._B:R!\//`MK'WVk>LM*l0`YF@YEbMr
%IH@n@<QW$/=]9Q[$PMI<^2!t:%[\,'S=^:j46/"B<.BZ,-p6-I4COb\0uaRo^h1S5@#J(k\hHr?OOb@GGoi4,?rTRj2R-dC1"o8&
%&@qK#!.`X8N<[N)7l,c<Zqm5HRke7WFt>?ada/IUbn9Q:$!s!SPT\r7DM2q%4-TE"RW2*V[M!,e'?1*&=<h;i$TSUU6^oBH-4)gP
%c0$D)AMGs-XQ,a_L!2nnM1)'m6"5fj&hHdC91DXVnE5oBdS#B%Uk$"7VcqbT@2Ks>Yf)KOBF$0,J$^hoKVKC73s-0a&fg7\-u![q
%LFSNd%+fUq8SKuokX<5BiQ*=gBq2\/M+YbZqku#,8A-]]@(%u2O:BI-#1nLSX_L_6A-\2JX7</5>YX2j7YtqG'fBSm^->=3*XL+o
%?Je9\!J+:cH(NfUIMsa=cf>9>.%iXMV!+303XG]LaPb1l7(EO?\nDgfVru#)EjnGM2Nr=ujbX'gM:"YUG0N3_$Y;tn`R_S9fPGPC
%YVr^Y:tp]VM$mMJN"uYpG[\p5>lB5LM"HI6kCQs74=)n'CjO;n/L"(S-N&tVc&")?A<b<8+c1%L8ZB(N"[!"0]Q[d*m_JH#nrJ?S
%pTb6<klro3_3G(X5l)7XPFu"h?6S@9gmUkXAe;2,3\nbe7/K/:q3$I*!9HArVcnbOV^b%jW.hc5Z0jkb#0(/WC^MPNBC82)MY//6
%:S.[pm<C9&<j7UHd_5UR+21NpW%nlj+]F%44r&I)bI7F,:C:NM,WF*3"Zkia&Z>($rH(_eJAjbHDZ_YINKKACTh2Z-9!E%mMVnhu
%F1\FUP3Bu&NNb@>DZW[%fZ,GY2_6D]1e=cNLKIG/;1oo9'LaIFUk8?,XrZipoIqe8E]f583lAntY)0(GAtg9GXL!EcU*r8^RO*nd
%P^DXHBp-ssc%F@m1.,(p#.G(^'<bl8;+Q#h<;!:V?3rr[/MH$.aU2X_]P*2)@H-"I#$%+GF'0n*MlK1dROCc(?>`HQ$7$'*[iY8h
%ocV("WXp>+X!`R1'b\(rUr:V6JRaM\e1*ZR?*cnc3+nM('.1PWPuEX+/ngqqaY4)HK0!3ke4?RUE$qeV%74)B#FW5&K]S*TUNH)r
%,<Heo6Al!9.9Gr,Q3=b>as9s'AK<%]UcP3lMpK91mCdQ)_6p.2!b*+D+-3g#_D<gF6jg'eW9I^#PpqgY&ns/G,]bFL:XKjpAu$D:
%oeC0rL+&<&C,Wn3"?ur7$S`5-Zj-de8ML*KgN4_4,s,O2jC'leZH?@&ko@Q]_L0j5KVI'2J#%W,=Wn[%+B9_H!+TFR#(\P'jl_Yb
%qFItK].^/]053T_2`fPC5"Ni>BPk#g"(hrN+1Rt;5_G:8*GI&.QDLWj6HCAg2]RRRp_nmrp3DfA6i%eR"KX=iq,q-SP6D"*$lG8K
%.tZ7&o;0K)4iUZ`3d_111hnS^@S&R#l*83'Pej/@O9,Ps^@C/aqj0.oLhZ+iLTs9C"oO*4HT[Bn8/SPC(p)Dq`D=R4futE`4rumF
%/ln2R8IVTR1)uM)Ja'4Mm"eq;fH7(n9^+qQ^f]aR;l=)$E/1@.bD[=r3be6&PFS7f,t0#U;PX\hDgATR2INm;&mPDn0J*2/@Vh`l
%4LD#,WY4/3A5AX[i>_DqH&[FF0a0V^)#-8Fbp6-3;J7R`ouu)X'e/S0\M2AniT#r@T8Zc>Q6%@2pm.3s[G:pEgs@6*h+=qPoi-mN
%,jG)_].o#G\R2EmOJ.LK*fI*4,VA&<ZqfmV30iDq+SV@!GIC`1'\hUR<q97t]V('bR;LAM'kuU?-Js_"lTnQL;Os"$be^?sRYc$e
%V<k^bOUs4_,,tK:;F#[O.AUDE2i6[`F?ih"",f2T@aSYCQ`;.,JnJP^eGG2.lRX"nA7KW+9-O0;jqfK[&8l.;N@1D:&gTMN",B"L
%.04:J.33])8V5!)\:pa]U:E]U)^Bg1=5XbmYkQ#X(0T7?-r4KL7T,Y17t@rn'e+$n5W;nnoErR&+tD!/O_2TIIW"=f#+--;iF%9O
%H6g;DG8FG2.s53pCntMVen&7hCgi_?;V=G$[23LO_C3O=cgbIPF9SQPmg@,Z9>[3haG5C^N1#M^deEl8"W6;p)-bUVe(uC<?IBgH
%jc2e,PW3WQkn*bb"Ldi>\]B>,,JiM<%PUN8ApN*-(_>(O.GLq_=2[0hhT!`r:*(\`WsUj76SfoK"+!O$'UCL`a.o1l;)@Rr3+b^W
%6?]YHlD[=a!p%.eP<i:fJuI6G0fZDq=`bkSKH[al7HE1Pr[Bsp3uG&d6o,AnARadX\8!]f@K"^k7UO[_M*[s^l,%+Q6P=YRJLs,.
%^_;p)T5l.J_$1J]UKS_,9)r-L-j?89kHrbn0K`BVkHP0qEmZ(H9KUe(5,#V)-oHU4iK8ft<`GkhB8"[\P9YoTO<87U4bJtr6Hn5M
%SYQm10a_q'f>5ekBSBV=en2=W+W+X@EE">.SKMY\&j+9?8<)^S=TrSn2aipj'RT$Z'W%6,!@SP!5YbdC:!Y:cXr]JJOl..SXK]g/
%"Tb;N#+^<2QHY__Oh>:89qZVo9<3IU\H[`=:p<5S146k?Ql3D<$F4^$\Yioj#YklPD89!1OJTl_L\W&t=T<'U$VQb`.3oXHRO3uZ
%JIr?S@=!JZ9.(6ZU]D@J[df]I3SQt7CEo7^R[%#ujT+24>`B=+,aY0XJ1[T".BJM_W+XITH&tXo+;gmI%0-u1i@ls?%hejT9h[5c
%%'B7P`$>]T%`tdXd"jY5#X9/cn4IUa=Z+q8UQhG"Stl,G.>-k&mZnt%<1eON8^kf!,&Y]IO&=G=!%l&l$V2hW7!qo&,E\Vf=]TQl
%QRH/R,]^l*!3ZqQlh!9M'Bj\;-rn,pm?_KW<5U:F9%KeY'JJ3RT_p;pQQ1_"goqdHX%\nUID`!bQrGG@;GuEQDN8:I&rR?EXcNp@
%rGN&TGRXUsn&dbd6-eJc@h#qa(:VEj3D#a;8->o/HOG^AaBPf[l=:bX'0nGh/(cCUU9MCihC$Y1es_<l9]=$dZ!!;-F):>#I$qA2
%EC8SF'jlf<"oTKUnPib,ca!;C+21Np[4oo_JqGHgZ:4kr>rEA:@hhMB!\7<5k"]A"B'9LJEt\B$Z66,f^D7P>UZa@'-L(Kg<1m47
%BOJ)\1]m1cb\YrX&>oecTR)^a_4)q(`'\.3</W,$QpD+B*]Xm:ZG7HiCS7oR1QL`G7RbR[n(N>WT>?[=jIF;pZ;#D/[Mp5qUM1l7
%pP9"I`lgOhPf[nV)C!@6!;.WGl@+l%0d_JH<f08,@\4q_Q]1l:1s&KDG?Spk]a5kuJOp)I)7`'/$>US2Y!bR;na*pTO5*q3<;IH;
%AI3uDC&!W8/IY0_r^T&3eiIsO:mil20LiXEg/^apUd,MUN>W`O._6`N@]UjLOF*;uL=&uon!]/)c]@Y<UcJ\1>I]TlYSmgtNK_kU
%0b$VIl-Z==j<^3MI!t5n+;0<')99TGAse$%$`F:s$A0N@bl7j-&%<QT#FA*sC^@__;6kfNAjk-"#a[4IOu0YiYCs#f-C`8L3^>JL
%77I!'ChXUA6`e)3<!C\X-8+CWaho7fa(R+3f2/;1Na-n&X<m(W$rW%A&S.GkmL8/1en:78>\jJkfJ!I4fuqSh_nq8#-RN,Uc<1b8
%2b8.88peT`,G5V;i?2Dm3@SiAE!L5XocqTWROPnd?:W@6,a_T6b/hPVQLL5E3ZOl-*M1PM/(U4KMF#*/U1NG<,ei1G4E]1>k1k71
%kbE^*(.Kij;M6;soGL/M@V2QC8[r3mduui2C%e?f*-RInKHH3c\dimoD2W5*#)ABbD'DFu@%aSq5rbHYhZI/)P\*D6&\'\Il?B*C
%_A"X-^Pj!VIG_*+?6i2t>/sa.64m'a-M(Zh9[Wu-X2A-a.Pe6GK?@icq<QlcTbGd,i'"1UR;"!T^23`mCGV]&cmrN4aP_:e,%0a\
%7^c,CdJ<3-LZAZEI#'t3-B'@EfnA$\.N0/+G*6<jQuX=D_U'GQ1ptoI8iN&2)9kQ7-Xg.dI5!(q.AHFUdPm;4MlLMj3n^eF9a+Cj
%:WWU_6lW<4I+2NDi+(/GG>XdJKhWs%obir1U=tkhGc7s6jbT&."$R7i)I/>TG*pQ0;`Db>^=QEfmOWU4C+5oHJ<<Co7VGJ`VkClc
%e)i0DcO\:]'Onm*AWB_3Q1^T)gE=*Y2L.\k1KZ1:i"cNV#M$l-':l<f8q$S?Lqn;8ENbr"ksQ!!XoaS/WFdQK%O:E[WU:'p!!X*$
%%fQdjX.g.0'kFY@3X,jHn/rC'H)cN1"\O])IB%%=,[Q/,U#VOFVs4sI=V;p.k%82XB=,jGEfn/p-UTPk[+lj6K6!:cS,a?WFXmV6
%-8rqDPGAsGL@RD?9^/tib+])Vm7(k^L&??1i2a)*"/T?m>c/n)G\BBKTjUA)O!U9%<!ZoJM./c5WT&8Q*M-DY2Hb`=K[a3sHqf]"
%%8.r"VM&'K\/n*+"F^HAMKCaSFAbJ'3I'a'_K;]jYGXk?%"`LFH0-i"Xm/4*<cgc<O=idt/R78UAqV(Nm"4(.)f7,>$7HOdPgZid
%OqLk/&$SZWN[R<ScKq@L:[L&_aT3tIE=:u0?15-?L^P+OE]#g7-=i7_6Sc<KE6=8q':Kah8LKbJ1gMJC.qC3Z;i<upL<8IRO;:_*
%FpeqZ.0mVH60.?k<\Pq1W%:U8lssZ%MD\,jEm7](9NQm\E(Vag0p(FZMf^ZdnbTE%dnkWqjtNAoJ<2Z.p]aV-!>_(2#_@/E7mN)d
%$K3&-Kh&4rUcVQ>Zs(25,n$@3(O@EE$bj5MPmjh#5utM#`X0_V,S<P3iFB@eH(i]Q(^'hE#T$!7!a97G(ag^$bIR8M@T/#?R21Kt
%4f8^^'rhQQ'1FpA>1"bN'N%StXeq?pOOo;O2N1IbOV+r8M5`F:q*)WU`2b+\lT:LZr-#"7Fi)*i-HRf[+ejX?4EsoUZ[C(5,P1q3
%,R9Ds!Xs/toV*n9o+"UpKO4t;$d?%h$`0N0aM.1<BsAijYC1&;b*;-*W*No$.0:10"u0W>U#L-Tb\^bq^]NVb>YKTZcPDqr!'.VB
%:?_k`OUb(K?kP=nk#S`F,^iRg!4*,8@d;M"0Ei)187gfPQ?$):I0r!n3?p5']8/$VjD"'b-+d`V1Q;R&$rBLqTc8F`RjK"b/4HFI
%LBSl(iPi-n&MVdA-ZE_dQ=@@uaohq_M`t>>U$7Dk<=`O(*qc8bah/g\g!]75-T^W_QUO1b0XORq$es2HU?i'M&NUDHhEm8<(9<d2
%C,/f*E?(r6n@fT9VBZE`1(j,P=,T1U-,6$=!ft/@mp2AP[1RCAQ"KEhor>Y`[)n:_4HY+.BIHkj)7SWSLi+uo8-tUh5@Yk7,a-mY
%fXf!hK#(.Xdn0Y\Bf!W%qZB3<<]T/<<e5J#>XY,1,^0T(giOjOb\M5I*.A&D1c9OT<Bkl7Ib<Aec,:n1=9['7bEB=;6U4KrYb6L`
%<(l69MLgmXY#ih"`L;m./M]k"F=&W0Kh8b)+_1_&.IT?SW)+-*j=$K:/]Q9b5fc<QC(6?q9[X)PW5,r5o`Mi[iSMq_D/l3\P%?[)
%R&#Os"*G35!2gP7"UQtRb+T\Zn#%qWQW:Or`Q*YU"aMXJ2`uOcYaHYJ3oSFe@ii6\C(Ntq[1\iERCh]+1-Zbg8J[ec83WH,.#CYb
%$R8nL,QBODH'*W8_CI4ZJ5@h3IY$,M#$)C3pRf,Ee<(TR-"5l/W^oFOa%0@O3at2-;K>,BK8t=.&34-86-#6[^5PR'K3G'<.4W'4
%A`u=XhRLV5@2QV`">XerU-J$F`_0cX-"ttJX4&7*cdLJhW"$Og-XoOH]OMi"Q7prRc"^k!0_iT=bk+].daC]V//5<Dq)0\]&19MZ
%NeKKGk\dYORk6=>fn.?JGbW($KLfHd1<iM<N>g)P@"bBW,I@`k&/`4%J8B3[_Tps*8pMWU(c2WBKI0kCa?=PqA;<3;`n[Wb^d;SO
%b<`H8ldISdN1"T5W,P9\e&%s'FW6RRN-.fgT?3f';L7//ZkagSOn9[43*hbI4Xa4=@"LS5fO?KD7$9,N4clJ,Zp7FJ^Hf9hEu@XE
%k`0dG%W8K"AVr(qQJLr^I.^[53N2-AQ'D/OF-Gr^L8ir^A&1chUh=Ks#Rk@NdA*MHBqW\k84@T.==b7_Pu!j2W;U%U/B3l6=s]RS
%Hh9Y$Ub-*aJp(10o(Gu-6NTfZ-$XCoN,Bi&CBr9.WkY3<SAXQ.(7HKnCi6T`*N]n'[W1pkP>G)CadY`A</]#"\<5u2V*PG+J.i;P
%m4^#nTTt618BkRc)4mJR,/SZbZn<1:1YIIT"4Ys3k<Te)Z@[KnKc"j[KF/VK^2_nC*uXTs828?DGEtF#76leB$/&LT:aB`oc0P]S
%f-G_FGqt)JOUR:'b&.io_@@W>.(lg?l#6*5A`\8j61,a^hdD<7`#h6A[`K;*7:Z^bUsLi>(0PfTropSo_tjVsI3'[6Q*Zu#)JG8@
%`C^#r,QO\_j8q5Cj9E2Y)T=%$(@4WE?mAho9Vg[d6k5-2=q"RcMZAfQG>7@I_,n[>c`1\,U6Ee<AUFa0)bUhMWKO&gkT:1X5uuX*
%8A*-16L'X:WO1.)gIZgH0EFVAih1N,3J:5ua[B:!X&S@&[lo[R,]CN_[hNi$dh`bq!aUCg$nG1+F$::Xef5b]_SrH>@_u'R.0K0B
%+=8pAV+/dQ8m+-\qKJ)Sg-J0FH6#aX<AuaU;;pY3d[0<r:_uYUI;lUpW:*!d-jMJM4pY;1jAn]JIV<LNR^k6cKBB,<i#$i0.)*"@
%d^?Koco@`^5Tq_Wodko;$'@8lp)o(tYN3bCcs^e^/#&=%=q&ArD./_O>)87F@j_<]*O6IW-q9/j-6?&rWFukX'D-esG'j\BJuKpV
%O`LgU<2*om'h0Xs<FP:"X9TUsY`miHa[VQ4*#NSH8TI]/+n<_[SO[EC;fdI;1O-3u#g=JM,:t`/l(5m9kbEcH7>6ecjM\L#T`@$c
%#S1CrmaGY[0NIR+Yj+&&QC'sdCoV1f$/hM0>qa\q1D(7K=#dcb@%hrjAn912b<$so=dqE1</jJ/J6G+XfqmH&R">MUMT-Hg4L2W,
%PrZ\SAr[9\8b?7]j!eTk?5F>GBcuYpTg01M/YL0SYrb,p/,HKSZM#^>%LHnHE1qjAL^6utA3CVh_eQ-9'`,B+Gp4&\AVeG##B!%N
%>'=6uN;!I%MW&+I7S&L@";>8e]-AI#1_B<<IbA?\Ei+XC'6rQ(#(J0?(eCHUVSC,uEsIUMCXj]SBd.MfH$2sXHC05:bpJBQW!L/$
%i]0*>gCOVaP!CPoYY=sO18sGska<:76!!<#+HodpV?F6q?m5f>d_rA!ROHWF!N3g1B&OptE.Wkl<"u]m:<XSf1_&76`(JE>.eG#a
%?EMr/fE8.:W0Ed^%?d12Boom44?+J]ZjpJD;PsoV'*o_BTZ^OOJu.KZ_IMDeLU%%U(da=`"O7IpZj=d#L7]'Pas-=4#p'okMhaU.
%+B4uWggM2RH7>%cd$>#WWTuWs+!V7>_eED<k\t][b)<X!NG;9e&ni1t-5I'N)HJ]H6E&SQ`ajM95MF7=E'ZilY14i(GVrZaOh;X9
%%n&^<Q6sk0An'=Zpm"CA;)>'mYRUqakuJ\mpp`B.Q.#aS-h'6k;99ae&oL*qA7:*K?rXeXA7_@B;mJl)QOg239<5n#+Td^U,&mEQ
%1$7`R9S:g"#QX,aPa?6h-b9T@-a=;-BTgBB;QTMMd'k?eIQD=-N:[SG+'>pmHq?khoN,'5(MI8G0rq'f\J_L>+[[,@,8T1%-7VP"
%hatNp]js5ZA,P0!O-HhX4ARac`JJ'J0*jl:r*;O7[m#I&4oK+;Op>_N^!kF[nIQ`%$8Rgd@jG>+[RJ^Vi*Ndc66<*>?.ok26ZBqb
%/@'`uXBJn8*mZ$[L)P87FZ^qnOZ9eKiustJVFhNBK8JkmA7a91_j4M#*$t%\1VNaA1gV@?m)E(Z.$2j'L%-/)=PQRdO(G"am;0@Y
%Ae`0>)bP>V,l1@D%qjA8ksBWTL7@#G_<[01AFR)jB`Sl=+V89582sPa_lHENJ;W8.7Z5(S>Q^&<F<3mX4IAsif&2k10/?AHEiOWp
%f?6OKV$Z'[08:=h>lQEjD,HY7,KDGWPbrn"T+J*]1\!OX9D!Fsp0D,kDAoA?:sr+p[&NVe<.`.CHq,c+BW<rG4$jFnDWoph/lTG2
%L@[qN!`JB^H:Qi1Yb?>DH]jMWY'O_h'b`<oWSUb\JZ,s/<:;As@7q2A;8':a*Y)W2:q\AcR")a3*EG\Q?-b@rMNch\/pUNg'JjpO
%4&gQ'H>'=&="or]9rrAZUh53+UM>#BO\dSf(V>;e6"@ZDh8'-7cspihGE`ik$]f[E/7F0\eWfJEU'MIC$f,5p;f$EMF#TbL&2D0O
%F(]@A2kS7J=i;G":0m#-,(/e#7-C_aj(]a`FRF+aKYiPBF2uUX*P1Rl9j4DTGLGjKW,p"7UIoaZYHtZ.6MFaKc@Y!g3Y:>&'L'=r
%CeAn]b=q1rR`PO_>'IUpgr?L>B0d/(c[)U6LK5!0DIRf*[\S+U'Y?_jUd*)Amcns=Ob,3/B?>*gq5UFH*Lc*'Rb4/7irN_mS(aDJ
%V>IcrG%ZG*dri&[:b8kb[&`#63XM3>F0Rg24Tu2'26f5^7#<a4;nKA8d@q!*<:(/8;^02Y@WuYH#?7feSB*hZ\^heRRE1iN`U5:E
%TtCmT@X".2]s`l/GF"*i0oodf(*62C.f*-2c;G\2N`pX-kVrF<Fb^_J_9]OW:kMITq5/:)8hXom::9L@FU,1i1p&i;]2?GJC#-$\
%"@=&KXZOI'ObVSdmOU5MWOSp:GDN_kgO:Jm#JrFq&1Vinrja#t.!A,;35"BYm*8LP*o,1<m*6g;6"-sbfUZSoWCs#=SL#G_+%ELs
%["Pe0Fm#_'<8o<Ka)J?m)bP=Q/b5U2Yo3(ZVVHBl40fu,_eZ,k7ktFO9W6A[Bb_L6BhETtU(GQtFXPGRNDau\[@5U9gbcE4TjFt_
%)GtjF\f9P"$/<Rk:)ZmJ*pLpWQpdJ_MsP(KGO/b\WAgY8b<Q="1f_-)G@;rP9]us"9Gl#SkROFB;AlW(GE0mLY_-OSGK<&c<4`Im
%JV?I#8PSEo&V3P_/p%=b-p&,%$Jg8ed=\p@$/GoIjKL(T7iFr2c;UDuOLGNUfnAdp%uhHRWcVme=,"2^FGCXj.;qh&(0*%&3L_JR
%JVQmo%@Y]cl,uVe2,h'g)1sVj2l/TM_1>>FDEN'=F9`-YOXb0>GMm2!?s$@=_a5k9]ecKHXND_ShN[H4kW,hE<hn(`[Orlb<i%lN
%p<Yp\8p?SsTWr;]h-$HmVMn,kfLG5SGc7(Z*Ej=<mRh[c:)&C]kmj2I$33fl'!TKG0^@Fr&qISRlJ,NS8,0A5-tFdFPjG>ia7#Df
%@WErSXN;YCe%*B=:J-5AF,+%)#5_*Wc6?nnOCH\LK>kaphQCp4@=<JcFk!rPR]+t?m_Bne=NXV(%aI$iWLCgII"7qO!Mjh\K-mD>
%'^eAt.ZXXT;#VS=PNpo=S4hOPaP1^Aq)#,+_%m<"e@&#Tl-iA'm>rg<o\u`aLLO>B4uHb1fSM/-T'=rP<l0IX->R6gOOW0uX<!at
%B]!CgcseF\hIQ#TBiAanCPQLtGH/d==i:e<F^8PFclah#1Kcee&-b@gWZ=bC$?@t#4.7t*Lbl'bJS1+$<YMm!/`tnXmC#.Pa$>d]
%Y+1-6_p$<7VB$(Sju%>d4'7joV`_Cu;43hd`*iuZot>+^8HY)`Q(*sNo7ee:DNKY9LLE`p6Qiq@[kJ=')o2AN;Q5Al*SB;jB@qOR
%&)X(m=uIaBO^oONp$Bc&B,O!74Zc.['!7^uh1O3H(9u*Ulq#\a;6t>&2aogNfoa>l/'(u@%Yj,]NN1+RTmBCcR[T`eN7R2qRl-J;
%,NU_\92s.G%E^af<O9#aashKs44Z[O;9dBEna*fT*?LWs<F*q2fnjQaYZdEb=cYYnZa7>/VWlb?0=*.e$%jRPG*b+2+!`SHA@Tb7
%=^IM4M(3.N):cnLC3GoJViXA*4.=gGGF5A_iBS=B?-NkNK4kHH2*4Hn".qL$lsSYsF6mXbQL#jQDlD>ljs[$&b`5^-be#K>#:a"0
%MKDcO4*'pr`WB,`cB;9Q%AT;]73YIr@7/6Kc(]gE`9bi;-0$UiLDInBk@/Tg/(1s!csFenD;E.s/6S$+R9)H=VA=ta'=5$(SlrNG
%Ad@'bo%fb%*EoPcQDp5l)/JJCcG]'#FPLo3)F]uhE%/B/Q5r4'L@MmA*S3oJ?Zdq^=;@ndRZ#j%P#Ms;'XP.(*jEe39'0?b":a[W
%$+\WcjBC0@6]7&a1bCd^2HX#69XX53;sNj//N_ZKA;t>-G*^@ZG!jC^D^q/+:!-3jCB;>tV!QGZ-?t`[,Nfr!?'hj,Mc$ZePd7W$
%5J0S@_:9ohetq^=#KY%EQ*Q#_//WAjZGST?OE"4)ZP8,>EC7hXc,%CsaNcihDiHf$QF*]16cRE7[Q4nnN#`ts(6_6+41qI'l+!^O
%*LjSn2]4]c;#\,LfWbT8O`MC%f[PW>6VYSGimQ&TSB9EW=ie4DNh,i2p[b=nB;%WHgqk[RB,R&_j>iMK_=&?hK2$LTGYHbSZ*VMC
%b`js3>ZKRq%l&5F4$3WRs5u.\E"#-PVTIKDTUZR!`m0a5ZdCFK)*9f9,2M",lnG8)!co]!LLuZ;Cf5FY%0ZZD;Kc/56r.kNAVXl[
%\o1JiBG"ma8_K5^R;nO\Q5uQ#1.YBf%PJS<`r8ZTNil6P0rA,t<l..:e?[!"1gt$sAVV=gFLn>\`tabIU1r:`7$$Pi::9H83i#Wp
%:&mXC$JBE70T)rm6?X41jJu*#4&Y?"K6S_RLFnKW6!_QlJ/RH;Ruj1PqJL<m6?Zbf\'2[+6?_R";-07og"G/VnX>U]:6c7"VITr$
%NhX@2,s+5s9&?P3*LI3;K54q>+s,\%L7"M`8qG[7m)WE3\#kSA_:f/AqRMt6X:hPMFtl(oHm226`9aEW6#+'#QlYKGQiYdVlu3?#
%dPEU>idWf`S!Y3R.&,;<Z-82OV7A;oZ\,g-mCS;0!Q^s"<#;lN4[)lcB4?%_hP]Di`U!RmV$Pbt->)FC/usQ+;9TN['4L.&AVWTn
%C/f:04).8rBIhBHm*I:KF]5WQUeoO9:1V_8T-ia2Tk6eN37'<Y2*8tm34hR=.kM)'@(4D1lid;3FePhg;7;%Voh<VjoX>Ig=#E)!
%JOG$WRN3itZR1?K7L\45!WY)841((^VlSKBWB>aHWLBAf8H_(>ea,ih^grt'RN8pNXO`5c!J7K7j#/bVIXDn`bgbu-l]HoaWnFYm
%S`==ZAquPS!&]G4Ak1RJW3r#0rf'GS2=tKqG,-.!Af0(b8FAp#cDG2DqBEKJ<6^HO$e,](Ed"P1T`TSiZbpi0OY30hfs/P6E2/pD
%#.nh0cK+>j8&F`DjQrZgqbbY!Vb5-3cAqfc68kiaG,-/mSZ\r^*L[@Imo7OA.HdGng!o@j(aP^-<6Yn[6e9DWAg_UCAJitaE"(ma
%>g*[<m"lXA:!AVVj`.;3LR`XX'Jh=&<hRk:Bj,\UfV[?K`9aET`Qp5:ZQjNAXh:NC8!pg0;"mRXN+>577*Ua@AeVl<LSdH(2!]"C
%ZP3(s2)?^p7gU-6X&1l=$55+[H7!8pVN.Mn/c8BiRLN[>ZkH$4_/BV5JbXnP2-nR(jL+PHdV]^5GRP+.n%(NbGL6Yd8_T;7Mf7Ds
%mA*Z8PuZ6Bl_7IOjDg>[GUUNd.b[b.L^$LN[%mDX(njl"4"=B(-Cmc_;/E/;qA5nV4YfZBP'6Jn#K?%sUCG7NVgqCnD85=jn'hH)
%[&X`.]DB:Wq+q%Pn#g!_q.tk#q!q54=.e)'\udXYl)387ip?"-30Sjfj;3=BQN(QVr8SUnonVFs?dq_snr$lL^[ZojrqddErTX1O
%)?6;CqZHljg!RS5lgj&8ro9pL!H68uH?X`0Q7l7MnE+9QR+$!!04*P+8Z01q?iT<>mJ)b;YM1/54l\d+g\"YJkNqj7`V$jDfC_:5
%>lSU1$)_E`GB34K:O0jEq:jHqmFust^,ifhA*YqqNrIQb^#a23o?6#rI/D11QhKt$4+Fs%X`2X.]o4i2Q]Jo$pZJ_u^KL%QHJEDQ
%bVs1t?[m./i,.2!ch0=l?KR"Hn+";5^VYE"`:OfDec0m\3Ho=7]R>"qe[paGX4+DqHU?#(ZnqQtTB1d0Y.qJ0^HK8K3LIJ)>9<Oj
%o8Bq$C]!J^kB].9XiFf8k3VKIM^9lE47Kdea$'DS=77dAI!U/1h4egE4o!]rPj61Nr`W["]KQ/jc.W,F=(gBQ20.aPKo=3(DdXZ5
%K?%i'ZbJ]4BM9KGiU?7eTBM4!G;lF4J%.N7p7([&"\-qj&gQXUf2m[tX8AdKr&rj,]u[lM4aE%QDpN;rDQdso]ZYQ`1XDDSf9bB$
%^HK>;2I/Mp;p[IKquM9FgTrh/T<59O::YCRFlfc-=)N0B<`e^?*dDaI;N9Rl5@'nr?(JOVRJWsjB>GXsLX+ZV&9[[-<aTb;j]5`+
%p#Y&bbB\+$h:]a`hjh?nrr+Ug<oK-fSOG3<2nmS8mJsnjAM8&Urf1gn"@s#1j8\E(h0ggMJU.E:DdWP<m(7=5R9AIS9b2_c/)Upc
%n(tcA5Il)[s&[rl]6W(Kg\G!Y@$nW6Z3n>FfCQ\nop[mYcYagA8I%<V?SC)B?U);\r+CJN]q"1#0X["eGC"[WIIeQ<IriB^10^,q
%\6+=ll>aGLA+'7-p@d7Idm(UZDg^s4gg?0CnFk\_S!2=-02></NO7BtcfPKbGd$ruhd)c-]Y(t)H[Be@jD/V)nndc-QG;AHrq5[O
%e_--mE'.]-*KKE,)7,usrd-r/r:`#DNcs)km(*QE(VReComo>nNUci;q:4l5AI-G^52KdsTi:WLg'rCCoISiqGMY0$,/UVV0nI4u
%Fk.t]0!520()1#Xc2I5tLO8k-3,%L<rZ8.N9>8GpcGJppfU[1trooc^K7CUZ\2_8%r8dc^-Y+;XPU2r5ao(qs1JX!pS+GBQ0$eF%
%XM$jac#Fhri2<6u:YAjBo7R&4m,mUio]0=^43L^A_u(PtodSHCT=&.gBt6njYHKTcgmjr6pOYrZmO'dC23I.;[s@[8VF@\po-j$Y
%G?FI(p'7X#nd`:Gl7I79rGa6H(KB)FS@h%8[q(\>#<pbo]KX(i=d$Y+O)F&$YA_/Rk5+*6lNKrT%_<g=Y]q`K^"E"sl]>l(f#;E1
%]QRl7m/H!e#aI2=?=Ii=Y><b$fU\Db9.%Z]cgCn:mf.%<k.^Epej34K/GVVZZPkJf9AW$fJd#Lp,q)kST-*kApLSsCdn7=3*SrEN
%7sNlWKLHjCm\`o6)-)$i]DQ5+(us^:-WaA^(LN\<S=M;(n$c)<Y4qh<Jl'qFhf&CVBARKSHiE`nMj)VrbHn8(5G!87T3KU(eU#iV
%SBI+B\HPP+qr-cZ!eI+,CB$<JqU<ahI/IROk7T#O*Os:"mX=f-k?R%RU)<Zd&'_9u?f.0nVHmQd^09HTmei6Pj<aN>Jm2.0q\)el
%m+Q8[n;2(eQgDN>ca\,R\(+/L&ni.75tC"GkB`D_1YSaf^X($ffB9X+h^pRC`^?BaXVOU3l)V4]s+rE!q"r<sJ$,-N357L9=cbOk
%H?+$%a6P&)c]^_gl_WGh9Qbc)IW;VDMtc6,?KUPLC<=\Of\="C@em@82`^ZD?L-\3qi`*;/:hpK^-0#0\6$k9ch0nM_<\a?_TaAs
%mBFk*k2uM\ai*.Hcg"Z'>b,4SRM<O5=ANlA`,#\:gRK<O-H_L<fGi`1e$<S[m(h[g1bj0%Frt*=b3>@Ondp\`".:Q1^<k`<`_2-=
%p+R4m'g>m3T:b$f%NuX"JN:.d\L<BEcJ?f8=Yd#NAq*s);:]!:?.j8L>a/OcFUg/C`Vp9d;3lU?2&Biu^<+[(Dl8APMmDCip;V^=
%O^+-!LskX":<fL>pOlQ,3PX[)PNOMi_csmorpbd1c\M:o:[srNE)?Id^\Q2/InTd$00_/i\<$O=Tb4@Z!WQ2dRHI)YT#`[nY%pg9
%f@%75*SS*5i01>0g:FF-kdpK"S(b0:CPTC#*KmsVL-`DRC?qnnZrLs#edcRt4!\<Q?.IM+m7FA41a;SR#L6/ua2Mm](]:?9JEo%<
%qD?@\1g860lSMeCd;7&)Cm:q`5QB?g`TJ$b5C@_^opX8J`<FqDdeSAqPjgUlG#-`)"!Tq68+n`ONbkfsD3!o]IocTPs8,stLSFso
%niTTtQcGuZrj05Lr>,;`O2'OXZ+Je]?!cDM_H(iHQ/1OHXn>?\XZ`>$3PTlgp?);<I];PakP=i<jS$'@?>=NIZ[*`i@=6`ce*+#H
%(Va-#aM$n/r3Fr,Rl(*ZIb=$F@,\3?ou[6p8D*?s@p`SlHi:D@Rt#mr5hCI'eq8<>d[nLt?FJ1fQ`IpN#2@G,"q*]#J)1uJR_Ak6
%HJTBRZ#R5Dle.G>EZYQKq^2"SS[&FfE*m5.llH"Almmk0n$hB4/=@d`I)\0eEcZ^,c/mXG&ejD?]h.X%+QA4kDlrY9/,e&omnX`!
%4TtW)2?%rhh0D!M?[c?MJ=ZLPiO<-'^2(seUV>\Q.XJ0Nh_jQ.`dHC*msT7gNVVuJd(@;Fmod`_R-tsb4nP-1lgm&RhCT>tf_P?X
%(l/-#+X?jMkah`;HaBq.peL\60<_RZ0mU1fV7+Zo2L&ZHZMj4R:%cr$%`A,$ch1U/S6]B)J,f;e?(?ECc##W%do.sk/pP(S',L"/
%]=&_"&4._9qQmADcH`RVX4uF_B@ReYs8)Sun'8*ic>GkY3IC_Xp!(V/]s3/(3r@Hf5\H!ej,0J2pt:OsXn\<QB*TW;]AdJ8lT;!J
%6+=1YqJ.7[0fes\VG14_:+-'iIeiF*5%V^dims-;Ash_ikObZY_2`ckgm$]RKD.tIR_9^7#6GdVrV#Tbm^kE5PuDT3eT7q^g/$b;
%5?#(1_.V3tqZK#qqimWmQhn)(qq&=-c@41LNi/tobB!b=$F:$-U*pH?QPFaJJX7*r=b2nSGZfTa'mNl4QQN[g*C-]U"cuabl%orA
%KfV>CN?C@jHJ*Qdl-QH:%hfdaaX21N,rda3JjWq8=Ir0rqeOjt-@fB7RTM>BG+E@,ir&NAPOj,Eh0n'TQ@,!`A7F@7Iu6h(mYe\h
%([o2s\?[gUf&!nl0Wgi)?>bf#(iOo@Ug)N=<q`BQ)Q#_<p8'FV3I-&OrJ-]qfuKBBk?+"a2g3FIC9Y+9IEbLcZ*1Dtn+-.">JVkC
%ia:%+%bGXU]KNmG8@gg.]l6!dRrr,\#?mdVbCcC3cMs<il0%74][$jH9P7bb^<B(U$gu>2=Zs.B6eaa7m1@?YD(r_Pr&)2QJ%[7#
%9ojY0Qgm^Tk*r\gWGDIJkB`[pD-ZQk95LXNG5W_Q=Rc>oEK$IXa:8X!81T_*dg#;mi#$%E0m7ma=Rq#D*+R$5g(hZ\eRa-I0if9(
%`A)NEa1+98PgXX:ETY^\SGMe=U+/)LVme#iJ%@gN;Qq;,4o.MDo$?o5%KU"M])L^_r:]bHph]))ijcap?S%rIQlWl`?YF@?J0iE,
%=77dA>c68!Ma#P\i9,D8F1d$@kc9oVB>;2AqnMUFY"k>Y3#fp,l*>5f(J$=:?8#G.YFk7c+"#ghOqG71mG.5D/)/>ShS!"!Sc)sN
%3=rKe7JlbIS*S6D;hp,kf:/kK5p%+j3W&-SS$1[Se3.h:6,>u"hQArsLIQTqdXuqc)7osHqZrFHbNtSiQ-eq4,\>4D-%.@kRCu2g
%>4OF1T(9;M'b3=alh3'>Cu:?LK*JUN[13J^?BE76LFBUa)&R_njaP-!>.qJsRp3S:eXP;*Df3CgZ?gT(pG/d.[p-%Tf\YBaAlc&5
%h#@(i$O@OAd%=P3<i\<k\oXo62h.IMSQjp\eX`2?F8u.6qXrH!-VJ'kme_%pOF4T-0=*UOgo'iG]X_T,ES19GTdd)pXH;?4[I:nU
%,o/I"/$Hn6/+F8]ZT[943.N=ATF!ASU<d+I[bb7gG=P'Bs5U/<PLG#1FsKf6hk$@0hu<*eMkIJe[m++K6)jOek8J@K[FTPN?!-kC
%n$<]jk;<#u#2W\3U87s-f6@8(A>4Hs+OfEMfR%c_ZTW!&?j3?MEIBn[k@V:(lE2dWM\XLN3'CDTRE^cKq<tXKbLqL9UbD];qWdJ8
%ah<k%1QQ2?N9>N!"mKoChqbq*3B^S-%-NC1f6_rGc(Z]J$Nq%+!M;Pdr_;9fo7VgEd]VsAI#UMO;G%<6HHn/.YD%etjOe*LE;Y;Z
%H1KkUQgY]Dr;)Q%Cd.gkS4h\=A[/pUIEVrTgA=KTnnQE4UU0e2e_n-G(tLkC8+3FhC?`,,qZKi9qik`?^BJsqHeRBUleCa+ZR<HE
%Gfi2h7B9.ig-e.iS*16N_g?574is/FH/%Q0nrs[6em#uY?!I[G/Y?stLAoNr@f4]!^d6<>%a1"3h-\>@GRFJ`n!Mf&Ye*&qm\@4Z
%]n:gKGITWIrVYaS?8#k32j>V\A]alFk;,koPFM0uD_B?O.7pV1j6f[2F^No]]6Fk[`[0MQfD!92qtmr`mc8"`pVm<g)tsq1?H!+u
%?:N9?I#j?b'RMha%SMD#AL,t_7\WD`@.r#44%-WdQ"P9l=7W95V4Cu702Llp(,3)]`=d'LN;i"C^O")`Dp(A3X;L??kBc/Qe?e$r
%OO^bZ[=,,*qr:&]F17Km__Uus[!6EKaOolOo^T/Fk93&N"L<tN+*'7'V[KTpQ"4?jm$aK;o^=SCp)ri/j;foHf>Ado?8LqkEBSR#
%@,(K'@JW"mas-Rlo%58B_5fl8DQFpr(B+3Vg!0!3Dk7R@fX3A[Hh,^MYIbU$Si^*UnahJ7CFN^O48P@HPMa-e3rR6./gH-.aH#kS
%3BHe@p4mdX4ngY:LVK4iGh1pe\i;)Erp.hNe_<#UPSA:[bWj@Pfm+h0agFum!IVsmI6>DgKg&Q$6_Bu"Dniim=?W2KSUbL5ji9rt
%r('WQ6kQ5%roQGIq=8`2YIbVagEN*#r6t>hkOg=#HhgXq?^uOmIPq(j:O_i3DqfF0O'hg(q:5.,I?s`OYJ3;JFnXtkIsb^cIe1Z7
%bgG=_s5Y!bgAdS95NBL^Nlg1.^p!c<s8"sfmJA,DNrF:qs8IN1k]K&cmsk/o(SBhFfV:QriA_laiqHj'Ytp!fNO?a9qS2]Qr,M;)
%9Nm$23orBu46ifOX(98OaF3i9kEN'7)iofm``628]2/;e50;k8qQuI\H25Q8?@7G:OT2ug"s`*arcX!6pA4"=S!2IeeM]L0FmK%V
%*#iCIX8`(&O2]Z(f3UQL`e6X);uZY_rA`XSLCu_!J(fA@cGq8c:iC9qEH!oY]r565##FaJ"[C>JitKu'ZR`\PO3pGp@81b+#S3%1
%+!QGQL4VXEA2=-T/r+,$rdHVO[HutDTbdosZ8C+ha[eXb_>F5Dp>S^dc!O4AR@RX(8%WsCo48jO]Sui*rRS<]j`e>Fr#5#d3Er)V
%4a0'cp\5`CS\0q(7psKR8/&/jjdIXQU&Q2&kiI*&95WbSfk-V1#CZ?*",lRH)Md#!o"4W1IuSZDS=TW+jLJXChVo87qS3'tP@+5^
%7c3*1J+AM>oPacikjSQKmP`AGhs0jQ(E/<tZ)M%^eN46ek]]e\\DEf_S<&ReQ63RG42Wstlio[i$;P5/DfGebNpiG0ch_3uTgA^C
%3GmhlqN$9V)qNp>+YrLB=FIdWQTh[7R=(MZ;<tupH9<iE*#HML3Zhn1P6(%H^Q(Z<bQdS$3.QWf&AN3(+/E*r=+T`[eCEK['d/51
%;(%_gGZEN_*r?puSc?F^3B--99uf!?g&5WuFS$Cf[<Gnqou8m2&&m`PX:LTC$hZ/[]Ai&Cocr2%>f9Gd:8gtRd5?-=>J%emqOR/.
%a4@eKo]#NAn,$SaI7$!&[a[TML3-ZjJ)GbP$MHE#T/eO1h.:p]hn9PSUHa3Zmp9X*i8aW8#?VmdBUAR#flFJ2a!i@m<d2cdqI/n/
%lOkX63@56I:`n-8Q[61s3U2OC>WAU%3Y!<RrK.uEkGeAAD<!L.fg17s17VgXrF[h)6X>q!cU3Ud[7*lio>O*UeutDQk=95>jm%(a
%7AiYH6,n4%\?9]`fl.rhkr;hKP\B\EN440"oRUF%qcNJCB9)!pH_Wa4opPaO33F3j0D.NFem!q+7rn:'k;oh`Y&c]uGN\!c#'>'g
%h<KBNEEp8;NV19V1lU:h]?`'O$CR"@3;.U$]'aVZ^ZU#P/A?$ra0+j&kdFC@OSZe+j7nsJ<nmFnmN)5r9;>N3bc[^>\7k?6?6?lZ
%k2b:'UIuNA^VXE`n@lPZBm1N)f3Jd_f$o4Qp5'1oN%]JA+^*V3HZP/=SHi;X,=c@cO?c>-&H+2=AF99JBtbZe7mlZ'r_CMR7p.Cc
%EH-_mFd1DGhmUX'D%alXV"UgR]s>.XLUH>Uc)#`3>A.C';tBP1h5ZKCR7he?SAi&h2MF&Wn2=U^2B,@MRe7qP_/6PnmliFj18g9U
%#':o`;LR7=?kLuC)Ra7@X*:Oka[J(6;b(r;<.1^'dAM+i#eHDBj33O_9:[0i<f21`0R=D05TR/,>#0@5=]^/6%'`R&\dYJ&A6FAr
%S%`!NdhqA1_(F?Z\f_N/CG0pCXOe\O7s>+hI/#$Ur?cA7(lSlH[(I;]6IB.#D#L@9?uk?+([Qs$V:j[24^o&RrsWiKN8ZP'n^5TY
%*O4-c:IfOF11GQiGJhJ'7tfP[<c`lmLn9"hoG;_B51F`"%.Gc*^;Sh8g:r&>GKMsQLGX!W?bH0Yl05h'^KfZV#n25ZHZXK3JG6Wr
%Ct-:)]`UAdJk[-X8+j^`ITG(j\l[tdF=29lUb#R+j_0\+'4-[565r_-:?TC)T,p#m<EI%=ZTEu"rrIK,-g>><Yb:ecc/0-e-asoS
%0@Qd+O.?65,HpN^5'uqf(Y@7TgdgDfkPmTTq#'L@c.V?`J/J=XjQcEWp0N(>[G88<qp/&UDpN=(^p89-qq$SZE80gTlN^]=%eYU$
%kH>UNqrO/aqbho(qtg6Xm1"DYEl%#ue?u.PT1p;1^])F0abA5mi1FYK(r!L>(LH+t)?+SrrqcXTqk7<XiI6kYr+A6Ao372&P%$Y"
%_*NQup\+N,7=nPcBLRN%N^s]jpIupSDBhGj$OO,NKEN/r4I^"\liZX'cli&rUHr$[)&UisUGCe:1ajtDK?=<+HMW'Y5_JL8YFn1X
%UI"SuTgA3=UI"\s1e9a`%5]L2A8"eANX!&5BMeV@d%HE#P\jBsUlNT^#o]V4N#V1KQ!f^B?r/=sJO,34qdSf,M$8#IaK8"[HQYWJ
%/gSN@8C34s4W+RcT\nN`F>jaVV_72<Id"reg]8+"45<d%J0MV@'Hu`Hf$UqV1`fWJJf#1n.3USs^[A.V0RN/8J(aZu=7V_GLR&-Y
%.U8HO,T2"2+?36\Af[kI*EVNfeVR.ii\]l(0apLq.[lsq!L&Mp`bLi/f`p_8NU7);R'TpZM77L/Ip>4()Wb+7>^\5CA9Y$MN%`Fj
%_NlhG*A^?Sb+V"E]`Qoli<S%X!\=F$]2m.Tfo^+66A++<am]`01Lm!NLE7dHF"k/t>Xi@\\eu!,g/@[Pi,&EmK/@/@1K\[4s(8=P
%<B$uBQ=;Xo8K@!\W6c7i7RP[Xr@lUd`42/*W9_VLApeGO?2u'Bo(I+#p2=P2dH*F<Ac"'e=0ZVIe#W:$k]=;Y+]TISh0k_$M_>bK
%ktC2KCAq5-Bj*`6rPVa'A(Yo$m^8hEWf:Tnq4p.gEH7s5j<'H9Yf>BnD/Q)8=Cc:Ib]f_I(*atBq:\'T(PNf`2B";4lD3m!At;51
%(uBZpCjBfEC]NY(/&,2*APC`;7K%Vuq/LYQidS'(k0V_L./+W6Du67`e8Kgn!>G?-6^b?@s,M56OM/r(^<@#Y*TY9q>t*njC.H2^
%>sfTk1_ib_X=0q[4cF_()I:$/k:I1FK=\/t&\ZSp)$R8G*oitiK0#j?F.RK6qrm(MKBIeqXq'Gj*Sr#D]jQ$,#L(1KI4c&jS'umd
%8lpl)QPoQq=]^i=1VV/:&u2N`[Dr>#$4h2@p[ce(PI)\b%V1frg"O0_crI#CeJ'rJ5cSBts(f'=,ai2k</`YF`3j,A@@+4'3^?iM
%*LiUkS:0Y&%!KOe#6Q)Hql?kT?MB#^UhF9*PGD5M[uePQnO#,2M_$Zl=/5C`Fn%e4.pY#G]e7R[*cA#Hm`S;3P[$i*SPO:ZqYhgD
%h>cefl\H'*ThkPfofd&9Fg-laB?!.qirhJ^#3q'g*t!UIHaX!s.tG86a?N#l3=f<oo$JF>5+2Mm7lpnnld#lN*.AT8CnD(l^'B1:
%#W+.C]M6R7j5DW;Gk$2h/AA<<`jpZ?V0jQ83;dI:38G#^bG<bnNG0O6,bVDL%N=*@TQ0b*TQ+`1D0Z,pboOJ,Fp*dbSd=6M#>enH
%4),`^W:A@*qdT)D!?280"pc4G'f^XQi7Qfg*1I[&?@h/28Kic3CV+S-(Plmf^/fWGCO<Ahl$8$jfIL"Y[)n/Qj6H[N\H+Sk=p"Ws
%@&H`,&*]'l?Ei;Vea3:=oQ@odQs_`R'!R)Pctosl(SZJB$oY7L0P:qdh6ssu=Li'sf4?UJ'/pg1^;X]eNU8nORk+PV]i1'+hYNsQ
%XhFj!YlUU+'BE_O/>&Z268k51=?nqd;B:WY7fCnh-=GYAU9beu)p^FN]/hHQUB2!XFh'E]dGdjSHoJY'-+gO4$!2=HQoULC';49D
%\CGN\)dZLJ*51&ipQ7;Z3f@9$DI#9NFASUbSN(@H/hl_`rkR7-[*<@AHCl..Rd/HFmPkXMZIKZb"]p'@nC=bk4&^n0Pl(3%JWcpJ
%>t2N0N;*S:&.#3W;P>>hM5^MlF40L_;$7ANpt]%c?aYCi6O)g_\/lI=]):UGWZ",&!VK[Ml<;4)5$$JqJD:_\f:\!`"hQa:bW?2Q
%G3?+u#>L6-ch?RF?T`dCq0p64MKtOO0OGV\8.ocW9.-'[.=eNnkG65MJL^9:p7uLrfWH=F`bA)!JR/3)j[,ObfOeDK"lP>o==,4]
%LpZAF-_?HC[/f8B6$*2E2l@$i>907OddtI>6>R0HNU:k<2d*:[9OBPb?\s^,9.%*rd[&+'YV)?"-\ZOdc[En<aCEtV(Es6Ql3N3k
%D)?,mgXrZ+3a!Kh8h2u!>r$Phf]o`UA4en1Y03ECdp.7Xg9L$aJEM("[.Vu4+0_:u!YZYt3=,b39ACfg3.b%F3Jiqi_RcGa#ol.`
%Q]p'gPNnO(T$+fqq4>X?OX%QVgkQ&SIsqI`jU[>l#?]K"5i$7+)""JTNJVjFhJ!r"2J.tqpG4aYD`qumIA[tV4h9lg!4]b\r*;N>
%$m)9"Gdn+cG97n2QS."3_PMYjLmJFN.0%#8MDm(]Y@C]71[E[Z4*H?tO2js\E]4$@-hj)SjXnF*On/M,ZhM'F1S;>V$oi0lR%WX%
%%P)ihH^#+/cPmFAfm*0FH1`VR4ruXKeFNf?T6Bl5X%R8R$EJ*X\t>QQC\mNKqf#?"G!d@LC"dRX(>O"pDBs#\%G]cu>rqqtM88l'
%2IUia9'.h?ZZj7T)?K(Vr,a3n"RajLRDh<LG(RkTc^mjEhYI`,O87Sn:2k[Wd,9:KN83;h._gh&k7O2E$BZ!*]GI"I%@ReP1B7!9
%^0#\[_<"&)jo%\Fk0Dp,>eWW6VmsBX"Urjjmca(1k"Zq`T>6+g"&',IUPWC]:5g-:@b_1NEsLkU);Xg8F?WIYq(\dOF(FG&Ho\dE
%cTYZ-GC1gJ)NQ!h\[s)_q]:8n;S"qLTC%:(rK#cX4/MhGgIcbkLs>+r`9,P)fR2Dgk5-bh"mDlMjV4Q[#B)s%BcF(m_Jj.J[mXI[
%F1a`[oE&>P=WVXs?6U(&G^US"_<Zk<nG8,&mI:^Gf4V;63HA(&!;@!hkBV[2(PU.sgMk3$K%H?Df2(?$-f=O7dX)V0O.+spm]-#,
%)I3;-Wd!:uELW8:3CqG8!ue$SP&fX]QQ5flm]5lofV>^'5An(Rk,9oN(,Nu,#/B^!eU3C[TmtVeJ[$sn"Soma,\j"0K3*><mo=mm
%=lB:cDT:1ae'?'Lg,V/f\jMLJs8$E"K=oXWcGAG,]TsOh[*s@`B7?*^pL!%-cFMOBrrBPV4"n&TRH2u#nQ5(U;r%62-AZ5)dgL0k
%l5/H`fV9!llW:jJ?#R;`;btE1YT[%?5N.+JcD+@r>i/kkfpHP5k*h;*1X*jDM&fZ,a-G:s-$EOM*EQ^jUQsJOc-"gsXN\X4R?BEe
%A2.`^0%V(Ej=*Q%.-Lapf(fj/j:iqt5-ug/\j&gW^TKq4i,jf-Z<*-,VPX;5(THGH,>$3RXT.FJZPAD%FsAe6p__Yag?#=lie0qN
%2NPVa21[WO@hWIVf;=jb(Q-GLr]:1'c/&;`WF>;JX0JXA.&JC=5ej=_X7R@C5+copQn0*l0a<$_@,"i7-^e7?I^^9^<SZ[*?;6kb
%^$FC4?(\%9kEAfqm4\<6a3ehGSCcKhU"\Eaa@Qs+Ebl9"4\2_U2:,%J7Vc;W7N8jE7+OAZhcZ\63'U&:<bRD_/:s(Zd%KgKJ8'_S
%C_HK^[Csi)G!GeQA/\!FcDs*pnp!;Ba]<*,Zra&^jYCXW!KBHb9YKo\!:t1cQnUWo3A>=(lG\$\0g*sZBS!DpYqrB1%P>+_g1Ae`
%8WqKdbYlbrdT@dR9m3#24a:@X;Sh0B)dp5ep1X..Xmrd3:9i'FCBkZ*/8P.DWkE9K"Cq&u[,X$An$U[PVpeBRUok1)bHYb>n?j\c
%q\6urXigb1WgT/4RtTT_73@@t53=S'g%00*4Y)erH&)ZTriFMb'hrPsS?tct^<1j)6Kfr,]u0=L^3fMNd:uTU\CIMOJida#oO+sd
%g?b#p-^_Ah8t5[69Ka'tQku>F7.#!`iK=37m;Y+Fr/geK+S4F/1jd\cj0W#;m:.5I>#kGJ[#X9^0g8AtchM1IYAX='_cZ@kIWYNO
%?*EF>Z2e=B=LgNd7eO=[8jc'/AZE3F7`#4-F"C$>^-V,'nUO>[H3e1!9JNM4ljmC``P#?(fno'YXUO`>;u`!X)R\V-+;e-=l?^-2
%9%%$/);EWRZ+COPb/#2AQXa=NP8^K1TK<of)ecLY"u2*Qkb.6hdd<T9%(p]>o3lqN#Sj4`ra6Wi1=C+a'4"G0hNYSh+B(i<-TG`7
%DpXf/n;2/dR8.Cj9h'lfm&I4NqWNoEh_@a\i(*VUK^NY<9DFXhX6OW:E<FE3O8!D;"OFo&i(+FfC<J6dpnj6L?T0XJDc.iZqYJ&%
%f\=rH9B$,Zd9>GYG$=dk=@tO=g<#f&NN_cO?jK9o;:'j*a]Re;$r(1=H6#c;VLCIDIZW$NAFuP@Z5]u;i)n]=)kUtSpJZ.,Noo3N
%2gZABIQ!-=14tZ@ND3W*fRlg!(*I#uWIKV^Z4+,gM^t"b:Bd1[\^fbcj#7lR%-7:ThqLL0$YOY9C'qsi'M`Jjcl,^7RhRU&-O1H`
%iqrOOHe\H)`ocf*a(nH-CTA+D[=>R59*b<hqJ/"9[4+bOrhiYDiag<kQuo$M3HWTo%dAFmZeWbkd^,+@Lr$$(H[Kb500A"Ma7_@X
%n^uHpZB<=))(gA-e!?*pBYHPMrTV!T+)1idW.WdiPAuZ@l7$T8-Xs6jm.uD`$Vu*h12TV=]XQo0A*$()$(sC]9T]7Ne&H+29\RNN
%`,$?L$a$0a:kWX5Cp/\j/jOo48N"``O066qlgqbbAn_2SL,ONlgAUn;-ne>EGht:R1hh6l0P+a9He+__a+KXA6-fCh%9@qb,l(`)
%?2gcZpn)UUo:mSCh]:Bt.+s#0+ua#%G:0ujC7t0Nd*Ir3!hI%/3rOhGT=O-n58F(>)WtAcS84X9NH>)T39S!.m*?I16kDdBbO(IS
%URT1^Esk!o#ND8a`B!lBS,K>\I'N=8'';=Q+N`s\Od6NH0L'Y4L7@'S.)`ukLIMt&)o6,b4*sQU2X"eo]^<)>.(5*#K`@ls+i$>0
%&NJ^B-Z;Ku$J7Pf^u@;%QGNOHoj0b$4m$d?%5Nh`#qc`\H987\%B\N?krm`1NFAleSc*:L\:+DDlCch\p;_[q5=Kbg(M>*SVr+T?
%eSBL(RU5qH7'WUjYNaSQHM*_5]tt70m'+>:LBTc@l.,Zq?N"gX4a%eCL-F4sF!UF2aGm"Ke^_H+W,ftB@O$k=K&X2#]V00&\:<1p
%Ro1Z7<)jCROe34@B<#'$2)K$S+<RCL?&DN^W2^=H8R9s^(d_ioDm`O/XrG@h/!ECtX<->ReA8Y\&I)IGoM!=lPF]?W&\W"k0m,o`
%,o[N/2H+H'P5>E\,=l]>D=f,'K;0/q,;eO,r<]Sbf.GLSIX[fBe5nG6j<:X<&+0q/VG=8sboQ.q4u<o!U%KcQU?kdQ+u%s(/GC+m
%;]mu$c,Eb5Z/EcPlejZLK-mSt?al<L=<VU=e`aDX1a9o]0W,$M9@hl[&(*@.coV_iBaNOi=rnW*9s-Bi(t/??Th_uUL1]N1`Xb7<
%9tmNZd'K)sM(mH01'[8fij!KtHkasG=a,NC.;9huMsFhJ[<$39S>26OqH>[\>jZ?Gq`D<%A'\I%E_>qU@5=`5?l*>EQ;[CPA[*Vj
%WEu8:E$fAOFb+B^4&-Af403FbH?dJs31VA[6(H4KR2TZ.)HQr^(:hjT/o.a58rnSX('PTIGLT+LUj/tdZBJeaZ[*oXXm<2R+5@<B
%X1,RuB-'HT!<^V+5?+6iahU99]XkQ$*m.TAoeUq4^AQ2tNL,:rER3fjY_T%!g/d25Or?J*\PM#XUQIL"&Ws0W)'6D#o#=5N`h'7q
%#YjXW?mcnkVA#8]a(hi-18R2[V8&(T+t7`;-ub1,>G&Ag=HIY#qR*DePk$lHF&0]s8b/3-9Nl!r*GE>]+6uN_\n`-FA0aBN<NF\<
%L2rY_mT`24gDkkZ-1\itJhrR(mQMDm4Ho!qoEc=_nb@eu1Lf3Ge,Hehs8GQV3qobO8.!CLCN!F!&XQ^fWO>7I7^'cHV/m*tC$DrG
%_1K*a@qkHr\ZtcYH4VAgBl%!1MA7Cr$?1X`/7ifHrX4.4Y,b4gY/WlI[RCGKlBH_O&(DDHd90(7A/lLB0,C_!O*^>V--7d.^-d7X
%*8ARD09'h(%Uer^g8GpfPY(L!1O$I#'hs!5U1K^3\gkjkFP3O-91$q@:+c(LD,9gl%CVNL[7RQ]\nmbJ4cK]uh'F>pfiO*YlY6kJ
%/.J$r*jY21e'Rh:0@GttFZ:-\JK[/!b(ZropSW=?,\lY^;u6KHoe&1Ke'YX"8M[fr[qLaaos/F2j2!bK%4[52WU)W^K;tMVnU6%1
%/R9*F@k,)o=.ZidWOTcMT42;[b&(R-,.Q8u"Z;.o%jFWHhN_tTfG+SUR(T1Pl8tkQiS^+FS(e-Ia&!2h$IB6^Rf>C,hmr,MFc_IF
%0)$Qbc]j/JFPHe*`M1iieCbtYAUs0KF]1Su$-T`?%+bN1dU:Ucl2,80(NXYcHp:^j3/5.3Kt?BE>jaRN[B\ms%oNck4kM\H3!RL+
%QH$?t@Er"?%[22RNF^IdP"eTA[m!oMV<qEs5Ln/PD;Ut+hk03'/1haKmn`T_h9^>Tq(Oe!,/hC;@G8QMfT/_P2*XMtm.U;1Pn\Qk
%`El-@=&SCe='eJ'=&SCM'RM.F?:hD';XBY_HR6X;8[1Kp*q:@U7_KMF*)4WR"V0sCa'6=6UQcHp,I)?gL>CPl)!Ra\@7<kDEI5_%
%SAeHq*^]3+Ir4<Vhf4ntpKg9kT0I"dn0$(sZT]*ASP!_<%WM9H?ZP4r*dmJ<bPtRLFX:C$Z\-lri!mcekE-cI_'?tdi";%&J0XJO
%,'G(j\=jE(%,ohDgA>Cd]:V&M\/,F_Vq36h9\k&QM`3GFb?]hDMsl!_L@@A#'r7Pq%,l%Znj=W2n!bJjn&Z-4+:Vh8n2t.L@qH!B
%5_cm)L:\U`a"i<\^%LnLL@gS6T:3)n=4_;J@<`&fkR#+po_#r-h8U<"\LfOjN\IuV6l;LW4*ZDm-J?4Ybmn'dK0M!aZ5]6h=eBCZ
%QkaB>M,UQNFL&Rh/U]=3qUqjVHd19C")+(1gR/b@psntC4[I1RmFMG4@,mCBMjRm2RS%PqFuF\34V:E>gn?4Km^hqh*sjJB5165D
%_u/+7i.XAPDOQ$F=(=-^BDB`mK0,Me7(&ise*0CCkZY^H[)n1/f?pDYV.MR$,c-]V0L%D'Tt['gYPVc!_NMjf26_I@JX\O)95WGf
%k@\oD0#s`^H6ACZ#U<n#DlhOXZt[2(S.dmn[52>nm'5m+16L;pUe1>jD?!r87,t_Eg9nA,@u'%jI4!R17+u)GM1r&jNn:X*nlniU
%=rXre*&C2#3Ot-Tg.e2\KBdX4)ABcC$'-r<n$r#oa.[];2JH4<oF"8OrhLt^43'#!Hl-c17nMNZAMR(M+E3js(]o/eAK9Wt=*iCG
%&;TLtC;2)9ikneqSDHh$CEBpQ_T'"[YK-DY$9014TtMt[f"p&g7j,k]6^&/,PBG.o$VRN(YaEr%o'V.h.b5?L-e9o^nr!ZQ`oc4<
%g4)e&@9kMgf#o\1)#MI5bl4;cOk9urX'66(+5j\JB6gqVjh@:."Tbt.X,guhZsO?b#`_D!1KuWS-VYn3%7F<+0p<9uAB-gg;3J-g
%#j/nu?)s)$Z@05ShKS#3W+agFIF^7R4KiA=S^m/No$<l>[YVD\-T&NNY$.;HD*kZA28)nWe4<J4"-'Wpg7i$Q-=J6>.C4-?Ri\P&
%B2.bsiuN*AE4bkp0D,4d:!](Mg!Q&JCLikt8%Vf/R#:.OGTY_ODd@)DkI,O+h;7e+CY%"<28)AT8t"O%T$C$EV!M9!]Nj4!AkhYr
%j5QO)p>MonO:A6aT5Ms/asO6VR,1+XU$logh/W;!`kcdX2Rtr\WI-:CLIkG!X8MSl:'TuCi`(8IR#VEF^(8[Gc&"2o)TV=/V'[:"
%3a:=A8O(Fs"e0%p$I]NRLTRF-bYObcptu+[#/,K^]\f>,e9-30mdf`.J"D/'dc%8.Y;P7gf;P<?^h]da=m9m+3h2HFB;NLKl#9Za
%S2K64%frkhl#<*N<jVfaII5s)9k('2,SHH--:g%K0YtYk4_=h6`a=eS-.m`R;H%K!10V`s2QRi;a<phI'>%[d">)@X9iSp`J>1_a
%AqtmJUi&e"+l!=+o&AN,@*4472hLi4,C%V?b02=Rfj)Ht_l*1&?ta8;HI7SNRZ&1)S-nZEVuid.&bO/@--]6?_4?^aTV]$dDU8[B
%`i#M=bIW(\qI$08/Cu&)kC(n3TH'Ism-Nd?R#&&?K2EhkgtC=>J$.WLlGM,J;qJjU)T<%LZFd^7&SlCV#_DSD5ir_Kb)k1k$/KD%
%:Q04F)BP2Hh'DGQR+;)<lt"Ts]^gsa=%90CcTZ0+UnG=.AE72WM7Y$<:0+//X"Dnt@&Qrs<ha^/0Ajq"eMn)tD@(dK3<*HOp*:s]
%EnNoG&L>RIc_(KVLNmEG%UM:X#f@+9F00;S*+H1i4]M`I%pF(/8mnL:nR]f5[eX$?bqMp\BHkHU2?EGCYs%KecT]iT_Dh+0"0<H8
%90VZ#/F?Bc7GX324]skhe/<Q+Ym;UVX/`#o0>$_3"W+'!mo8.a\lF,;?5=-g%(Y%\k%G[FG+FYho7_NoJLHL;BgTL"Lta<NLhF?G
%#j0jT7eA"7qnE_(^S;k1d$I^.64!or?'2Rk<aS?7L*ho,6hPl;ol^kWLYRWbUIY_t"C\Q#]LC[3@7fk8TFS[e]D!S>Q@l,37U`k&
%PWM`j*&#css#b)PGc7lqk[[r.XM-1dW3T@GqW_Y\_5O4S#a/XI)5HMqb=UO^;OFJ6Mje,2K,BZ4l.#hnE)sSWFDIC0nC[0pL_$3&
%:$Qa3-2o(6d$>@/o]=qjYq7?m?u-@=("\e9\uc0JhCrg282.L7D&Z:%S"lc8au,rZIMd`UjK:\1hOMlj($e(lXT-iDpFFb.6N&Fa
%s"f?),s,iGocMFerhC@LJ$_T4^/;+G%e5;r<R5.K;.hO6KD:34/[T`JI=E`?^$qd?rcC*;09]iYiht,tP<f%p3Q,hP6i>o<6N!fK
%mIr;2&8KP)YU%j5iobPqAVko0TZ)'%N"dTMs3pH6@e"m*CkQ5-c1!7%ruM`d\I7CU/&]1hr#Zp<<u(LrAp6)No93!a:RVFJ!6&Uk
%VG2U9Q,\5qiX#(0rp+RR%B5F6l;mfV*f,<ak"Rm7Cd+)<n2jH/cO]jOfmD&S<6jZHpj&Frb5VI9#U6LdTI:gX<#"\AJOPYM-1/\?
%DguB]hH^mbi1tcrnkG9gZHV0JqTN62N"UgJ[8i3^^2/H8r4'*oT9`J741Tu(7Wj##0#nA+bKHW*F>EcWU0-(Qb2@s+2F;t</7Mr:
%\eETtFSn$%KU0uq+k4(a(pd/R1sM`CrM#[A`N4%4DLem]Af4`;Of%r&?.5lS^8T,]>@_(G/43+np]qX3Ed<j,#Y^o.flq"K&t;*l
%"3Z$,ibGTCll)D1d\bGt.TEWD^s]+RSpjL[M@<G]U+fp//6J-C]B.O'/[LD;r)[K@abVno=cU$J[Y1[InmN>*ZdsdddFl%5=gp!;
%pHRCIe_+F]ZLc7'#%CqT/R*G)G9+;ogO(.(M%V0f.k-p0A$9cu:BK.I"PrW@mI*WVJF'.`R^5u5^mIp)0)Z$gW]TC+H$PkYZp.GS
%.F#6UJ1e);N.SMaW34pWcLTDN:/m_`cB\X\-Cd+%S/p8s%'!RkD9nT5<9qtIeIo)^3;YA&pod@>b4tkqXPYN;>J2c`(_0bhatpWd
%r:n1_JDP#,?)]W2^X&tL0Rt6p#UJa7Wp*(a-_mR%eE@cgk0S05XII,cWg=e#2JmOs/Pra*AufMYXh\bJ*mlb\7m*.%Kh"@o"^MOR
%bglck>ZPFEYj<732P<OB@uOJiW:VIFk,6h4NDVJMoL(5e!GZ80oG8YJMbt[)h,p?-L_ooKrL'*(DY]ZLBE-t=pEKP$m[X.^4-upf
%UaPJ4p;kaQ:B19X4YLE.;3QtA(Ir,"+KRA`hnq<4HNuU94T;`uNdgmLHID-ZgnS5T$j3Jh;/=W@!>oQm*:uYF^sbU2&P[l.r5j&<
%7akBTS83748Q"ksdqJD:X9\n5R<#XVln5GA*b2+kX/1bPX6/iMhlBOVj0-UXU@UcG`c1iUTBco.^<bn_-Ga\%&%E!F3@kq#>+f)o
%N1<_s[.,);^`K(\V)@\fCOqrBS.Eg'@DC&8i\k=4W;cS?XS"l5f(#ld9St3ZBgE7d5Ci$h%8QWR/.3??"']'"%;<[3,G%p,NOjD`
%Zf_WsK>o7k-nT$3]NgW+.*<`<VbdQ0URS%E'd:<Md&.Q(HfS^3>PN0,r+aUdr?2K.Wr<F1B:#cG/+/@.@!6l<i/)u"?o1b/Z\.JO
%1h#CZjH[IXNo>j0<mMbF5$,jn"1)&NSbM?u%/peE+FQe3d@b"Ib'qXE9Pn#R_\W%Q1X/"Pc?A`':lDC/AH/C4rHbpCSqi]U1FkZ\
%EffQOM^r=N.;q\TKdh4b&Qr='fnIV3/m;"Sq0MPRB4;1rd]%W#jF+lBJqc3BF81_QNBKNDO15)Jd6nD#JWVej6tF-O1@CM!ZI%LJ
%qhqHPV^fm]7Uoth4lFC>5:afAV_]LJ\3Gq>^R0r0i_0_YICPdMo\Cu_[@+_c(l`7LOq$Z!>2>i?>nWLuhK\N!,4LXK"i>Ir$9Ybt
%M>o2<DD2I.55Cgcs(A?Tgnl4YIuA(APLL@?efU<pP:3pZRG"4VhKcf[_uLaJ$Gj2g_82kem$N59(8N#qE+$QlIrUGRk3cL,FiO!e
%jUCfH`q[^pK+HZjmQZI[jL+1NV`KJ18.)DI2M(m?fDdKL2:TbI@b)kc)"s,]=HN0B]G]7Ks!;%OIe+S0:SdOjD#$/fMa*HHq6MB5
%?X$uV*XOlVlSMiAi"EXLces#(pE*AOIifkR1V85DS_udM";q;E>utT3B./RL$N,OBrUZ30?\""5KA$[-k&.54?tS#Sr0S>YYL<8#
%8c-h,dV>;j;+akdGZD4^[tqhCQ:!p?.X5#7IUQG^3,NC!0$+%rmf1YLrVoD`<i)"qG]6!8XUhUUGjcr!2A_K8;5]Tn3q,80r$B#T
%YKjs6G]`es*:,mP#Q(,3s2V/0s73@C:R[90rl`(U?Y9dOU#Hs<KhN[m8c!oLMu8p!r<=hr8:Pcfr?$k4Oo$e#rC<&8(%CqNSlB?3
%HHo4V.)+;tcefSQM3>fcc1%/)s'!g>!\kY^WK*pO$;hgU.PsRjjTR7h&&dN\@S2,Nkk75/Lnr05D($$-&^LO<>lbMRP*qBP!\`Sb
%[>7/Y"<_%7qLGcs,5t6^+tKCBVfM:pHmbU6fkdDP]W)N("Aos,-2<T$-2:;Y8^f)SVpOT7)+$`ODK`m4-1KD>IS^2-7U:TV3?nJr
%0V[h>77r/h?Y3sGi)R@e#k5\#GTmhoI?auA&Yf8mkkL@sk._LdROTe_E+PWY>66fhe?!FX/;:`iU&IZ-q?mq3i]el@qBn"Lp=F&F
%^OR%%q*/3\CNojkp^^kg^P*?8X*k[tL6[7!GKG>CiM*RG!T:tn1Oa?LK]Q6Yd$Y)k<]E=-mAI'(bk5-5!;Dff":OD:gUfI<TUj(Y
%F.dSffj<KW$>oHU[Z]#ma((<-Uf@;YOTur_7rY)PKSA1<&::`:If,m=>D/uk9sZ]8mFU6;jIMj>S$j<aF]$L"_BV8sFdZ$N0$UuV
%"fLi.3>W95OWh1+fU3DNoUX\"i!"U2"[u6uD;+2IdJV?JHVR/#f/T<]\:P.g^GArhI/6oS>$TNE$E_/?eRW+"lcE-JP7gW9601+\
%D%BH&;0>@g.Xu3GRD#la<8eQdk6ZK[E<Y?#(K?B1#)<H&-l.p[9u0O14G7A\:[U716X[%9H!U('j.bs5`?fee7S_=`rZjd0=:YI^
%NJuk+r9+o>V;pAYFMen&Is;8%6G$Y,k)bYa8)rX(ihE3Jla05M8(t9RH+$[g)`H(]l"ktPbK"aCVEq:9d*uVDQqB`r'TNH[I:**Y
%?eTi[GaeT<8K8rcIm]]qCQP9daV<cMWW4$X)Um?(_>(DnT!0Gq]Eimm2^[S[E58H_XA9(W*rusU$_kFP]%%W%blkq6LoCZP:1F?7
%:F,Rh;i5@Z.SKJS"IZO+Ag'oJEJU7Aie\:m_2Z&Y5T!h@5^,"6N/_qAPLr^&:tA)UTSeqULMJ.FkGmS3'[\5bMBZ4;e:I(j6jcGS
%.'P6'Pd2/r@#22DP_g/P-P]^ZW>I&sVi$FMXm<D>S-[2Gh8jc@.B%LHd;Fk3-Qse#.4')+0/8hBEATSHJkQEl"GOaOGfdYY<4[Mk
%09uV3R;!9%DiW">0i8[sRtB9rddbI-;@bZWSV],I[TX:iB:_6SC.j1FOm)(H_OqDC_87=,iAc#c9)1S/"_F'feZ!<$Wut8skk#i6
%)I@W%.:/E]@Aim&6P<m;*1J'EKhPDkNMKns'SVaJY,I!di:9<B_ndko@%,d`rLia^M<tV3kmT'iif2)?6&Fh/d'+_a$I:IU%Xma'
%.F>@go9AUhOa766nu=rSPCS`UW?j\+MQPW2+^/Rt9.EI\:n-A\O=:FXZG`P3QJ'o4NDp/p5sXCg85gOd))BVo[TIJs[6PiSi0:U3
%/s.SLFXkiBa,<W,iOu1I2PZs^m3a\n3>/7DHCC1t&gq/fQE29Z7okc)bQ3\kA8=7:^9fXL<b!hkHlV=P]6"E'?(kJH@)-1/)!c`J
%_)=0JlJ1$&j)fC%@&$YE.oK[71lUqn(-gP-4,/CP@a)R?GHX&N6R9MSr7!h9eu<7I'm6(0;jT(QV:p<lkkKfA;u<F*95>dm0#["C
%9M/OkWmZQ2i*]0#!^Se$U5\-#IZ^_Le2@BUC@ZV!5B+4!d]&BtW`4_/NJ=KQJ-&&fW,T[GNg[4JJ2h'$n8#UCk)drYX'rZSS@'`l
%V7)8[E[3blJ=@l03h"EiOMI*jeZOWO-HT;!(KM9*"X"9dKA*/d0$!RZ+W^OM,^UiR9eA1&J-]:$3L]5:r.m%*I6(/r4U0$fD>g>o
%bGSHeOI-6h#uI5LDHT86kK.IQ_R*`??lRF&<>)89%2aXY*1..1`4(_mBNo;roZS.*Z<])".I+R_:=`(.9Qh#l[4X.6QW;ST"DG=s
%53(g>LV-8$JBL@^JuQ]O.U$"&'R3oF$TZMh:hL"RkJjffW*hTVU0(;Z[`G%tFPA*N6KQnrBT8A"V\8=so=!"c9P%E;'95N0e@);Y
%CQ[\gms:?;mW.Y1X[15JSnTNae4i`8mn&/l$DA[8W)kjcYgQ4OV9'8M[9_,Sd-/02.iY!/cC4U,K*b:]QYM^@L4:)2&`3))/C&<7
%i0KZS?^#;Y`&&`\m+[gBl@.clA+1X$15_eO$hb''c!Ge&*a$lR\eOouQu-e<Af@:gkI@?22%h^^i8\"'(Q>!=fm0ekNq.dO05,h&
%S\ptT/s3If@iEO6586Eh$'KujS[h9:mfL$/aQ8"%bk*[jDFt$<1^;ok#PH6o-RkRN9EjUQd3N7jS0[*:<Lo]!gq2GYY;3Qln_isb
%"GHsl%sF$fU&ZK2)1q-d$aB=;ao$d.%8f@oR^_9slm,G=o7U_sg^-)!0!^5@SpMlPB)T!jCNSrSeGo*hWo>p83f"tqS3VruAci4*
%i=1"@\7LY8rkW>M-&mZ\PRDK:Y,\;UAACC>_D2?-;UQ-D&I'QEc]%IKJ"nH\C4$<*GZI0GfHRHh^d0Zmgb=(oo+-$!!gtKp7cEeb
%RtAa)Ih,L,1Ye]Uo#sc.B9EY&3.GP"^F[[B'HDS_#[L8u>uLbY'4.5&*f@9<2YUUgWA6Ddr&]&$jFQ\416+IjLhmXT8A(m_P_&GH
%jq`u1S\c*9HReBNUm%>M]>Ic8NZt\2]81?cB`>hfa@O7k,86qO1+3X:3cpf^O;&I$=q<5S3;\1Qlm?@B6;#/Q;bDZm7SZ(a19)h.
%=O2"UA36_fVUsS4Jgq=]&n*!RPU,/u1M6fN=\Vu%D<pT!9%MB?LKda4<t\aj.)sHS=T[cRS1r/Y$1_>E^q"u+-G$Uk"%4&SJ>LaP
%KBM=[^?m8I@V[fl8S9[.o!7cKduU-)XI;<!q)R?RqYHaAB[)!C".T/eE$tL$f`0W'1`OqkWS&AgM%*_!l6\Za:.D?(]eUoZ[+p6'
%\3D*$a7tpbTFBl)a#iEIgC9EA@p!LN5@*#V%:dME/9GP$2/'0Pc5:&DDF:c3llsB9r&4Xo:Q&la](s>24\t"&DPm^C_T$g_CfOmV
%p.^??^kqTj2Y/<hi[S#F[Q=)Tfs=<(`t[mlpt'b:ULV*s)nl/[$qGZIrTWaU58fh;[0krPd2)t+s."LGUW5!tqenf$YMV.f_,@1<
%CRb")ct!sKr@TF!D>!0J@"+Y<!md+UnJTS`NJY6)s-ZRNa-"4l8'6.VB]4rICIuN,Pl@:2!\/oXA2N^us$F-_?-Mlo<+#!iok0+m
%^PUG>;AP7O$s[..)[^Vq5,\B#EWZF?hT#0U''3!NkO7<@Ih-!D_CM\e27-HSqo#ug@ib+:EnWael?#L=2;PBthhD&q'JZ?A>1]e=
%2,3C;i77G*MgcHU$q%6=i?_6'3Q#4URbY+(bImJ'/h+Z[=oGXt.f)nPjkN>sja=*,0mHY7E1[YF&D4-C^!DtX)lJ:pA[t#Cf$"ir
%n,1WKkJ&9Mj;,D"6/^B4^6rJM2_aJN.V.+>LsM@#$hb)NQa6ElJ(QWmd^1f/DmVRfdaGIcFr10;jV54i8u(!&`U@N:qjm_*/QBtq
%pb$fD>H-ngS]NS="XUGq41L2u0/Hj!8$cDWl\0Gl2!cGCY;OR#FoEP**=Vg`6ZY)!rNtEDB?G]?Et%haoZoRuXSZl*g&9d';dX7:
%4sias2."VNFNT%KF'J$ro`sMX\+SLEq-$kan&>f@BmB[7/BY&Dnm)[GU)NEds/lPaCAe!8N2(0KNOgi&re/,OIs<Z]]!]8]Q:/;V
%1T:`i]VJ/gW(<@7Pk;1E8.J?=4W+a-"WaKdeM5<pV*DJ5%:]%m,pifNYFQUDo::?\kZjR/8S;SkR5A7i@lJVn^r*-SDb[g7968VO
%9W[h+c;]u2T(b3;SA;:k!SnhT2LFT5;Z]$pN]jP!'OIA;*`^QMVrjrB\MQccF(fR+WunC"aN[[ET8X#=nZ#3aY6f[s?d\)N9oM$[
%;sFl?".Kqpg0V1PFa_VobW?JG2/L5\.e`'17_LumY\T3OFp?$&YL`.NkDP<(I93M3/9m>AESm1ZP9Q3%EVfJmh.$l6e\3c>HYR5e
%4hTs;m@%Na(F2<D]!1*13d+qC]AHGllJfEU,B+0[s0CRQmDK(dU!Xeg%$6P(YL#nBmMSa(jSk/^n$*&Ae*cmEm65L7gT^-CIH;$@
%1K%hoX*Y&j!;Lojl:sC[/DDcA]*6u(N(n!1Uc$>@HV^J0=GB&.Sr3?efTWGH`^[AtnkO/UWT];kk398#qoK\?VpfiI>0brKd[eqh
%[n%jJR=-,)Q=:qGUofmCnlHI/)DKcXTi^PR^n&&"/_SjReHNc.bpX,QM-s,);Jl%fF[3$4A'DB,2)=>fIkgKmi)`^sW3qcE^%tfo
%RN"#QnA?Kd`n5?Ie.t"1/p,S-eb_Rl<YrF6[=3+RptYbt%':<Tdipp*UQ8F7&PI3!7)+MIL7c6QfWr(pSWUt;4o2X0oZ6"3&"%T6
%hcNa].r*sD;>@gfb.kE[3)@#eEVU@JK\7u;T9/l`m.78,Y,J5s^1n-a\8SD0;#]53VL?9p/#nGaR<h:RBe#J,:lG4!GZ<gqb#Pi]
%"E/4<nd?h/R1+TbdCN#PUs(0mig<K=D(8t:0F]TL)2+d-C!eA]8p>"dAs"iQYWOUSk&>EZ%`^9#c=3n8>K&?10[$V7Nl$rS8H#/!
%K4;UX[_6I8l_k?N<51A87`MRX:$$GVHq>.-mU5s.g?`oNldVWGfe]U:IS''%jp"mDO5.p-9Bhc2(L'+l[Xm[jijG3&?`>Ya;,pWS
%jj+$u>$$bH7C6G0o-Ii-^p-P00K&IDd:Xsnmlnti_.p9fPS_Qr<H<!J:-!O>0IJ2j>TpbE_/#t5S3imX0UbV]HC-dcEr156pb7=$
%jq9h!0ZJ25P;sW@[aIr&XkQ\fcME-(XZT&D-ZaitnXQN9KOEa.G$7&X1SVKCltHUl47s32jbL7-L"rKQZ0)Q/N$0CX?/XBcY4dk3
%\E/;#(^h&"_L[Z^]=#=jc,!EeqAYfDboV=^qZXmaln@C5!5,*Y"hZXF*FtC]`W/iiZ+oZ(jnmLj.`E3cPNF6"c7+tq)F(FQaN/bp
%cDp3Ljc!NJfcQOVXX/G6>[":HG)hM9&?10bSdLkt]j@5GF3:5Km%@XO.IA`b_2Uk8oiK%]_Tp/5GSOf[!nKu(+Mo3Pr`Zn&qu]$l
%l.\=<cWPC=dG8)<8C;AN-_N:EN2k8+HnCL*GF]XA41.7i*r?,8ei/u6<4&FgX%)4uq<9AlWULX2*-Uu8/7?ca0mLM:+a`([N7.d?
%_@de\;]2Z;&S2$4Vcjf1IB#0Z([oJ3b2;%nX0tK9hjc]Hdt4Gb+_TLQ_W;1<B!hp,3Db,L;12+ACN[dV\lkJ6RYe+ck3&',.F73D
%m`TX9WLDi&JUajfj^:lb8'KO+[DoA@Vs'l[kP<q6K')U&J6O.p"Npm9YF-Z3^6AcOgqnoN@Wn7+dHSM5oY"Uk<*SCcJ[5008Jl*N
%b7EI@m77u:?GFmDYcT$HYPjCM?";M.I4EPr(sZshPE?0q8Odm[2Lh`+)tn,\S[-Y@;D?o]IX>K$.1U"hYf3/oS?%I3p<GQM],"/V
%CiJUL;9(;IQ_Ssdgq)0(L2_'c>@VP\#A%8;'j[H30jKS8!N:rXYL-_.HYllGoS7@IT9_<gARI+mYaW>/-oS(73ji>Hl*.^Oj]G0`
%hImdlZ-^#Bp+Ej.3uiet2C$HmXeF+(2K1=D$d/lXXkcZDS#i*Sem$JF1P5JRA0=F[gOg9oKUJ"]\OItZ]<"hA)!T=*a'[01(boU.
%U,ba@<nW?$V1i^`*Y]]+H@</"#&t?[V4':6<<nSZ/`SM&:U<ihF]g"5,^$QK?;tS@h+`=r2+G&I2)T^?8A-er2Yo&D[#/dO>/1*:
%qN/JM1:!?$-YMtVX"?/29?OJq\9L]ujbTSPMoQ)KEU1GpSO/`*4!V:pCf$"gCo`XEnI\LE[BI/Yc3<Tn92U"_NjTY/N7gSe]=q1\
%!W.)"JQo6/0=X\7!Bkbk)gu4."`')Ee^8b6_d-k2mat&W=a#u'Mkq)F>NL/e:>XER#G9HKT,Ja"O``^f<h0o0Sf>!SV=UP2ds`$r
%Z.fSU6!qCU1!.%JH(\O=ak12d\cD@-p:9Ujrp%T6!Oos"qEY=*%2:ft(RB-jN)PFn+g.at>b=Z%4G5B[hb'fA[[q<>`o`QN.N`8f
%*0&</N9Qknf2e[dYs[.B\7s6l7a;`;(2``1EPAKe>5)+QIK`2cD-nHU`g`?[YRod.i\dh*Fq)1L_kdn\2`.TH8$a+M8NEQtlanM:
%)=LPI%`:f[49AQ(d]9K"1TTFLiVSrBkS][Nq\djq%R7*%+QqHtM:A995`,K55$:m[emDEdA1kdXJDkDMp7N*j^g'0FZ/*F*9quS9
%bnVgRp_m_"kJPWV)9c]#W7+2SL7a&db$Q\LqR.fT>ZB'jj2Nl0q3$=\ft!hjVmXb!KG'[+1hKZ"?`K5@Z/KdKHd8?Ljp@2oBoadd
%`dJT4]2B0Gq%?@K/4u;>'*^#PY\qI2Q!TWX=d:pJK\WOshs&c4.TXM9BLA[J!akigG'he_:.s=]K$-7rR5ipZMP?khCB3lmYJ#U%
%gs]Fe:(2F(A";Y9j*nB9nZ\K%f%F\iZs&dgMPaQ8Tp"MZTqKLF+BG&9/DfrD^"J6K3_mA5mg]iG9_A6RhocmA_g&3:3;"$*]ecj9
%Gf+h*da;VMG+KQ:Xk`1$Dqb$CUm^i;MhBo9qp"F9^1P%7Sa?li2fQD1c"_8RHiDdl+6^]p,_d*=*Zd4ppp6,_TADWuY]TtrD.r`E
%_T]=uq3tJO:0^#3"Q<d9RsnsVCP?9r\OSk_U:,9%5L3Kkb'bjr5ATmIWEk;^GR/+nj82EMo\P+r?lXYsTUYk&,e4:IG-KK9AU^\.
%-Gn7")-5(\>GFe)J'q0T9]RrkJql$UDf]W6pjkZ5n7O`XHLMN^#6XtRjcn,n%d>@1N=KGsjR0B?0&:c0s/+R%K4_PqiAP`RR7T.X
%((YW-<&@iP<^&uW\SQ"N!.5$CZIR4P6`.,:[$<Y>LsL`3_P[[a'*U]oT=67[$KA%HfmJTqYLi^6Dnl)QS&9oR*4Odh9).g\aEkb'
%BX<$sZ=sBjnUEr?,iMb@,2l;oScN,82huo(hZi($oKkgE%e*tqlLr=U^tUHQn4!gXFT)>[$CB3BX2HioMt3Pg5+Y4<I-U/!13m"e
%oV\ulT0sn27,C,!6^`RM4R;Inmc7<-b%n!tX7%B!mTM%U7noI97t/@A>puZKgE4OTs)!qRcP=_?jeR'jDT.ZGU$QKU:OF/5e53T@
%4&a)B8aX"EU@$tSDs1Rk<%TZoNap3%DPEJ8^")Yq)R]He&BU<76T'5JaJBNSZhJY8U_/d>mK7qr2kJL3_W^2G>NL#Uaceen"6fP%
%8qlqrLJ4CJfS8NdSO>tAFl][)W^]Jf0fc<MpeY1E6:';73/5/*rFC35D2(qkToi.A_f.#dhQA35E+C3B#X=37eEQ564CKh!r^P-0
%S(AJ;_d4G[IGTt[dC\#"\WMDfLM<sdn9Bm:h67/#gj.WC#1%0O]K7irLR=W0(Q)>C)gK5,^0I>7EPEq]iD(dU$GL6L.Z@'hom8Xq
%:GK%k2fn-;'LGggQ3pOVO.XTD"ktaamgU7[*k]=*\aS?7fo()B(E4glme-1Z2uK%kpI;1ATJu_uML2mOl,(W)<7<Ao`g^:SEi""l
%s8K9)g%@LT<W6RneIndS=3jH.hUn+fft1=d+dou_s,H;,3&j+r*aZnE]SR[OntokX)/oAfpYsHoLR[.*kp,.Mg)<)"$g.VapEVjm
%HAfeoMtcQl'_I^h9#5jO9t%^r_PuV0ibks4f9>q<mqmP5lb.e)2mJjmgFLhOI*m63^/j<#DtWt4m&f.T2SG+H6.+HR)e3g@cQ.;C
%Z+CNbs#cJ=Iai7!]]3;VBZ"%.-6'Zbl?'q9o(b3Gc.f:Y;#6:.#`lE#2n2drDaWS]]?nfWr#RrVd*B'%)gejHj2SpDZ+lD<hL049
%S!W5rh"-B0;0XR42N!Pck8WUW;eb9tF4&aP)IHQ(mPnnD1"k74GU[uH2QC'H]!5<J2Hj2/5h@r>g)-']!d6BV^/B=tjl*)_0-)s!
%_,g6K(G74.5$knNI'R)fq6[:Zo'O3[2118(pNp90m.f@[<9A58i_;N&.m730^<1dbm(;im[s_'K@)HWAN1nRF.sHF1_T=l]j6L!J
%S%b"Lq6mhRIb<<.hG(b%L7\"]9lBF\I8fiGFZ9!6Q]KCDPC[p6S`.%:O2PRRo/(P6DdMjligVlh=FTirH<o5]@_RWB`p$'9Zi)qR
%C_"J\aHh$g&r1A5r3p=XXjCVUEJm%;H<\NO);<e/o,heF\41`ohn3W?SY!cP>@f[TfXffShekT$g)jPlpQi,Xrpj7H)Dl27^UJ)O
%rp=n-_B8;l#C]8#f^m-Ur.@5]8d:q-IpTZLnXn[HHiAnP2t"GqaB/<Ef96&MVYoB@ASr^k8N:t$m2t/;\&2hMG$DP,MJV`elof6a
%:AWC^iOiFQ/j16qDVqf&KC.hno5qU<gkE2K`PTgl\=GTID7G!*pBDfNrAL>48h:O'f>`AXDXTK&$9Bq=l';3ua%)m?W#lP-JPM)$
%!oqeP7W:G#eq2:kW"`3h`Im+-o-b6qIq2$b;P[S/hB&S5K!0Uk8[*>6_/=iH*DPDDb'\kc,5qi)Nq/G1fJu'Wg,hgaVR^d,mi+?4
%IIh^hS>!uoG3eC$BA@u^#R,j!:E`$i^P)<@2QEIp/(Y&tm:JDQS($,#aOh>HL#,V588,YUWBrPUJJV[.=3)-%G5&oQLY_;Ff@iBk
%NI8?^:F1"ip*sZu]@HULGb\>SLVm=$Ts,FC-c='4O.5W1VpQ#^bE$--p$q0$gl>Vt_iqQV/eUc>S443B[1c+g#M;c3j>q5n\M!;g
%7Z<P3UIaRXf84AbMu1okj^g<LeU;Hp4ZRhKT#\i[o`".N3=>+$7mBVl<A"hRmW7BQYK\*17ZKPOQ[IT]>NU[@?ALAgK9#c06D+V?
%nGHECb/_]A-=8I:;uWf#$@J+7p\EZCkuua9BI*g*^)[grqUpmJP((+YDKd:MTl-/riM5Vk(5&#q:K4.JX-f2[YJcTm3Yn@[c%Pju
%I++mNRr](NOeUlX8;cl:Id-V[Zm"8nClTh5DK@(_`6FDaC@@*mrC5V)oBGn5HkedTb-g^X-\(LNW63C\l;5n'f-;T.MO'OMAbeco
%Foi]G6bi5n4-,Q!lG7cV/R8;NjArrX&DClIf\]OrFYl"Sk;V,odEt3@8Z*j$ra>1gCRla-Fl.I2cis$:Uo4.B"8sFugt,oX9osa>
%IlFgb]"<d;EZ8=]?\eI0S_5"$>*X=:]%Ph#l1F_GF?[1#a_[%3.[d3o?N'#2HZ*_>2u?jq-grG2n#cOdZW>^;[)_,(8)sS+*^750
%`t*@Y_>'GGXMnPL2c&Fc@p(qHc(>CTigK)\_:cq*iS`hs'Ns@%cl2Zi_r5_7nDJ-XFEfttQ4Ao0DWYmt0_@d*4<I9C<H1)t%W$D(
%oko,<oKGLIPG7To8nRC5DonKXRmussgM!ImpY5-crF42LSIE#:l8b.(V$=h@#eEStc?@-J;CET^bN&,4\l$^ZB/XZUoo+3G2Td#3
%7j=A!Rq=E3GWdWkU],mH2PodDZWE4EA@Anp]ut9M]T7)[dAEKs1YZ!AlM5[hpVqgT]H#Loo7c*?G*@F0Wh&9:6G_UmVk9cG18SFV
%kdHmB39opRh?pl[PCl1W(jmuA4k.o6G<J/Q%Sh\`irdaH3\FL&:WL^qoACm5r\-Bih`kJ?>agBWb-NrX#.3>p1&`BT7=rMLG&jM5
%]RG)i%J&BAdt:[NI9O0r$)d6k4muNEI;>E#Q0cEANU/_glg?uLc6K6t^%9H(-_*D;9Qn`HZL.%Bcnp-H_VsONoJ1k:?[/1]P7&to
%hmbYt"'a-s73eT20*BT7GBkUNX-_FAo^K/5G'.&MRf9@.5'g?`5G&/c(%9.PW1m9%pFE(Bi4SV=DH*f_C=g2#eAFlElFrdu\/JEA
%g=Pn:SA.7)*h6Oqr7Uh6@&bbD2`Jjf`mr>I[^C*2C`Hu(Q(t8Og[e6Ln+Nl3>.Y0UDQ7oKVlT+=dt==LH];(d51V8+hH+l1rVLIj
%=FB$GURd/Rna6.Gr`hU2%*!)>a7NEurpd6S3-b!X7JtNWe)"6/qK-jW/jAqY*VEPj']8MmpV-1Q;Ko9M,$.k!QU64(?Y['pctcH-
%9O?12^A[p+0Wl:_L$GFQR(0jbmLuG&0e&>>WdC)/;Y@VM?)eBYWg>U1CjZ]JeB0$8U"2FW(j0EamCdsGj+d6pog@)jN]GcD`U?`;
%-bX`W&<B"iNUrXo8Yb*4Li9"1(>d?[rg1+fW:+S\(VRLo.GDIQG1siB96q$7[4\Uk&$=\k&KT>EV,StXQQJTNpVC&WhU_XrHM]ae
%<842BJ^N/s?>,nA$#auGDS$/0`.#8OI26kD^$U?ah90^-O1e_]Mt_GGaLH_I,i80_eV!gO^n(?,V=MgqTHE_G6T6+@l[etR;_U+a
%?85n!'9T3YiQI7M*sK+lqYrXEL;q)PYDICPfTW!b?7ajL9@LRnMoq>%TDt!Y-!S-OSWZ!LR#AF6/P'a^*q2']>&3R;4g+5RXh>(G
%.$&nPHmt8+Z-Rd,qS5H?cu@\UYbN9lo@':m\X's<_pkFG!Y0mSW59Qd]s38eS3j44BfSiMMpm+J<)3>(I]YWsGKih]k8q7Jlgm$3
%,ss)ANF%%qFNWcoVVRY]9Po'e&sfr7Lb)-tfL)SGNPT"&8K%SGq+ONW4Y.iKr/T'6A_G"*]k*,UG1dk^qSoUC\'1K3"B)'&r8]Se
%VJ"[@4k:gEB4UH7rjcb:4<q</gZWpEl[is;_;]Br,@cB[PP'CToKYXd&Z,j$a;n1q,?A`[iEuHqcN"g-e*hQU`l0bCf'"'%5HiUI
%ofOj]ht97T:'3YH^Lu?BL2*T`7Jj+o:WHl9I`93/5U5"MNedU'P?JV)>j,a4GJgdBf!EmKnBhA.h/>sle/ETZ]f(?&/+SBNgKXb2
%f7pEDWi]&Q,eS6$AhBd%g<(<]LW`_tm*_6_gF9;.Y<@i/HgP`on]K8h5E=/IhTWj\<h:t&<ed`ZHc1h#2RlU=Ig0X*lLI=&f;Yc1
%BfS8mq5&D;4K3opjSHR[-*iWG[Nm@R\uOZuiY`-qV&B@hTcA!i]d%3i,W#C)E?/au#6CdnNNlW#::euId;k6dXI;b-\l@WTgD9rs
%[F'>XD55'r,_'CfIY0<D7S5O4b;VDh)<8&B08H<2Bi-hp`WtSgkPh^Q1(DE<g\Nb_Y:E]A?-6R1@[j;sg\CR_1G`4k%l;<%\]ND@
%S,DF1mDci./hL=TF5-)](t#=>A@;Hd3o17lCU"/f?RVE:NdH8nipE6A_0`U;E]17dC\\Y[bJW<cbJi1J>t8PPIHo_.)ML6)k#S8=
%/9$$,W2sp:AheE_F);9@CqhU.54P#IQ<X.gQ.GH-PI4i6C5e(jYNBfr]9"j,N6<S0-P;t_\di.53T4c;(ooKaU\giJfAOWe-\T4l
%rtQo-QCCdhd$u]d2HlnWD%clceBKc8(E4^P^Kk;Oc\l8+[5H,I%t3^[@V$t-Zs;;k37h=4Pn).=&#&rkq"C;!]6c+*cbla#0]-`e
%hKn&=S9HorSSf=-dACr,PZ<+9`)Zfp<'#sQ+1G#Z_b!SIAVF'"$fZ+Ia,MkCRC?I>1U6Zofh(Q!%Ru<&M%GAY&pm(9cn9H':;%ZR
%'GLA,=\cHc#IR5NZMjKrY@@G?3`IoGXdFF,+(sH&;UTu<2qdR78'+)Cg^G2O^.Bq%D;M)F452^@9r>`I<u8<RWTjrcqVpHg=\2,d
%^[BWX0(tO^Ds*])Yu.;9b3X"?Ee/VO!Sn=$Ej$UURE!^8MQ;$3Yst`R:,g^MIKh%#r_/;)IO+Ut[r5A90^)C1q<b^':]:l0&bMs;
%gA>Kf*;9'X+E!28"M3"<"//o,-=6o(:$H5-5Ii*:6`IEJ='Q*Fb,*A)cGB1YYIR`8)/Xb9KsH\IPBG,k;*uA42IBsrkMplgZZWbu
%*ek^`a^Ws'JJ/;9p5YWPKWONG5:)K+g3,Ch5M_6th8abUAm$n/4&+9]a.mFcS@WR;2^2=a[F.nSLs2L2"6!NAePStF2M\p(<[(i%
%pYBA(FW"6o1PH(QGG(i1c_:='qEmrTqOXYAKAIA;ks3ql+^#kN)s*fLW&dJWK1ad*d-H"?j.C^sRAdCZcZqnP6gR:Y(XLS<'nL84
%l:+(6+/+>B^@ej_P<E@9e%=:7es^P*'S(gS\^8/YG#ua)^;[4/DW:P?p%Pe*U8B_UB^\&0gYG,oe?Lf_Vs+cf5l;6fR1d>HD^t?F
%kf2._8\%pZCWT324d9YK:Hl(=Z+ZQ'W`L#68"#]rA>NEJ-VKr:dptlYOTgp5e"%"!eaKiRYD3br98n./\FmBqD,'=aL.=/LmeW>@
%3Emkq6G#]@FPtoc@8t+0TptBV+1b3=\&Z%tE7hgd@])/?6mYQF%2GPoc>G&\f:V623BM@Bl>9KTiaPiRr"$aoJR#(iVmp4s#(PaF
%(2N,!WV.!PQ17>LE]fq@`o\6u?)Y63Ilm9H%!Qkc+-BTE*`\Csh96'#K4)9i>i'+oh#:'g*"I0QZP;;<7`$k=TVIlM^)Za_F8OqJ
%*/a)S,ZAqh%8.'_WbUXVmRd!I3H^c`2i]bU5H34Tl$E)a2!G'&jAR'FIPYhG)&M?-WM>>(4uWc&.j3Z:kF$^EbCmS^p1`gmf8/8T
%5EC$&>Rd9Ja8*P@<S'Tbdb,U8p'RRD,Ma9G'N1L\LQW5@'oo0_g,!7<0$*Zr&=MlA'L0;r[X3FL"J$mVgTBI1If*+4-HiU5R:n)l
%aKYpfgIFlAEnZ"9>ZV8%/ur:569"cb0)Oj?A<>X7T*[Nm'"\=a:\8J*rSb54+@56/9MPC+[Ype/j4h]!c="[um_Upb<OaW[Qd)'l
%o&Qt/_hFMX7^ic<,V#ho4C.l`n1uD%a.I&k\"@;,_IY@o'(e(r,+sI5-A[smSU5.Y!#B7o=<:Q:*AFPiIWi1uMZY.VDEu-Y2a[gi
%7ARED-Bm"L*@L$h,*gBoa\b%,T9Y'$Q=f`sdpqJiVhqNTkEq/M]cO&&WbR<k*@Yu6NN/hMdn@FOI$GEEhT`,5gjDlgq/e?B:C"]"
%I%3!nYsWt!O?RboQu\h$`/509J#6%0VPtp@<6@Yg!oM"s]$j"b@4Bc,E^-'mj`'?[Ge"o,Z,f+DBIo4+N71i89:\cr@bkFIZY^tX
%i?($:p8A6,VaP$h6/ZRPTd1QccBQQkLP6#6+Dd*BRs%/9b[Uqa]r5$/Bd4(V/C,N).dc2!R`OG%S#e<(NZk_&[Wg[QThHkW]%M;R
%AkKmlV=\&_(itplDWZbk.NuO'NRL9$<O3O!e%DPBW@=b2r,`L[fK;OJK11a.PUpXto]45SofE%cES<bQ=G&Q:E7(**P[EQ5f:'sN
%pklDgOp'GTM,.cDL!LRoF\ZJ@)[DAm\X>KlM9WJK3'3Z&ZnB%_ld_lW;ug3O1IKlK.J$GG6q23JaQtoS/3.HuZ)T[N*9!(7>o2>"
%5qHRc_E+t&imMQ=@$*@CaZ2-QD9PO-Z&lE_oK]1a<&?d`:/?fOc<OB23mn"Nr[qB/:f$eJQ]8HfE&^VtF7ph]\N]9>&j5'kN<!2Y
%(I3lu:g>'bjC2mhpG/o<,kea22jD"i4gJp/Ggkba\3,K@0ZmZ2)&hN>k1"o]%_70M?AF'n,c,=0:DeKS1>Ge%mYeWOf\S`f-t.9k
%+UT<a)m+V6WS-cY6cto=IRrmE;D2YQZ<+b4QH+\s2H5V>B&@cP$%6Ss`uLG^Bm@XD-p1HmP3;(/M*)a#lfudR#/X@3c=Z8)nj(^<
%g=9b4I6>6f*"R7"(H%;=O.H^#PFDsPTrkS*D7/u1F)u$jKLI0jVYi1.KGK^3TuHT4Jm8dI[(t6lp$0X]aYYV>j_1^e!%rEf,L)`u
%;:p+q*\DdX.R?#]BPGVf3&qb1h^6ZjRJ32;FR*4hmPVR[DrCK[n:6gW=&lr8pMk<6WS:s/\E2#bZmfO!X0mFYi1]KsM1^H)><$lK
%HFOLs?GV1ShbH*tGNif,+<IlQ22eK&:o+WV+3@6PA^kF33g>Y\"OO45_^n0;n\2u;Y*")HF8-7_]2.O]FO\.B@i?E4`WiT>l>?,<
%%9'9^Ej%,$H7"->2BZb\$Cm3E:?UBFn-0ut@Mk$PZ?F9l(R`9C-kBKCQP"iB//(GZB@/!g9Skq$qqGK"Q^W8Mg@=:1]ud=ZV0=ed
%"nm.!UCWes.itT@8dUm0?2)Q8"AJ6lOr%cmlWbc=[pMgS^@177p7tmOMC6rj1m4G+:'gT2UeSGrk`(9+nh2XSIm$5NN00<'q_SG9
%J#P.;hABj9Sl9JLm[_(2&dDUBhX,8q;pGs5pX?b\#)*G2s0K>G*2k[&&.]s$Tu1[+_sX4m-MC4&2B]qSH=n0]:R:VFGG%ZX-mYt.
%3miM7&._G;',du>02SPe2FeFT[!i$*(:ncLTT.)Bq_I*1M7otWLb#GOaIS=(`h`6uXBZWecpOnPjW5'Z%-K&*kj%tC#NjJr\UNQh
%^>YWW'jHXQXfX%li_0u*\Kl6JP4WCeP$)*?`ibGs(r%4]kCTPU?7mJ[$_`3bVk)..Y)s04[9Ia0EN8f^,a9Ki%[?!F-?<6"e"I#e
%AlY(T>VBr*'7g>)K9(I3'><3pfI5Q6UJ:@U'i@#t7[MH>/Tl@QQdP@3WUBQ_R^F#Wj@i1::W.TFpZ3eBg//b@'/nr9A12$<pRrmB
%2]o08`_lC\&\H;uRpu5`L%os/o?_0ipNQ(j,AQ"Fc`NpH!5ePO%;:"$QSAa.7Ii/I?W$A;9ZW`':,f'KX4NnO"YAQiB(grE4_5Os
%$mpe:]D^2M;GJJZZF*RX39N_5g!$q-2J?0?6QJVAY*5,[!p*8iIieT<+>F;jP@Wo5q@m^.CCQs5bmr1Ajn1>)'TW=Q'R.?0H+_;5
%lntR0]a=ud?(ghZ(XKmadhbQY8Q)T!hBMmFor\H#18CIBg&)-=!e!3kpPuEm$c97[a5l6QcbcYVQYQTM[-s94f_Jf^DkQ]o-YJ\h
%g-AM8]BJ^2=c/*TlLjG_k9BZZ%&`!$kL-6U:0'+STB^)RN>$J">)Co-7>H]]<]6RpM,lRp[G(otT$1p>ZBG"XbTOVs\eRFM-"=D:
%6TJ+`oBEURoqCD(.^m#fpKP%\9VHW48kCtYp_3=mI9nTSgdNi7Hs"mZ*cki76+.%:!HpP%p.dN0NQdm\8Q'&N8/e"of$:WOjpkj9
%%C;,.pTPapgj275hp5>upOcVXS;g7Dpc$C,(SAGN1CQEYTAR[H8m?a6BmuSSVKVI=6gQWT4sVWn^NYED%LZ%D74Y?KnOAY?AGbQM
%(L2"AbGCCui&`7mQlXC^Ft9k^An9rPgW=7XWTogg](DHV_DG3HQUT7R(`5mL_nFl`j0h7D<k1D1-h\&T\4i.PoJll&2U#-IH[M?H
%mP_5.ifDO]>'%+L^R8+(O[n]6>r[K+,hmMNTT\N6I6=A?I3?Y+%jHgVIG./Lf=Yb,i*C&e4LsM<Y$U-9BD"s3X7+?8Gehr5T_-Rb
%Dc:Ms<-&#H.D&"!=o2Ul2g!W#cSY:S:8YVOg<tn__u3iGe(^N8l5\7q$fHVElms0*bab3i8!sl8>a3.:/Dg`o@`ce&S#SCJ0EdZ>
%'$hj7;TdQUc4l5_egFJI.0T`6:RA"^,FOb4"t$qD,\_aP;S($t\FBq<^/rR)GBS7fF0Dg2/q=(]Y98m]R]B_6-P0ehW*3&jmH(Oi
%f%^n0Knm?HT[6Euc,VVI/lOe_kI(R-ka<C]/Kq"ZV5[9ph@VkEr@V7Z9WDZ23XL:r')UWYE,dg=b+H^"o-9LBMP#UIf1nqhe5\C\
%W]m+OiTKaMNHXcI#U$tB]<Agq(K3Z);-DNU^O9A-_"o>0Dk?F-6`XcB9AJt=KhDTbakK&,$3JXKa;F%:@t#s.U]JrO-a(>H@dXP)
%+L+N;#q^:_&$7*P1Qh:k^5I7IPhge+-b-4-G9h#kUljlfRcU-?f<25u4QZ@\4]cj1i_[_`m;>VXr6Lnq2W]R;,8W>]lY]<.b?d=-
%n3n^-Xpu@$TG3WM[o@Q=HZqJHM5.nB,G%h\6f$ORqhD\+EF)8'-We/t"!\=4Kl1Z/FtD0t+a0+*lfj`7[9%;ggW)]`qQsT$/Z-)G
%BP;]V>0BtD8)Y3E.fPp8XRTKH89I:KQd'\5c/k-/T%sIY>HWASF02tUnC(Xi^bfAJO@MASi/SW!*$\2#oR45tS+BD[AkJMf+;BEX
%g_ID!O`!DdFW/AF;Xa(N7&Eeq(h\j2JK1hj(>-c.Z=A!uA'0i1"g?bT0eTX^n8!r?S6O1S*W#'BICmUZSJSMu[4^oKcGu,'=*VgT
%c\[?=)fT"rQ.Xc2Fcq*"(:qS$U9cb-mq/N.R;uF4P^%q>/[#$P[c03,C%qosAUH7nk?^33k\N2[kM8(iaCn)'4bq1iU(j&oN>V#=
%i$:i_;VL!qlho"!1o]S,A))h>NaBQ39oO\5)juoMViQeIs1C'4)N+l-,r")5!GIY:W"Q/&qq%s1F`iMSNfJ-5j/6iKZ#*NR=7d2i
%(JEH6EC1&6FX#VjTYoT5ra)WfAuh3X:$,1D\)oN8UVq!IjVVm4Z7N:lM&a&&!LGRjc%l7Y>dBS2`(igdrbOJi;*K7'1/ggbmEA<U
%>#Y17XI6b?'XCJ+PDYSjp<,J'<JGoqq]S`RN$5<FY?"tjU:JJn8^!S>i.c''1V$i_'J*uFQtl*WLFouHY/rV!G3);l52?Xa1o&Ub
%`C<H0k&?qe[N<W)\Q#J,T]3:3D5$DJH.ajb.L.'3[QC]_1oIeVMqQpaPS`Tlh.]KJn-.D<Z%Y_1pt.UP<,^#S&A*Rir8#QSPn^)?
%7UKQ\+cqslN.X/%kBtGAiogpnU-hc0-QacUPESlZ/coPDWdX!/<0)XP?L?m`p]*_6(RMb%@rI!@c[cfPnB1Do,=rXp[oHC;F,`88
%Oje@MqmTn/d=2L#U1n&qgX?!K%C=3Br$4%B:7g5G[4)LAQ@eL?D6i]5SKE\'?/.U"bJ!7Ka6%$p1fVTjk=k\f6a,a`Ao8R>d']9-
%3t2U_I'Wc,MW0qao?:/!c8W*%4]MZjA)mE-MLq7(qZ;0*e(f+q.sKKci[0JSDDi`-j,d&[GMO-TAo#rQ3c.O"&IpC3GJfKkImHSB
%IjR\bUaGf,_inUWXhI&2>),@*)E*cWUm[^4NjU&8P'`&!VlQ'9.oc;fe(^(:H%Bu`&[bgFePW?!+L^uPc8/dAQL;SVDKUh]rVH2b
%].\JQ@oIlh)8]dBn07Q?T5JornD%5+Zr?kCE1>f-R=*\WhVfVgk\`X>E)k.m\oioIB+Lj[pT'm,3W_'WT1O+ld@%b1*:N^3O):lA
%pBj,Bjk9hTQl`bGHi*:fg-.#GJ+KqW$2<7//'bFPhL4,C[6(.'A5jL+L*''3ITkiJY)et(2qeslD,7Do)Llb7;;(`d4IpT6X[1!$
%I_H63/gbO1:[5L*%Q/GXot]d>^'+J.G45=b!fHB=<#"tkCp39^]aihQ$3iaPGq'uPUs-;KO*3M_p]Ktns)RT^mnl6\TK.K]O,W"+
%ouA-U<8>B45u4aUqual?oY'4a63d4A'n='ZN:,I/PeWYnLVE8!;QPqIO%LuSGhj:s7k/+$+;S:4r.4GbnZU]>J,E`,&*NF`7--h)
%=$9eV&TiS&4Es1ZcoD[Z3*?tr#p)K7O<knh1eeNmG`X5C<u'&`JaG-Z6,UIsY@Dg'#M@@Q(sf2EiJI0UItX0HGOmS3_eY,Wbj0:;
%;&%j8"fS4bFEe5cWZ"`G?1IEI&<R,]2Lr`%aMIY#Jo[S$iD]tr.p>?),S)R!&K\rO&1Jf:cj2;G&OF2f.a3Rp,YnkaniFG67>*-&
%?I4h1;FFP"*^H/2iAa\$l:)IQ#D1G2cWbN\+el!"MIYcnJg^tt"k1!YnV>+c*"WZ+\f`N7kgDes<3c_pGhJ_",1rS&(XXOgdh(WH
%+R6W-@5+5ci;^GW%\T')HNKOR5nZ<U31qN3f7C\u-F[h[\-D.q!C6db7l3Z`(rB^-$IjUrCCq;Mi[$d_$Clb\2'T!7#D@%"SeZ%4
%W\3do,@-BV"p.^K!XNQ1RZ)[a&IEZb,MIYX1;#q%:mFDr+=;@O:bM5k01>k7MXXC##_X"667JuDjB!(!5c>M3F<3F$o0en=>`)&b
%9LrJ/jY.L<.WR[7a:.%s6PEmaUAI7.'i*;8o6FIDnj"K>4U8eT@2BbVd1p1u?'"3>/pi+V&bnX7(`AErcjRL'Z'ud8.E$6>L_p^n
%j!0Ec9d?_14GW:$6>M)c7$,:'J5e(tC4L\3-3O@!:fTM"&\_fkYfmdV\1(isO8r;?)$M;m`TZnUQ6KCdBI^7$^+OG'fg$9D:f+j(
%\g2j^!=+E'A&ut'W#Lj5NloI/=a8:R?H9oF,$SO/<b0"CN%?)l.'X38#ZW.'$@j3=hXcU;iD:X68;$.<84/(t+GEBF!#88l),Nan
%6BJ(F<`S@=<E03!K)bs]i?Z[fU82`r;:&VhMM<BG5\:Va)Np5L(rsfTkqSD<-tR*,;<1:,8J+tOQm,Hh?=4mM;A_rh<1_VT'U=N0
%L`@fM%'#t4^k+6iN@?e`&4?R#Qg"pSW/>>JQ,m/LU5Hl4d(d@h9G)6Bg/3uI!ie?#J-c(q:aJPP<O2+lC'obL+C5Zq_'4XY/"QnY
%8h\eSJgtFR[k8b.O_XODJk)qf!^Y0"NSBQnE<ZM":h8*W7_0j$#(t>Hr>$)3+,M*H7#Z\IKd6`A4>@\62T`fSQnc6BS'WZY!om"B
%1s]]qj"(BJM%*;mkV*@53G$2U!0oN?*ipJ3,7*Y.^bI%33)B[u]#L*NTRs%u$nA9_8n:qD9k#5Q>XiF!<Fs_`cNE\h8rJWSY[<(k
%!X9s)f`k^tF](-eIt_TW:#\Sg'3YNoJf#%VL$9j$-:8eJ(2tf[ECCGqoj)'p#G.j)!al0:N&h8>KEYhH3V**C\4ZsMQ$F?5#7=Gj
%(j@-&@qH?:*>E,t,+Xo87+'@BK,p86!s,-j4sObGL!QNl"'uq>8l\IAK9?ia=hq1u";6"*U6H!"(qs!H<AmWo'!DqM,jLXC.Pm9h
%aL8Vp@Ce@ZFcNDNL7#V2)>,1p!'k8@-m:@6-*%a#Br]Xab0uH'1INpL]ECXa)$i3$Psq.DVC3qc-T'3hZA?(d[Ccp5k=!1OMG>09
%P`n+a+H"<\!huSq.[(Fi@#>.p.mYH&!i[*N>X4jVbf+&oP-VNGZ&#rn^1uK(UOVFChr1BP3g_3&SLFl8/I=O/j?"5a'1kT?+:6-3
%J27?7!1k3eVSn,/"(=\I77$dlW"1/86QQ+4E%-=[BI"n"[gL8Q&O>DGl@_Y?W'kPm!58Wm!.=iu^hQ+pljNpQeVG>;fG:BC#QgKl
%TWQ.iW)dI53sE3GV%Ys!VQnW@$$3%a^_^54"8p'!O:3UEjA>h$)'oIiTo0a%,7n@8Bop+1/)X_7W\m2'c9NjUNDL)0/n7P-JrQ$$
%?_W3C(:Xf7#N?q`-abPJ?thT#A>ht5JkgiL67/^g>%g;jQWZXt/^"e"bE5+\O<dG/VJ(Lk+>P>R#-n,@-Hi[=KCP'iC;2(5!@<B$
%4boQC&Mp1c<CDX!'N1u^=c8&8$j4k<K#jX-Wl2dnpbn"c>U#r+!=)e_&5=Ci#=4LWZi:?rU8%Bp("?6X!8nb8,A[so3`onqE>$9b
%@.dnEZHSCTJEr0.YlkQ'#\<\Va"^!0!m+ge#[`aF2A/:e?t*+RgaiWR3<2@S!Dtre-F*u^0LLYmrr18AL'Rou4L)#CAtPG.ln?R'
%`1&"cg4Cc)jJZaj-$0taBFRhA+p0:8V#o:,)0&&Ed2>Co!P]0d)Ul(o63i^b+@oR:+>pt[e"cPfe&#l;-_`'krPT@?+TOJJi1R?D
%(eE&A71m`][(Kcb9/2H->_AF2)e,:$-bPQV1r's9!;Sl-W"c6V<24]-TE7diU]qJO49J0RRh6p']Z`X2'h6@rBEEn_%hf^64;$"`
%VGBHT!7R`G@5pAJXMAX_k%0?I+\!%]'RU6Q3.OuNH@X`\0pJDo,]F*g1(]<V<<^[6D&1NAOr,l$W*:.kJ<tm4WUck0Td+B*A.<S[
%3Yb"N!0!q^j8mp_),[DZcoB)b;&"(21(.trgOUR")&3(+U]>6NLW0G`%tI'.j:BpAiFJjh.U%Rar"?;#U1AhjZR6$>_)t"K:Kp2@
%R44ZO)MFajPq9FE4O!r/S;(2]k7@(aTanaD;7$o]iUD\.+Xk\Ca"i>RL_lIHQ(au!7ok1WTiG)\b0(2AaYGBeWKIE_'l$H.O4b]f
%cZ,7q!C:jn,QdcH-7NG*9Hs-5rg:o>[u+oF:BaImZA8^YJjs4)fa*C%W?C\m`ct:F'Ei-+.[>Q-lsM@J:k@)3:'M)[&<S2s9.USt
%Ys8Xs3;F[`@%P(G-_Ic*9JZoAlC`ToT`XsYj#%2OhLu2#18d2N#J:U=+PoL\AMXWZ,u%oH]KAR$I&5%;9M.]M_5c]212Vh--%uXL
%P"<qN.&%b+i(b\ZLOh&Z;o+W3.;E2@"]c?d,A@om63d`]]Ke4\+<:iq;WLTGbTTd4(_.B[7AMa'E?$$-7;$ZA*8;UXRMIk)N4fcP
%dYK3.#Z[E&lBJ2X\-"6V8EMqhKk.5g=\pp[.^FX=aYa0'F_;$QO5_f51Nf)a!@kDEflH4d@M&TLap8"LZ_3\KdD<S^F\5u>(5QIW
%7%#6F_CfF51pkATE,Z8b0'Fe/>,'Um;Q<7(m#\A(KWFU2(Tk9=KK;X=(bZOn7csk>MS`MKj*BceZ+;h->s?hr9Y?3\"!<(Zi501:
%V!>U+1C:^ZfP&'QP\G.L)jBRl2GZTP#*;B,21\$DfR/h7Lii\)jHg0S(f`;PXNDH45eno^[Tg)"bZe@l`.p_h$B5V8.D09oI?q/T
%k]gBeM!fUu0@16f!`KdV@6DbC728apUi6m&ap:9Gg*-TLSRK)5Urrg2R/XIONMr!<#'kh>(meW(K)mt:0JY\;#Qbqj=<Ln5m3n'/
%h,7pb0WPUZ)?U;50d;]G(/m\F,:[k:eI$D+L?SLZ8/*mRo"bVFWEYYYA-<OIW"nnB4@P^;RRI7BOFi;sdPttE*A5]dOt%$;J<OR$
%<gpf@1_e:UR&WIh$tN(B+;M6]11fft$c`<$\la)$jt@rGnHhK2ARZN3(lILto9Uu2[?D<^T$@&Z659g&:;k,dYeYhY$!n1KXb;/%
%U06e4,3DTF<-KlH.P_BiTaHQQTk\Bu"X5rL0;_&Aosf#e:h0n!6`V]$Giq'+U,&oLRYd=_2'+c17n6Zj8Tl!CB],Pi&>)k70N"+c
%'NjXmQ=4</i`n0s<@JCiR!ej7j`fgI&8)p-EkUBeLcch^7_`#8#sP_pkV8f=0!\JGO;mg$&\EQ(Of^Z06f9j))l)kqYf0'81^i5E
%``66M%4o,hYdCVCTq.uWne/e>Oe]KM;T;=$;Ap*n;!mep4NhF]HI4MM+N,)+Pe1<EX$Ua_&tMu$p./!][iO-*HpLI%0ODa=38,)M
%8sgul0\$1bb5suj5Tl>i=VHTj+Tg%\1)RqO:lP<jl2b,je6W8%:C]Z'/ok/r7@C(UTfk!@UJT'sY(dc7hJ3,=:l-]]CLpc*X>,ju
%3K./sB<@lN-S_b8=Gdj7%b*no'A0<;"U^4Tn62/9JI.8XL`-RF$rg_PCRbkESBRZ-(O<GCW`V/Hk!6OVfRcpc_GCnec&*W!&<@,8
%n-6ZDE)p6O(9+GH.U'=HWYc$e#db1X$rTJ#JH4@)"-LgZ/:#TBSIH,W,1;i9=uaH7k_]^B#mRoFA>Q^<dE5Xc"OZ3j91Nb1($'&u
%!ud;HFI3(pP/aMR+,/QnN<uN$OO)rJW/>sGU?c\Ki(9;R7.,Wi9!tUU3V+0L.@!5IKL2jd'pL*gK?PNIlnHbE9+;@>&JUW]rBZ(B
%+S#CX#aL!_e<rdfE(-MEnAjjJ):[*E!fJ0ij"6(]o#0LWb*K:XN)+Pb>Bl_UfO>&?b_ao$/_m"8+RAQbk/OJRJJ;7mNJ>=("/q$$
%?j,_]2(+!V$E"G+'50+cXH>,2lUo`S&U6#clU7rmO<C-WGnmHK[9OtMJlND,Be\S!Bk@nm'F[iL8f+HY1*m6UXL/V;nUdT('X2V@
%[3#L;.M3k5659MNHH6@h8Q$*k]Z/':9iVs?"r5K=&g;MA<m?f+GS\Y<.@Ym'LEQF(Ze;h"/*giL@B,\Ziu)_l?s7)"!?;Np7&%("
%"G:q"h.E7\b%iDdPd)!#gZ[^#@'ku,%RD)hFJR=h%ghNQ\?[[g(m!1N>MN&*oY\p"['1q9,.(&@4X_0M!u)HR'-aRBJs2p]e'.)t
%\G@a[)kCr%A\fouC^e]Kn1V/`EQpqf"a.uA,KJ5A'I$_SFa;58H,mU-JuhF@L3hX4!DJGs#-V9q'nOV4"gWFWM58s2.Aqk=5m!&n
%kF?0&20/H-\=adPXc)eL8[0DJqj&Rqd%S;<+C_XH3a<l&\e$`<MI<Q>WY#&P(//8hVD8T)OMB[9_&3PAF$(`'.n5tlTK;H`P&^4(
%n1dY.UIeo_L`7KK,bsZo+B`/V702C!Ng("R60SBS0HLlq$`">:FSmu*"bH0ei`Q<2%+kaOJru0"\?NilUkh:tEJ.L<,ctLL*spd+
%UB*VkKe<,C/<>N.>p>J'g(gh9?tp_<#U1].6`.FEdZ8ANE1-cXW.=[O:#hX<M'TAPK=^.od$>rW/$dikmt%MYfG^+lJUq4q0G5+E
%8#V_,!b>,1<SlGN6`phM^EA?-]JmAeR)gWdDUY7rH!*u1\fu"M_=<)C#R"%fe;CZA&V=MP,[TIub<o-;(9@e+hlnYhJF3\`X$S6J
%Zq_NWJKtH.W[_[j=A@#PZ[FP6,jg4n:I9[/92O]f(-Lts6\,BN@u,_=RiF!_b.%J(+<&WC5WZ&b/E"M_[KB,(GCG<"$Aj<d#Y[\O
%\4g<;(APGk:,A#r8JG8F!$Nhp"X?QI>D(:SbGrdn$tX,iK6+O=(57C9*D*2?^r!#Qi^MV_99(a2r"Tu!!NQf\@<bg=?.YIhP"!2:
%V'qXK@-UCM/1B-]M:d^6+Lp;3g]WnBZKqdIJ5%l4WeASki>oGN'![@lo(IML*a?PD/;^'RU(BtqEgTsK1d$"]L__M&^g4blm_J9l
%Xf]2Pb#f",a2"'ZFG8q6+LKr-+W>Ct!qNGF,/WXiVt,>(QXY"[?jQBC96&uE)i\\k6LRaHjXV:mUI*E4.gODZqD=8\[m54g$$Y>6
%Zjd4kF%%59Pb85lN^X#$-\Ip7J\"-aJfKEr00o_@c#b<EKHb;aE1i])1!HSP$BdtL<<I57O_odU.g\Xa,tbuoOlYSr.L$06lcZZ#
%;8NaCMG?6C(s9I(BIIgO!omO=kd4<JM/3cJm6a="*AuUe$"4=&!j%).OYstGc^:?E;/k*BBX`[Fo*uJO<h82;KQ+b[+;t9uS:Wgm
%3CFM')M40n<X03bW"p[YgqA9Wd4*XfOl6te@">4+*^^3<p$g/iFjJghW429/"t2)6V&rc13):B#C@$j62Aj$ZB,:"*eD$$KKGE9B
%L2niF[#kC!(C11q"Xmj8VPb$C0F6$FLELR6/T=@M(F<>?7;g/Y4(o.0&bo<?;`P0qV82>k[63!'Wr9),;r>qP:E,S#oK80`?gP.N
%r1?S5:Qjc+>)lMSTIhF[-+JO%A8D4'"iO9]p'MIZZlZNn2Vho&hLJ.*:aTjH8MIqEd#_VOkdmuh*I%sN.^05]$IJcA#sDP;^#0Nq
%,$NtMM+l8MkbmbS/ip%,2F-=_[Zq?3501M\.(6L>"<es,7d*@Nl9Rp6d*T6JJ"@@L_ure(rhJ9f\/U$CmjYbRL]EmBZCQLc6\c.<
%+pmrQ9i45W.[-LDG&i2H$?M@bSL7'HO1p3;.S=OKKH`5V.]&pDP[i&aLa$*?`2sl0+pmos5_1-oJ_#KNc=Dsb$td[Ob4qb!#=[Q:
%[:(`[.2\\0VU0%44H^67.2"f!RDUpX+\a\HKH"u3g2#\Eq%GQc&j2`fbc%k"-\)l5I3j-D,6Gs-\<TBI].'K3K;\utQ]WqC1ibhb
%>PKmdM3_Ar3K.;n')Y^u'#oeqdYHR+5l8'emp!D!I7)U'/C@3YltWs#nXefLl6g;18ONdi\.eU$TL&bS^^%^GMceCLks>s86EAR2
%+=_[S\6H<*#*MUfC4YALN6&mJ_!*nOm(ls2P3RX$>PKX1kEM-KQ\OjEaar(bf%=sg#/o?h.\48W>,(Ks23cR^%DdA9Yaf1Jd%-Id
%c*4Wc"b<@t<r*Z\:WLoG!>%'O3,$kAWe8]V`Nl%0CG7MRZ*]@[,.b1s2^3gl#Pp)'H./dSRks0eL#n?M?eF<Q(:!%am(IPcV'Sbd
%ZTL.#@s:N-PhbUn3rN7ZkLO<XHeD`]h3u?W)h8Xu)Ei:c#;'SG'RHm$bNN2)N;Cn?*rs8X`R[gs\S2JVCL_%"m3@VY-<rC!X)_bC
%l5as03ljA>m&[*68sklCQo.4jeoel@9)O7P$apLm+cNZ@go6,,n9*Cn6"NEAB?[g;i%Wjo[WgVDbQY8_XHB3`JV%M$s*(l*95D,?
%\[o0ljK[I7Z[pR3fSt<JAo4Mj%qA'4W_Jbj7bd4+:)+[C&bBUAW-Eke/S.Xr"0%/)#(&g.+CbI<YSFg$hQ9&WXGi0"cRl('\en*f
%9F_IGfQ%#%XtS;nlh$ZM^L,4\0g14#LBIfh7`#,8\nJpJh$*!hR6*:!fjCt:-]h(=neUUBNW-0*hRQB]j&tjf4S]@p/WYDKQnQop
%kI8\+A?CqNK\srk[b5:ARMn@1:NOp@1G2@(RqNU'3s_Yc%>LC_*<JAX*d9U8Zm*KR/AB-c-%V@qG[(KjFDd)/3KtttN(:Joi!jK6
%dpAF<$u=c9iZ8P8_)2UO+t+?'emU6Z;s#+6,MbC70aH4,0ats50-P5h@7HQ+Hf-&:%GaJ_pH7BJ#&%8GG#kodETfa9WX>,AROG>_
%d=OH5S)?fR6uf[G>EImlS&7UMT96KKIdp6W(qjeY;1TiPTM$S4)*M_c![JHb4K53Q>@IJk5t0#MTdPG=lSN!r-JoI(FobiWncB&Q
%lY^CE3J\,!+i<9J-QFqFNIaaJKH&]L&`$g9UYtPV%[34M<@-A(KKK+L$:L]"k/#iODsoKiDP+up,)$IEm1.Ur&o6Jp#f$DD<.?D%
%rg+hDMORX;rIcJ`3>HZn09L1NfY4@nSY!h8(.Za`0B-#C9LR>iFc<:rR+M^/9kTrpENqhE.<u4^KBEa[hQrlA]2]FOcf)uAct"nW
%R(0:#@]$*pmue7kL360Ij'b7X%1D=T7't1<[094=h;[K2J:G@E&e;k`jI`p:@GGM?G1:rCN'!S,+unDRi!L;*"2q[`X5h_+*=Ec+
%m@_Z,Y'r^228r";ITNG6s%VLYMQp3<bG'fTAMSPbNhEU^G-il]kG^:;A#]o=F9=8nLs%K>35@rgg4g#@,BtoNU/_s667Ft>@.Cf9
%lKZr<Cr&Z.V[C;NOGtWeVCht3k8RR^]>U2gCp/j>nA#0\m(oMU1k9D?$`XA6]<[u!Ku^P*1+s^2UD3L$R^gsVa7P9>b-YU#m7Mh+
%VlB>N`P#V>SPm8[&X!+V4iu6%nWbW(,5Y8i=i64\$HmnF8T`bl":#;n;U]J1%PTHlAn]ne$@\MJdp<CeUu8M![M%SSdZI:Fr`i8n
%mE)*^_*7(I1?ClC8W\\D$SFteB%/`G_m8tkgHOuR7Z/X0MQ7+$LlI,Me6Pmdgmo=]4[E-s2B!@hE(*HVG@f^tifm]XaGJ<m\j7KX
%D'VC"_GpgU(Ihpt#`;2INE3S06)Gl5,Z?hn3*$jF"Ws4Wj/X<EGeQc](C,Y0opbf4IW6#Qa7a`;8iJ-qQ,:0FJ6S1UQ]`j$"7eW6
%0MN4=V>J0%3P5LS9h)CTkhHO=s0m2qc&j:'H+m@5rW@$P+XmJfb4!O^>nA776,uO%8VrbMiD?Vk[7ggk/!JbRpYYj1n&ajp7Q5i%
%#0Xi'8!_-QMs@=DXNZmko0*,Rp7M*8-bCK"r9J9Mo.0\?9t#71r&YPr?edgB1On9OO.J/EpsKboQ]*W4@"dL8,7H4C@<fToQ^<_O
%H-$>YF.UAL[?(,!GLu6\MJ;6(gg+sW>F:5IV"VT@O$'EfH'm=@+1QL_V<s[u%C/nRR.;KbAfEnC*qe19s0Nf>:\m!\5CNbHk7:B6
%Gl!5A5U6'&:^U/Xh%Sj/'0Qn!H<YFL(^a+Hm#mpe(D.[1,.=@.@Y^hT6jk2P_hgZM^TmZW@3l2iG^be>PaK)$`"fl%@SO.N1Sq61
%e#1o/9`uUA-)os&a%T)T(*IF)R05c2eDA_:`;bS3l)>V`(Bh#+1l0lP?Q,jU<UcV0^[TJ54rRO#mZ'I0o!3TQE%UDHik'^!3J,EG
%-/9:'`B9oN5S.%P2sH5"SlIHa#c3:0"9l(C%14/q,s7^[:%Zn"WLAX/r3.h`dH_<:;](_NMQ[,GRhGL-qhde?%fb,%LPr1)LGE*s
%&%X5*c#`snMn*%@Sr9&o%8%+UC7@5"M6N[d+<e"A]TnJN$TqOZU4P9`q\iZ"kq#!fENk/WF39rCPsk3N6m-$1BKb*WM:m4rS`rjo
%W91RN5=2WOb$85WL7p/SGH^)5Z:V:")WdHR<&p+<nFR/oi`G$.IEpYI`,3V.q[Z?T<es%tcpt9<B$kAP7O.7r+CueD6GkhmU?Xqe
%W<i"m]r.*beP'EuNfY;U:&X"?'2(X'"cY4jEFI=-eB90:pE3?kO?@,4.]]-8/YEnZ;]Q50JcE#e+\ou62fIChI(q!$=l3:'fO>s?
%_T``%fVatMjo]<"Z!J)eJm&]N"?8=[?l.q!^eE,]Bc)V.3D@r9)1ALr0]QgGQrLH-r!"\9DdL,%:S/mTRM4A5W>;ZtV:#E$2%>ha
%=0JH"EH*1^*c=1*/6JD89l-BG":d\bfKtAFa$Y@jg4XEW!&^<_M0ej&'SeY9p'h3$eemDjZ)NpqeO[Z!!fDrIP[J%F@r`?aDNb6%
%W-u)p.deRr&kNfP#L$Xer:_X1Np=4(Q8J=7F\9Pe32d0\;C38YK2ocp-a2!:cSWUD2Q?o(M>#58!>6'-8Qd+noF>"O6B^93jifha
%a/Ds.Z\.Wm>\HUfBR5G2O>l.`bia7N3'UK_/1dcpMDW%LA(FA_Lc#4I&YpNbm/j["eb_p0FpX$f17rN9L8mBHb>Fk-\=J:SKF?Y>
%/kJBS:#V.t764U@6B]IE15L4:AYhc:^<XfB,10(8+"@pr@TOI6Cg!ME`3Oq+9FD(T-%/<3]5d*H\#g>A5pVeh^?quHk[-MuhV$"b
%qH#-_bCSK@s#4IeJ-7e,%#4%%NKV@%.s#TM1?#O"atc_dYH_4Y3jac?N%3ER8lC2nS?B`<#)_@>O^JN\[#72<B9<tbrmG->3(A/H
%i[Cf=j[.Ts\qDu#ZbCZE88D@"9K`!.-10FrA#WPe$FnX.23%T-1!N&jXKF4fOG47pFAT=B#"5nOW_OE)l(Kr(F%AWNR!tdjMlId4
%<T1q(&TS4L)G-&MLfE`T:=;rf:l9ESONkcB2O4%`QiUWb4S*DrB2Lg':gG.oWnJ%NPYZd4S#ZAi;%llg@4AUB8^K=('\/LOp/=GG
%jACXoK&"g#.[DB`)G=$f*Pso7\gBZa-+Q)Uq9YS2BT3YePWhbMUIIf_&g"Yu0c$&7nV#O__S`W-;9i@9!hR2^Wa's`_Is*]R0nWZ
%JrP1ZW8gm/-c.9*&d0Wn8Z,m+3PhY&X08I@O$cMobqnhbLemZ"aka(R"p6)tIa]s-VVB(?qC[R-%)t>*-uf#Jr#luU,TYJH4koP`
%rM%Q<6qglabS*R@?93B#f:=.%;0^S)ZK-tT*`@L0PA`('ZG*j7"!S2gbVAs>#<o?o?fV'1`glGIkmr!`p(^/jCg3^rLp"in7h\q+
%<hH+1T^_.n.@aid1<p5l*mPl2[pm^`'36G0.)c!.RA3G98_`B,,"R.FW9NZfjdee<@Gf0&74nd";FCY]?'d7\4MEVfYX>s0/5-P*
%MiB,_\L;kZ:I,B+?mKYL:'"YT/Bogl9:se&=Y*E///2d[BmH1ci`9'!Q5=o2#*JSHq0FRu.I&-1+]-_%OK%)g*!rB6^Wj<k.e+@t
%:8bOO,#Mm-rM)g++Ooe?/"o`A<Ke-M$Z"CnGrBi[Z4i&s5tMIYIgt9:N*=`M<,rpcI?Ji&d?AK$J$R`^)#D\i$H.QMOcQ^``-+G?
%h@ECG5.OF[FSpU#LFQ4E+Vpe%]?#io:/Qk'LoWq5!7j34641:nS,:&d.A*#V\Z?4HFW>WkbjpoX4IL<Z5UhS61Dj8FmOK%oWD-Of
%L%#bsQn$R6VH?-s$Rb//o5=aH<0Pd087NH5#;T8&$rk31YY[*<?.T[^kgYe3R?0CJ3Ya;lY3goi-:2&s;6!OY@SW.EJD'I7`ZE[B
%PFV.8q,Q0&p@Q7U;`nq*]1@#&$_/[>[W.(O3'tk:;5oJ0>fACH#at]KiYY!Ze_I7iLSIAUiJiD1qX@iUl)6@!js+XgT<?g0e>'h)
%ACJV_L_*]!5:7n%#r4PM72,oBS4!G1.>Y&rB4OliEY8cDUq).j7rgF9WHE54L9>!"R.a*iLYAmkj1W>&X0tfhQ0N'X4`<=*fiC8:
%r</]/14M=H7Su`<$+a\22_"K!fbqdVjgd&ioe(h,r#pL49qdO9#W#\R[%8IJ'a%0cA7'FMGUoXLmDPoj\4RM1&e:s6K4%mmVBroo
%+F4X&`2sip)T,%BpaS3=8BbE44fI6feuNNI&;Jb,jM/9fcpjIO7Bt"[-Uu3=8P+e<TG^AI*[^Qs5-Jif08k'T:;6.+kBH_0-i&;3
%@o;6LL^(t,8e;Cs.SeWKc*--1q&]Z4Qq&tm'tZ%l9Z1)n4,@%q9Y5sUV</:J&0MmDC^Ht>7d'&rr@<uoce71N^^4%q=If>1SGr5N
%mR6NTIk"]f/=W-`(I%QTd`9p,?r1t`@KA*J*U>D5RlOYY_<uUJa7uHcr_na@l(m<OP,9lD]#c6$f,W6*/)TVDaGUdteHO&0,T:gn
%bpA9d/%lU=Hr@YlqZI7JbGok`qK$YR?TX:RMkVWV@$lo&]`H1//?kIK)\Oj!6H;l=:f4JTOI?3+ffCKd,sp[t\j/s>#`^5mm"cri
%mM$e#<hKWUF[6m?Qg*cc1=gS<q>+L?<E=(5]gRVkG7j/Ik(I6p/":S"DNHioR\:`>a*pk4,f`6l"Xccb;:Yg%/%T[tE@fL61\$;5
%q1ZYUU<I+tD93oaONF3D^"89n.pC>rP'WU04[`"'P3a<\(l"4'Q6rRnhm6HO7Ct%Vn;0QLXBl"qLnq4t\h]i_+5(t=rM0.R?:L]C
%bo&ppb2Lcb`a)<8&DT!%H%MN_U88(:3,F+MeH:]PN"'@nXfA#)p+_;WlemW9!sTZ`g#=B#dLBkgg)sK_fr)Dq!S&r$CkZNu]Wg<$
%<:kA/6-P^aE4eg"\qVRTPo*150!&lFW:Y9%&!"r43AC3d.PH'e$5e8&!a8_9eE.bCV0_b`9B8go@uSLH1abaD\7_]2Xa^2(^L&$Z
%[Eo3IKoI?GaBuK6N6M5+M_^A-e:Geb/Z?/gUsdfS^%4f*Yn=na(NEL@3/V!<i!q?\Zs#[1]/iRbWG`SL)A6*_r&&C&=AW3i;q,5.
%U2pN%:K52lap#$`8??:C_![e:nS$90c68+kqh'N`H75J@Zk&fR.R:["YsY0]94-kY:&U.'+q"[>*pQ=S#SYq):e]ZB;u0NZ54f@S
%ef3UhnRc%!Z0BeI*"SdU1N?d"=H2t*!qFi='#*u,JuB1Q;9<N_\1[@a;IjAGqs[Dmn^%Pl%"e4KK5$W%U)%K*^@DM*-o2TN[9jA)
%QX!B&f;UBU4:,\h-Y\%mq8ShkSuS!)C+f4d/e`M0OrL:.em!O;\5_`%g/<_LFt6;&R!)[n`#P/G:*<9e?fZ>A[.k$dS'neBnL:d5
%fU*[Zb*MhF;$BdMRR(?I\VM7j30Zj!99-?YnUX%"Ca.6'SJ=`%UL71F5]=>)5pFdOk:V0L$bJuN)U]m.W6uEU3*ApH)(t4<.(TaV
%#bjR(8hRqU69niSOounCpV9Hp.ZJGu3?s[Y>G[Yd%<?cFPYkmdo`fd3h4%Q14sEqS76(G5j\gW"Zqm><I7OoT_9U9i)u]d&\4)rC
%=SjV&Om$IY,cVkNl2o>VIph0Lm0Zg(QcMqB%"7S4T2e#VU^k`li.IdVM?\mmN;lG-Wp1B&'Upm_%d3*rM`[tWS_5cBBtiq>C<(jj
%--Q`qOq$5oS@?OkUS4pj>G"ffoc__TAQ#_,Xs0o9FS%R"/aE]ggT4KL\deo2The670IhUa]@MPs]Q[s_^\=p]N[QL+,tKfBetd_X
%k*`+Y#o1jtOd8o06n'j^VpZ8u1C%pJ8]e.m.]j&\13;H/&kAT8p/&FR&r3[m65G41/d?[chhb:Zk.GC,]7gq$36AJ,G_L#A<8Q@2
%p#B9d=_3`BRA=T$P$^iL6\el$:EN+N=UT@fX=fS\q\_PQRn/NojY^DML;Z37R?d="#%X%Pc7h:OM?b3%-+I.9E/lj$:008.\Z647
%"Pc/g!,+LDo'B_bQ6XMt1puRAeGh!9@1aS1&3nP$JBffndO8dL<a(l&RTem2`M^u*5a;,h#Q5J]$X&%;,Mq/dL>>(s%t>h*`;\ea
%Ud5k^Bn]D<Z67+U#WVcYTB,=>KL0fg,f2(HJ?fI0%&7@&9f`\L$cL>khK8#=YAK=n;T\<X<CR=W_C.'`o$-8lG':j4jY&WQQdqkb
%2`;9>$MC>$HYE,-SH!Rld;tr?8*+LmU1KWXJq-@_broKI%^IYL^*4%%aI.rgo$hY<(KF%emV2jJ$1:7u?XIs]nPFqT'eR^hZj'Fk
%.?T0ddfiUomT^k>N>R9f0Jk&P#q-\K8JJNSd-Qn"Y_W=O<38`h9%n_)oDVW8.h.,R<LHQ<U3@jt;C8YG9riT)l21]r$T8I/K>tFM
%P*se0:7$3o9j\X;<AL1m"ON33RIJm@)A<-Jgja)FRE3[h7*@U0SEWkq3Ca2CjNc]*Ej(ekEnAe;C=N(&8.oq6q[H;%mu!VTaeTi-
%/FIDAV)R/26JX9;a\\g;d:Kl0P3)p;<"S_5*B\Yhia]G.niApKT=&-TRq9p?gl,.8Hh2E$f1tF23S)&DlVtAYm5&kJ4Ik^B^ic\-
%C(H.YP`d/SZu/*>;:tG9$_Orc*A\X&eKuIBc(6C2E7*L1pC$%_:%XW3alGZW<G)gcPeYs,\q1s?_+rAVK3i8`?ij&;E`@t<:K4f8
%r&^Y'$0bL`:-esYI.`6B#86-=Jb>7&2CES@7_^gdUc1<&\i>Z?ap?^#nVqEBp`MhIkT+Yl_ScisUMja,@I>b"AL@89^NeYk%g&<-
%=WU'hc/fTN28-;um/a$T2RS(.Lobqj-U9OBdl;;kiH3J[G"?@NG6L%rieYb,htmca%pC7l2nH><P(t]:GqulGOd]mLe!i^e?Cuhl
%12!E1Cha/Jbg)*+.LO/^`___@`^9Iub\Y#DmiLf=TZ0,p\e>F/cU-.gTZZ$p1:oG*Ur48rB7UaRrQD,nFc"QTVHjL=BAEE%6$3kU
%iYm$"cH.UP5IpTMqgLO#M3on1Jm)i$h&&kVSNRU63f%\Y]$Ru$%&2c2P&\!e0X&Z]\Cufd+b)Hce4:QDM>4NUm7q<'lcL8)UEa?B
%K+VBd>b-8h)KDGl%Fin_qK,oukQ2U*aOJ>)SZ-E"8mn%9lH/FD&Y82g#Xp3IW1itnBY%nD,Mh*?q`^siIb8XeoE-7H5#<6G2D[_G
%M:G%$S0_0CS=]Mp/8cLI'_Y?k*;L&s^)G3i7&+/9CQ!e<8dm7N&,^Ao>6R@3(u8fHg3`cpT1f@9#a0DV&_)p*FAD?^9>s!pm`jW.
%rQnaBY/Mr:ZZG`/:<A_e5>-'i"+-nlJ7t(i)?c>n4-49fUsjGX=bift=r73PU^EI!=,AI=jl0!"/Ned)E+SInk07&*lDcOrhJ1D!
%P8Bnc;+01`4bhISDlcK9AO^_2+8o*.ofgUo8o\bH64m*l9PmIZY[VPnB:o&Bk1Eo<WRp(m'fZp2V=gr7jBH8oo6^N,kBnRY*Mdgu
%;2ET3G<75dSRPb_0$7!pV?<_[H7HK<NiY(UrpCYfZYRh>kr$nG<hU/?M8qhOUnA0(&J(.M;!ds[B)IurU!ir9!.8Xo7_S$o?5l5;
%W86;sB[Mq-)C?,GS[URVd&+m"Q+]UVKEGE2oMJVlfLoZ(A<CMq<AKM3(:0ZqpoZNhghsoXV1,hSc!Fgi[N\a;Gt]R]ct8eMI@B@0
%+er8LId0Z8HSY43r_lFPV3N=3Osia=O@".MUMQo!Itshk*LOOXh'OGG)4scUXbGo'WH^Gr24XTXG>F-%8mW7[24Bamf8%9cI#`lN
%JiDiO-rp72c!7q2$hA#2LW2T1(6j^CFDMripZZRfOJub,W]?;Gi(7'TQC5S,r9J,sSjk%3:e@^&`<la97*[X?>.fQRGG44QHNu*m
%\S'O*Y%diB`aH;;Z\kAs&1oUbS^@X6Eb#jVPt`gXR=@d.VSs2hrBCG=>iA"H8OeB@8\OG\Qj(Tb4->l*`N\r?.PI%gkFohob]^Q-
%kdnkOp2gaPTE_[F01oQJ,5:0MU`%nPeo#E*d$4.-]]?=VQTpeK6_1ngT*&Hr_X[d7/>%+S?Bg39][--4>sjZ(YLdq,OWTq?ncj<Q
%%#;#+XeO,S8krSkY>>st"]b%^D7[\,D"'p5G1a"`Ig]pOE<[IsCnhS)<:;j?=,2F%k?2%0eD*.\_(hZ^DWoFj@g7X4GVtE3!5(2:
%Rc[u))SI(-gt(;>7DnJN6PG46olbc28.`XXD>\7>>"tTFjY:L\HM>-h5kK5B0qY<CccD7ur'Qi1<,3cd]&N]@=sn=PW+%R.*6B77
%mkK.EGBjLNL6)Q>2j=eI6FM_]Ni^[]4JC2o>o5E0Je:Q2d:FX_P6:)]%Fem[T<$3`,^_uj4m9N+0al&Om"*Z7pro1O+r6B@[Jgl&
%=:.A_3!u-a$o<6tY;2oSj'74M(he)1_,Eju?r`]al:;gL%U[a4Pcp7;+E`d$"]f?;.EdXn;laQOJs81bAS_Ka&gA[HQ99MLDYKl!
%(J8cTaI..$C=Hrj#*'J",-B#s`6.Tk*3JM`RYmG\B[j'L06/33<TJ6i:F778b,lc*7@ErV7r+6""B6,0Y\Ucg<>UgaH9/*Fp%p,E
%T:;Y6M\uq0o8E"s:,MfVE%W"roo_[WO<I/-<R`X]LZ!CLF;X-IFUolicZ(;^QgDLU>.O8^'&BKNH9Za/\uQ*4oPj4goUP1e09KNI
%Vka*5a"!lal],L5UT"Z0MD`c>5:'g7b]][8O)&oR3q!jLRMo_3DBLZ#S&@:!Ad75qZXWV0Bl+6R-K[LE@pGRme2R7"eb[]W!Ss4L
%HQ^$ITX1EI&3tY`>Fc2nd0.#7(53>jh0T[%-VkT(=PMYahs,#(4!Km(V5QKTI]WoPZhN=_ZTg2Va.&g\GqI5C`JspJEIEXU?Ohq[
%i)#9e^I=iE<OOU$ZmPK's,Ff8f;*rVhBJGDTbhV'*6"VWQFeu]F]m,WrG`YBSg8">agsF3DtNpjo'6`8Bt^rCpE3=l[j3mtaa^AJ
%^cD44:h![p>`NdRN\`*%\S\(PW_T/b5nrk,6q,HGpAUd;2dCX^_UtNe/Nr?A2,!ft#bk?e[>%PHI+dfmgM4HgYa-2NaV.hq;]G5_
%J*K]K)If?0"OuhJ9Jc.5#EQD4e]=h+Gi#PWMe/Y*18JFD.k5<DR]Egp1sItk2lU`ho+Mbd6/$I'q:A.//e\X=[qU$!<?I>(j^SZ*
%dg'^H-QS(+HX@F5X'1"j2W(An3m50sLR&H9/U6-2D.1g$$*>`fmFF[J@9HHMn3o&pPe@VrF_H)Jm>.ADOH]-']uUhe2c$%(frgEs
%$^8R&;F/$7a=d.&:+U2*hB]V`aoRKJ'6!(;P'n>lcfk-&l1^47%iBsaq-!N[TDmtS+27O<bMQW5:Z1BYJ,AnW"C[Vns)UOU?9uVD
%e(IhQ"n7-^=+@B2YA@koIe1q]s6?6Up;9,olu1*coW/#2Y/["/=]hohlqd?n'n>e\?i6i%IeD1ip[;Jhp@hYfKR`dnlMWAbEP[@D
%r:TN-rNCEP*rfUmB]K-jdsnGFFl+0_-(8af=+&&<q_.ZHs's]2>_V;)Dm0/\s'2^Uor%N(T4:o4:WBuC*i__K3#bE;,o^G`@AUqD
%;?>>LV&es%,3#GKH.r?,Pe'NM!6.G,.kdpZ^f\8Pl?7ZgCI1b#NFPCppHr9']@d`We\6V"@31INY_1MX9IHR0LG@[,U%?gC7iYk8
%bj7LT$X.)BgB")3)ab$4;+3"5Ai_P(]NnZN%U<=a;r*R7G]T1OY5Y4r,bJD#EuOH`GG8>ae!h_'b&iXZ0']5&1^e1H86R+2h`T5:
%qsuK09O)uBLLJ$l&VfJRi')@<+2rit,>?En_0t_W5DfX=3F@&Wkm2d+/@^T&eHZtDO(`JgnXG<Jo+;9]c?.MM*[93!-Gf(X?po_S
%fD$^>_4>3[.E1;"]Ja>WQB@bQX3>#&Gd$=d4\As-TMU'hhr-]/^Vb[Z4F"nE[9HpJplZd-3?uG@:..*rCTh-6/Y;4l"")3nCf7oC
%1j/fG?=Ed\@27ghh"Tr_qdO%^.V<$VPWuN4*Y@<qqouTWh#7(Nc^*NcrpH9f^MI`VKk%amGNZp=ARc*$*8BSi4"%Nk)r'r#Z!I@@
%[jA>T8rk#+`()"5W?#o&8.ZjND/?r_a!A#.]F%WC/Qfsuia!.s<Y;=RHCknP@o5VQ5QCOdj+[EWIgtl-c!Qs5hRHS-?75ti]*BLl
%@k-S.%<f)f]`WtL&3o7WN?clI9Ksmrb,jPb'ZgB?rdG'b4%;g+0H5N9OP2.Pl;tUFXO-@^aB/"oY2)p^b0!o8UnTab'^J-[co/m"
%khRsS?ZGh%FX#,TUPo/cD10S+]fSF"fFH2B\iXY.oYh()rXKHb&O)gST?j4WkE%p\Zo=_]YC$aU@$43drUCjpYJ^:0+_U5dhL5%H
%0ab<KJU%l84CUr,#A(%,<euWCK4aO=;?rua65i$>*a`2k[t?TJeK0Dh)fgo)G,h:SIBu(\Kl3FiA.ERjE-mT;G,Odjblmq%O[tY@
%GF\>CfcT@]_-@G];1OqK'1X64p2P$AG3In%.0Qf!5::RbQRheWY;U]]etWVP(emNX@L)9IDhkK6]A;m/-ei_:PID"jE8g4B%c?:,
%IFlSfVFmZ;UHdS/OPPBZG3Je67;Q+H5:NGT._MP0UZ6)mNb2)*rV?53)ml*J*P/uQG.YYfCsUq`hDW/dR^^m.I#O9`4fBciL'0-s
%Nq&:b6/Wj3=Rc>dK*V/USe4-DnkU;j=MnhHFM2<T&0eYl/n+V9`:g-`7*.S\G"%61;#I\ddKp?C;!+$sXUe.o$9=N1QUPh+L)U/>
%j1?P#UemHW%aRtdDpghYYoKFkrO<@d>!A\m6-0-B`I]#^*hKWhf"oFF=OG%%n+Pu(%C_*4k2FN8hL:\%9[F@]]XQX$mPuNi1u78b
%1Vur:?1']tr&!6kQ;=@t_t+d!lRqqqV>'oQ&V5#&DB(?Ij$Oa]S'[/p01(`4P#Z,&es.+=6Rrm8DWlj=lMLpZnZq!04M&;Fs8LJ3
%Z1I_KF7QYcs4P-dCu;j0_Z#L\aY5B%HRQgY&fe!J?7a#_Pl%slq@+;:dUYT!asS5\._D2aKg$u*T[%8Mn'M17E.m6>KEUnarW[#O
%h=!T*3'YU%cSG!hoE]]0*tiA0,*87QoT1<g8-1,c38nkjC_M=5EmdJG%1Bt-lVIF4Kk/H0jG<"_^38Gj*_bNuYaKHLrV7N$.W15-
%e<<@%kXE/mI$8m_4+!nY@Y`C$?oCp9U$rsu#I/Ws3locoGpK@AH)I&AV]uY&kL<7r:'C.@RfE+tP,:g\VngHe1r.tc$]:jP&)L^O
%hHtWcH7'(]m&h*Wq.2M!H18hJ?-DL3I6Tb5K:MN'i#2P!''h`R'/)EpT(-6=Cq4Z,\'tS:`IRUMTh.Agb%P3GQsP(,Y\8!c[PrV:
%]L'XZqP2(`DIIPkL3)n#X/H0h'tj.plp1gS.i;ZaUk+(8C(=#5*E9VZT0ou'-tEe'O/3j(WMDLi[V(94Wtokg=eXTF@BV*"'")_)
%s(`2HW#`k9)*;LPN4d4:F<1/4&\>^8p5D!>V_e*f%UZa"nqCf#T17[%B7um(Onq'_r%s8[cPb]&9_]:q0j/pen0^+5+1h)DqQlG?
%p6B_u>Mlm]Ig$pN.D918b"Hdkp90KQAJgn!`pKJB7Y?fCFs2Gk[QJ_p"ET3r-13F>o/li'lg6TDIBJ%2Td!_+=53+UQ/(BHEt?X"
%qdk/*gP*8+>An`^^)n`(bn;EgRb^=+l.t1!s8@-hbCo^aEr+'e\R2@t?$E[PQa<$[-$]=cGQ,bbqWfeanbXtgqtp>W8%X4sOiR1n
%rdI*1c*-hblPPVMk(fktT=60iAAmGio+L&G%6&4q`fr&gWo:60o:jKinr^'`C/]LFd>k/;&)R#$U7nWA$bjX]O3.r_(9r3KHir>0
%L\U@V&&RC%TRFG%135EQB"AH4!3rlYGaDFBG<jQ7=SHt<j4Yk&lJW=:BH7HSgJHUt_@1m;N7)Q\Bih$'Lnj?Li62=QA9>LPW;b_K
%n-5,ZkD\mD<NSDoKV(fgU+Z<$_u*$-CmFj).GE0h6U8/ZMZQh!G$gP9rcjYZUgVBg[Dre]SF_g\A^`$H%Rl\_r]0C3$GF$\H4\mX
%'^ZH6CN>O_gS+6M,!G>]#[IeUihkJ3O%@Wcd)'93aoT*0&,Ult6TR$'[I!VY!i&UTHH$/kK:/&"7+["I*MMd,*hKX]_W`%(kn)/4
%++c*EHJfGHWcpG)d(;2!0dpnd:'aC[(7c1(UspNA8Sa1>Ff/ZgW"9-'?>X<dPcS_fkZrAlRgX,8k-^IL=g-g"L>C&Fpc"]Zp7)_D
%R_5lfN:><WKfs(%T-c5XPFYsU-CXS;kiAHY=*a!`\p&,0]),l(i0gsV5^W;cHuQcRQ[fQO8YJUEe6ipcb"nk&6k$W#10]Vl&T&pk
%h:g@S[(sm!nfEB5\<^j>S=k'rBPR1!)=e*CAaQ*0l,sV?OuMb>c72qG([lQ/;4U\uiT@TKFbNUUp>%NJcu+YPd(:NEID^jWfbp^>
%GrRU>+.X;iqnoK'/Jp.e(uZk5'[pRO9iGplB7rK)j!E)Vo-#4Pd0\1j]0p/ZM]B\mgj.6lqB=QF%FX_k!DNBIm.Jq/(.0=UTo+(@
%g-50MH5mi-@'&0Oe4KCT08>eZCrt.Pfu;]ZabFG@HUss\D#bSGZU2,k,@Ah[pJ7h9a8Y62Iee!UO9;kMAlag`F<1250m\)`_aCkh
%317gJ']>'J^1mCkq#EXAn*0BDINlY)b6RfP'AcVX0@SfQDe^*M""MI&>auC#K<0k(5Mh(_%S^K\qn+tTjY^t,EKh*G6[.dE]/q"+
%=9bAb2c2'mlo\"SUqf.#,mE_`>uKSj?'>>6%p=[5k'`hC!gR"\,hq`JFM'kaM.aIdf7@a_;=Z;?CJnK35?=rYnC$@H4J=D[pg!3i
%maq_8K^.mRlBZDJSSoR`F/YWNZ1m_b<'LN\5slOSH2S<"LFPNd&RP1CcY8'9I)K8n3iL$scrp2(F63qm&h[otOkt3Abq&RGK)1'=
%WQ\^0RRI7][kjuEY28#N7?;KpV1e<2c-Ft84$-rEA2m;6h*Y41@5jXGSZs.0cHZ]T*h,[N7o0G.M=KsV#A@a_m*M;oYt*DIg`CL'
%LspWsbg(IX6fPF@o%>5_E??!8^arXP%nCEX2gelW_PZG&4eiHh/K"3FTKf\CglG8MSV)/?K.U"`_(+n*MKX:%&0i``?gmU!,IBu$
%.+-eB12>K*is=%7DZ-I`3lcYmN7&^`DN>(>IWc3_<*M;7:'kJBl%V5;apurP#<KPWrQf\oYWh)h&hgMD!j"^bf$],FkC+a!*['V`
%OJpNuNVIc-@spdag9hREik`QJ4*PDbp)]Dup9L1E4FL/\(2I`Q22&S2c\e]_=#f!X]:9pS6[Joj)sIiN3ahrG!IgJ^q(k5)gNL'*
%=k,kqrSk^H7,O#k6ql8!QVjaCL?nh:[Tb4'>'rFilr2Y*C;CK,*TP4*V0=@l4"":/gRHZhW;G#i\Id;/p],`SSdXCLl#7e??KM%C
%LA^ALF-!kYZ:[$DR5+UJ#TbmLp]tP^5ahh1=i)8&rrdjVd*0rpQhF*CTsh=TB>>a9]m9IWkDt.!o94lWAVB"Yg+*]A!s3O1]l6NJ
%L2&A,2B4M`_ffADr:O/MWaXUONi#p.<]74<^31ob:-6qT<AJjf6+(@Z+4VfBgk#c%.=/sLb1;V+,l(/_'=Z_5d!W!F]:fc>.PpR5
%]@?'u?hVfOTj(;BS-.P!gg9#[]9E!fa9%-N2TXje)ZP?iLVgOCB.r$J%/B.Lr@pOhncnq%CQa2BjULig'm93>:>)?,d`s\591M&i
%'1_<]GDc?.YUK5^MQl5VVsL)4:>)?,db\kcfDsZIpH)q*i-+)Q)Md(<]^Nn,!i>%Sq7KZ*W-?BElI&$9]2q&%LqgJ&cr>TXbORQQ
%m^?XhQus0KRqW6f'm,E"q'[1=c0-u^g0\N>=<#Cl52:#\c,\\4)p@'u^]!rG_F0U$\?A3pb)Pp[\JQjl@1UX-lOQKM57?n.rgBJE
%F3*^kcO<O/)Mb1MVWAuUq8EJ2VXqhH*iIE\6"SN!@00]Jb<<*M0q7%Z*rU&2mPs9NG;tY4VO%*1\3:;'*tl!:6>G^_q#I&@X7Zf'
%loX<dQH:rJZRK](4AsgX0YO]Fqo[T;FM#A%anJs/I?o7Vq"%'a]r5krO'6+ANSLBs?g+k0XSM,e?)_\X0N3=l1&HM%B?/)u&`oZ(
%euiKG_f[Qa,P1nH#@p>+ZNDSWc$$8mq9@ldH]jn9Ctj*EpKI$/qPkY'6Z,nVq94um8'[7gc(G!W?[d'PTB5ugM%J]Y45cGdZ?qhr
%]=O4\dEq@iPCPjL$Ag7X)P&@nBr$8Gc<'I3'`,F=e,UhlGKUV=J_B,C=r&rPTZTtoi.s+O<^1HLEBrj%8.#MsaA"m9V@lma9^0r7
%m89Vms)!=:JK8C@.W*:/35s&00"hVq!M81Wqe&5@/bj7$b=0hRn4Jhc,'$&.c\qKK&@S4P&i:<WqYZZ?nNtA$W7d#!Z,Qu.RR8od
%`oED#XRip'q,BdLiCij!1t#FGBX'@dcCp2jJ/nA153,Hbo6YZs7dh.%BZc$Ad)B`KrmMpV4n:U2SM(bP<T^c`-u_AaAfhbd.[uQg
%ch9CdL(bc`\+;U,/0&4M;q2[,C:'2$<csrU2eWLmE^>8J0-2(2s3t@4AB,>S*Wu)FlXfcaGc!&SOn/qF^*j'KdaqE*/Z=Uf/!cZA
%np<u.(>HG+N@adI\]luDi8jB66r9iG642OhF?69SqA`&XlAUfh`;/%BrN$-'D=(;.fY$1@c2JQkSc.-sePtdJPI:s(+3IF*Xr'%Y
%^<D5Jr\QIm(98D`\9-J6a?%o^,uS1/%]FMu$SljfGXPZ<8PF'U)4fA&B+Zd7g'R@+mD3u\d)](VVmJE')YOI:/QF5p-^We^.e5Fj
%RV!qEKbgaN"P']4O4$@%QW"kfjG!GeWXIjmLr.F97GftqJ/:WZQG&<nDPRHj1:c89Sbl"cCIOk*WO=5u_R;$-S7ZO[=)");7<E8,
%/b"7'$eQDX+:+ts\jtF4*HJp@U!-fce&"M>6MN"8\0W&D!la(p=_bdH?o.)rK!j1IHq5e@/OY)g_mhII[Xe7L%DNTpi_sFC-K#!X
%M\IaTgL&WjB_ZG1bcA,IWt*N3>X'N%3Vl*5Vo:8Zd+m<e-fcD3*P#X3#o!W0<NMWQ1-\to8no:Z,g:BC(.gW!7<G?2b4qqBQ]]ui
%mAn#?6Q>VV=.'AdU@;Ppg0@NfPPZu:UW)A?HI,@:7YM(oNQ"un&f(*"rC?BpOOc:S79),]$DY;<*g1qPCsg2D\mQpd_U93ZSML1]
%1JAF`pbj_n^^BB'A>D.\$O)ciB$XLK,U`Q(LGV_O<#6(=dUY?'`IeP\&E$7.OqYs6bu3$gX[u.BVm^L6;WhtH2j:NcRJG;6p\eTI
%j4@E1,F7H5gq)&/H1a*P*Yd-URJ5V>s2rrT8]s+MU28<s\^WY<p6_q&Y'1Zc[_ga']'Pe<]5PWj@h(_R;ar\##gLgY6hF1(dMV9k
%2gmSY8NL&'Fkr*tFra4GB-@mk;mi]R%?gE)VslA'$-GOSd:^!I+X\r?\l8Hl%lQIrrk6S\-J*p>^\Jp[P^&0[omV-C<$sKWd"):T
%Q?Z9D?>2VN,8r[np;I]`8K2d;3m3=I.<cSc[5B&^mJsB8]lf1FU*_mAn]sC;f.2/WfKXS6Ad[uHi8MQ/bH868IG^)[(dKQ*RS+7t
%dQOI[ZY%T0Qi5:4,,SS.r56"$0(*<Ih_)V3,u%1aQ&.i'TkMR9pH1%RC3a">5f_>lG5o0J.JNS_l?Gqii(/`TDIbX^\TD3qenGV+
%qX%;%E00M=lsS$$W[d+.Q^ApdPr.lIBb2\(`r95TX;q*"FZ7)ONk.KXFIdNUA!31Q^[tMF8LWs,NRQ3;'6t$>,&-<*BCtMlSsEfn
%<"RC(Qmt9W'h/%M`O%3Yr*bF&WB&C!:b#"j@p,WA!prt2PZX`k+su86MKiN_1f^mtdi>]mq1fj7<&<6-g%u30)f&70W`H;-GJ_tb
%.@>S.9:3k%+SV\+WbH3%8^0f.bKBGqMeX0m")DTAkd>\/<s>-g2Qcr''V05DBJ3WBH^>q%DW"Do@d8h`/baH8c5AM2NgVV%[5hV"
%9pd_8h!S$?NTRDI=&;3L9s];_+W;_fNSR8c0]3X!]t;s)Vc'&O9i93*/<k\I\u:RZYXd)F#MSFpP7g9[Fg>hMBP(Sf)U,?aV</)%
%kTj0n1rib*cU/(l7E2GYMC$mh3up53.`9LCqdF!Cji7osVs-C"fX]<JgS`M0;7gW.Y0BpSRo943AFZCNkKh\oMFJt?[AaWd>b1;[
%pCHFA(ZdB@$(rV+8n1U6:&%C'o9*)!UDhj?bHXKabEu%$CL%UA9j'5?VUueMF)C)EfR_K&7-4kpHh6lH8M[=%<qf&%/82(BV=?E"
%]"ci`QfH!56k]TZ1IEF-d^:)fEe/9on6%j0h5Z]lMUR=th&\\hl%c0#j,saE3IODe.5Si,ZSb<q`bfm'eLVn$A\m1%N]=4>_bMlP
%\^;I+\c3Nh\`qA&2gs7Ie8i#UnM/qjHj\j#%!sQPI?4mdU*\(tb1(*3'j[Rlcn&4Hg$PB9:7f+L$gh0QoR.(AU_CV:4OS<[P.b'[
%-LH0t\]sPMAhHa#$n=BnU]JRa/GMaZMcPHV=%kGoG\:#LB-M",?$95PF(EBmP_+9$g:uQqO?&X=lcIES861'OnK>:7'W*cH;u\4h
%M>b=5dAG+kZ"GDF=\KZP[s>Mi=2LcEd,;Yp)0@oRh`YTCi<1(mYs)bc]L8I:;WStLkh<@"](S$=]%:]rq$\i/5n]UL*8qr5B.ZZr
%<1*ns!2rJ+Nac*<dDI*LYE0_Oe',+r,_;9@2Bgg)7Q"%t3#V#/UbWI&&hZlAL[$JKAT]WUTNP#N7-n`bJY8W=[Nqasle'3hqN($Y
%,gSpbZ)-0El8dhj;]NTuIi`%MTh;?AKUXQ`gIXG.(=_]bY%f9:3of<%bifLJ8%t/e&nGLn=7??<O90)Mh9[6Z&q^p4-qjiR*ndLn
%+efA+7/po3Y]R5sAn>+9,doe')A3+rPaI&Q[L>$*OCH&]"U"o<0sM<pdFTKpA9'#.)qMZ`(*'bfc@!`(GnW0K@VG/gS]dg.7$(,_
%-ZUE_=,NC$54O=/[Fsp*h9mk/>]d^IG>+9m<GFY;Kf2,[$H!e0.YU%^DM/I$BjJU"QF)LOTSbM4X!0$0W4f.#AQQsX+jVW7K]2FE
%(a#_+%d>Y!>f#i*%OBf:5jN`NAD:]RM>rU_7,^om](M?RrX?R0GZ>NYc_jj&,:Sbd0Nkh;](=/MGJ49r:`&FEA9tr]j1g1F9!j]k
%rgIBPL?.[@NjsW$6(d@14r1?."CDg%+Dpk$k<"'RZTT!;eS.[rJ]F+<h69=ta`TMPnqHW"83E.p)A*ZeH8_8(+/p2EG'9?t@ok+.
%6V&S8>k^\1NpS^p*-BK'&ZV1$R)i`t]fPas:MmdGD19X(ZS2>r0#?F%F,GGN.NM=V[#jX(PuZh$TFD/4':`-+bmC^<A3@TJAb=n\
%I4gAe"FGoT5fSLpgVMsO9kL,r-f80)XjnkIPGq2iUi!`(WYT3B-Y/tpC7T1<;l*C!BLUp>G9K]2&U1sDX/uSd'e%QG"G#aH-0-8-
%.D32<5g?67VV,SamIHGc<[.s28iM-g+Q1Yaq6%W\U7aL`'Q8;!!l@9,!g>I&?4(;KfWH):[1_:(c#9"L@\uG)+ComHQ[;hZ]8!m]
%GRDIR&htj-b,1;,SbYh65.1f[^VtB?j]aEX^@33FqIcAg:at$TeisA:iZd7eFT5]%9"8u#NerR96ep518'K,p>>1u[o7ULnW^V\$
%iE!;.R>Z_,oqU;SKjJ7G3,"hbf7Z4Q?`MFA-Oh1Y>.faebern@+S)K_kDRY2@WIh=3YhtcMW>(@I6Ei89U8`?XKR(T%b0lT&A^*P
%(cA'Oc@-@XE9N[EFAX9<Y*G:N0JZ;KIu=Ugc_p&G(Wr'X!D#K222N'7Ore%1C6-&[MPJ2D*/Y:Mh7=_l@uQ0ic>?PS<7>+<[@r'-
%\Z2f4&3FaH2cQMU`Vc^*0>n&@&o<J]W*PRJ"NC+&UP"5A$GrUKqUc=<aBWcc<V//qE0Ej^TlZ@^'Y2PlBQGAc80j[WS1WKnmU=PN
%"oN?f?g!Q8\8r37p@WK';djQqF2WN@;M+!^J!tHpNkG$L*$o!i'EQ@0bs\TnZ7BE`:Ge5#UhVgK[>eCn1g:Nc-^b3,6\GU`i!hj!
%-HB>@Z??s>\c:u2q`e&`gP7Q'Xe9et=iedXHuo+Iaj(qQJ@IF?VF08S%ubASppA+&$J/P]e_bfRqk&@`qt4lWA`(]6):/4%$=j#$
%(\Z)Qa3Usgr;BE?p7LNgs+gXIol%V9^MO"*TD\!?J,SqFIe'gr62$5oIs:YK^MH9KDaO\rPH:n]K!fa$l7mttj-45I^1!]/WTflZ
%oF7=]EU'L"Xk#!g3DTN@S\<r?(c9fe['EcH@Ea7AGr5PHKNp=UDkIcM')jK.US.UidRe2iYE5mu;Aj]'26<7GOiVPu`$^i,-.OW_
%MCZA`%bW<#W6uXB`U)<Uaf[Y$qcYXc\>`g)m,bZQn;+G-C@>[,^:E=]cV]'Cg]E8]oig4N1e<lMdO\(ZZLg,8knf,<.Wd-5@8Y\n
%Eod]b8OE.VEa=!NX85`-Gn=+0D/jW"fmIsO=Ji*V;/-%;IQe;/Rd-VqO;fnbkWE&@;`j"2!C\@IV%]g+bFbB$BKnh(T0(a-m=%Y8
%Ia^PO;j(nX7WQPdY_.jY8XI#)$b*S/r#au\kYUOQ_Me]k[\7Fj9b2Z5cHOp><.N<C+C:h![hB)tZ6P0:\V:j2WCohBJKfNl&M7"Z
%p`U\&\hV>WF/Y<7bhn<D=?[9\kpm.t[&RKE`%VpNPqEG)5:1>i9N)J$@1oS^6<nJJ@I':U#8b%YAmF$X,l`8X2"J>BqSa!Z;5]3p
%1s"ukmh0STS9_fG/0!%fl8+[Y=57,D-:n)I$4$p^mBn&]Y@0!M-t_.mhW>S$,)+N+XldJ'b6t+J:9t>Q^da[<?BT8&ndre"Wq.@8
%7]Vr@02:%k,hY8aF-W\Zb:=g4ptR4$7<Bk>.?YgBYXi>DO=AhZgrHmneBnG!%EXdWZ7n.$?&3!(\4B#[D.C/8m+,#\'h;0.D(hAQ
%+Y7k)!t7A+VX)XbSnD7Xdf\hu>M9%/dOQN=Th@tBr(@/BU>DU(@(23A,Zj+&]CD9M5bk`I48=%bZt,t"dAO+H5E#L]+l73-SEODQ
%%rTF-n=Om:RK&59'>%qJ2bZfJSh-dJFUL([kIa\tZ_7IW^e2Xh4f7f[KVE-i)D-asQfKRK2BJIV8hd;a5ZRI5"fFL2]3)BMM3RAF
%W2CN'aDCb)c1GRN_CT"t@>X??39G.EmsAYQ?WB^--SGg/b:1!sZ,QR!DF<FP[,m$(,)t--,V%aG1uX5?L/dRl[^-Yb)2i$dJ*0T^
%3AqDCNcX4Jgp:A>KZ(eV&gA.-@]G*IUeP@`E]&pj"aqOK18V]l;lFNQFk2m-/^DV-4;!1q9J,4<VV)#ZUNMDi9[,p#l[7MZJqY;G
%2<XXT_jhXX;VnX>4+np$Ud`W`:#egA%\G>"Nis7'TV]bZ`CI[N2k'(lZVsV2ZfQFs`g83n9uNGV!/8?j?BJgK^Mr"J58pf&AKXH;
%VX"g_ZUiEd*Pk:j=;:7e2MM<@d7[0ECN<'>O\@#mfKtqJcLdm)]R3+*'80=0F#_q3SFF8Pb?FC3'J*t)@)pB-m5nB^0YT15@9K>M
%qt6,MhH]nV"U<I!AtD)Nl*2&.oKOZqmYM\OKH[f:XF7b8LZY/(4g?:@Fi=VTGQ$Ueo<<YD,GbV"-$-8545#9:"5TMGgoI:e]m&AS
%MLkg*R[af7i@bu//5QM<H#/OipqY2cd>lb&Pi>U^c86$"M(hT9kToTWRP8ua7\qLMG;QFs9umERngD#B3r"fiA\?IY>p*RS(O77m
%G`2QWN9HrfAgA2.VC#"!nhY4Uk]G4i2mi)`-&2)eViVGVb1I>4Z+U#3A^ro^M43RT5`]j\8?RdgmImOfNaMD`qd-B%7c']EWtoOr
%UbVmjU=^;W&NW%6K.n1T".*jjacbg`$B?_.V:!cc\uDD:;ma.OXqRZ+kRBp@+k',u_mNWYAeF0Omap'--rgPV`]tV(\VG-Nl(`/L
%Il*(`bD&1`82&7c1+VPPr0E9%l8(WGVj+6C0<Q\@l@H>5T":QY4/tOHhLj`4_ZJA=!0aF,FuEK^lBrNT!(4[N;h,u,_ucF![tght
%Ea#8ZJs(YJo30'\$]R"F'Gi&Ad)pWR$Vb<"$FLGP_R^sDEbSH.i^J.Z:gk,17@N^E;Sm*ikpWftX:@HXpt__kS\FKT_=u.(fp4NP
%G55'HGGt&qR)[@3jZm&ug:L'X&4I^l(GX`fQ<,AaK"5jG3Nr]C1bVkjF4`HqMYT(^_98\gEAeKAp89qjAgaT_oM[61]poKpEuo'\
%c!HdE9[4"e0WGJ&n;36iWG,]*_VQ;=0X_kg:fIHWWh@"r^?_QCm'3j8H(:.A:+sG8XOIc'<5I@%Bj!@=iJPg)k];V*)'`:DS\e&*
%0#?SL)(/'.F39si9m0rp-Wcc!''C9+).d'tk2SW#:HM"C_rjq3&!Ht4/92,3V"SAu/YAkcCnnO>88M;nLZXc71Z[o1>Djtq`mr2S
%5!"t]dS%,5>@`"j/mHg$B%hke^2i^SDJ62q]-[%Nj#hO5#*XT\PCCCpeJQI>dNg!o`r8#^h*jJRJ?[Nq,8_3j(UB71=-u_g9/d[8
%Gk:o$:*J^+Cr8oj^[_"=g,W,SX+6-Cr8\;c13%GnW+5I1-CuuM05HZTD?;Ntk#oJ9#[H(W(Rum>7>IZIT];DSpeD_#R<U[2)m_f+
%P2)BPMPMWRkJr2i-:4$tGJ;W")uDL,f\)N_q&<=H8s1M!JjJ'p_s=<1S&R*E)<TaR`b92L]e<H@JJUc"D.C^g[[pf*7W)7j!Um'i
%nB4/K8eEM-6_3o>G''3qa]F2m;GRiOhhcZ')4d1OC;q2p)b%7d:-A>0^-Sp-Q&$4"3S\9)[?j#Ojr$r98jf$NR&s^47=87USMMbD
%q+:VY#3LQ=jCn]P/+ac.,t`f<pT#O'Dn5Y'h4s[Xn,Z/`.3%[TZ)-ZXjO=?g$[7]t%@W3T"1g\pmd-;^fdIm_,dF--)'6_?*/QnP
%M%<VjBG>;K8ga,OgN%OF`N7kSK623=gj=<m\_5u:&6R'*0>.&(-21FDM5k5qFbLneK-*p@Zb-;0%*s'nheX]d(/c2fXkRKjE/&+:
%[h;_tA"pg\iJ6!1i?fMq]5>XceD%YF<U;<q(I-\Ld0f(j\&TO4l"98V[L3U!Z/+j?D4gAd^KPhO"\0F("XH/D6Ibukaj-QN]fo^s
%HJ45?Q"ipXf4NaYI$OEG;,d<n"c4(&;OJ4Dc''GPT1Nr,dAZXI('A3q_%%ZuMa2Pc('\M\RGMqGjsZ'R/hmNVbg]c0Hr]PN"c)!G
%e^^-'[_5Q@ImFi-b$M&Ek2eSRBent7QNG%%1XHs,^!!l\-okmc&E,B)6qLrg`aB1L/$Ac2Q3.^j;O8c\0D5&nRj?/,^!O5:X2Iq9
%!**_?8OD5kIs'=r[R?tH\'s5@PNt=m?D0r#PtMV%jJb))4r"Uh(a:qkik@(4-]$u9r`I^?8(P]oqTWgNbmUR4GR^N08TZ(-Sm-GU
%johD53_mb6`cMP3YgIRoj'`/[Z*B$bB3+:Q`1b\fh`;c*S#<BCfOhBqTf?J,KndH]Z6O):L"W#[khjaI9dS(j>Vu2(8HMs)CQ-q[
%VB31HK$bsL-DlcYJ8Dn38F3t?V*J*b40m`l'koFcW0rcZ^WsW=k9fLpm6'!(,]\4&jAr]#4<W!Np(MYK9J1RB@b[U2lsuBp`'&^k
%30!;-=Oljfq!AQa/.sFt%hGVpP7m"K_@F.?N&p@Q4.#i@+9-^%qu2\+"O4d<*h<f[\&W!&i;.cS1CeJF3e`&3`Q*(MfWs@O;`=oJ
%+!TQh$QVm40nZ*qA*Gd]n81+,qjn^2_]P0sU;*"BOrkUY0afN]*H8Dl_ucE%faHnu*cRa="VssI#31r8-JCUGY&fVgYX><r/l'9g
%U2i<[80rs>N'2]tZVN<jJk]3^j5@+_O9e*i=1e?ni0>b2f`n`K[mu'W;+Y>EX4mR9GZC4q+,>X<TK/BDs6W5+EShe3oC]P)*2_Y9
%#+qi-34K'NeZ'7p,rYf%]&AdN8&I3:6?i/pX1I)^H@5C.lQbjN]t(iS[Pn`SG5"jX2u\7GJnG+k[//]EH3<>u#'a:/btiDP4_'#7
%jue"1-iPilB??Q%0583bp\P-7RHLe\fRS=?AoG6]pDI=RKg]&*(ZjaubK*ja=D;c96;\I3\gF`7@orY--joLIOIWH+XBLJ6m6VXS
%'FW]6[mBVr\"4kQU?Ps[lg4Uo6su@+o\9c/H8=&4^r(l\CE.59o"M;;FPKN;.UK$O'>[@!:]AVg==U%X7r'0-B&RH*.#HaBQBgmP
%M`d*<g8<b#Q#FJjlrKC/EFPJglU<>[I<!1k'kO:Fgpoi[UYG"8i7]YUo8<L=^%PVu/?MUPDh1JHZt%U9aa;Cu5^qk_*^A%P4k+-H
%D+fok,tR*RL0"'Tm[s*8l]i_r:0:]c'`j2"$A?)]=4Jlu-%Dm*][-2j^F&E9nihpZTaHO^kM@lN7sMLBGKE2Sg68/Z06lX(L!M#j
%<0ocr^Vk+p&+aEe][uX.+i1NZPg\mQ:q1>*8,UsrMS24&#M'9tp%mkj'NJ-J#O8/\Qda51AGT5!EZGV1!nILp__6k+0>6`p6&n0d
%i-9g:HSo4;a`4mKL/SBHITsBr0PUQK^@^77Q[@46FLad1O9@pkM)bN[^mK7Z,a&E&Y'%"d%XDh:"l=R!&ch.U/BsU9K>TXKZqDp)
%l(`!JX$"@'o2hKbAG=iPh4"$J)(OJc@X^i\@/`W&;f,DGXkr$7-fX=$ZZ#T<?F;R:dj?!6QX@l(,!Am8/5l:BounNr,hMh4Qc2%#
%lb/P(aEuI7+<AL"nEUuajklVUb3LC.E6+up?Tu&D;.N!+Gm`sFGrE:9QXs'V%4(PSSlDT<#6#C36nRi'MN;]MF\X%Mb);b[R[iNV
%0Nu]df4[Mm4=L2"m:)P:6\O"U2Oiam::;dDM,6?",r"WL?Y#8@.hOS%q84fbdba3VPbuTq"9!EOKq1qHTE]P0rNSW]/oH8n,?`S<
%H%jPKah[G4C@uqR%9-rY%CgbgpLMhQ8;l3$_`A7I2"f'INmhr3/Vp)>JOC[9OJrbaOk)BX$^@SE43]RSlt+<p&%#C-QBQ$K@MpFZ
%Sb_YqK/hZ3G0%st#u*,tgt]X1YrA"5[O`r>#7?`\Xk/OF^#H"l@E"1hK63nh_bI:%$*@0bktT+kRClG%BJgGK#D2Y]`\kpp=n>Xi
%9CUq7&H=g&PUp:4d6lXWS5>9;^`4"^!F#4XI,uOeK^gR>UM1;qdL@rX.DeqR9.E[T;tREo'e9;Bc._d_>bpu@QD2tdn'W._4WeZ<
%&Q:ih?8*dUoQ7egj^WS=8GpMhUa/..f:?QYld'%ElYh<im^WbEWN@^m"i;Xj]fTU)fRp,V(?KG6q+RVa')L<.DTJrDrhr5%G8Y,@
%hQ_[lMP1q]gF,\T1``a;XVOiN$rX'YC=2<00<S6NlJ3sUZVH8jObH(MDqT][k=qbr0q`lo'2!@r)J?]IO[->K[B]%_e=9(X<KP<J
%!.-4nRk(0hO^!m0RL6R>/<cABrdVOk:N_GS]tbY#<jmX"^(:mshF\t0WQ5=0f20uG`eM.(S</aa,^;Y19D]KJooaN#rR,I0Mo(nK
%2u%j1Dce/<J.(Q>Q[Xmc,0S7e".QIK.m\k0OnJh$-(o8M"qh:t+j'Q&ID0T\p7+$92LD'iC8'+7H_fVs:&H11m-4E(>]AS96sTS[
%o$/X.Z00f':bo.PR11AEFH#3I6jf_kV(LHY#\*Og)^62plijH%bGn\($o*/e_X'eD=X/:,.a^[:2UYcnH4>RZBHSFreq)%#KQn=,
%^=:fB.rm]h!MOtp/u)VaJRHJ?C5N.f)FclndqkT>M/ZC7J5Gu7km0CBH-t8I?W=\erBr3n.l'-')LVUpbKr1JMHsY^KZi_41_d+P
%F)q>.2#V/GYrj@q7Uch3r"Fr@+eo.V8>XLL=@$=\IlTK]MS@)V)1-%bXZlfd.>CpYBC,D=TH:WCZ(Kl?W,j904[e63T#F4nOF;jl
%M?h'L;!dG#dp*:dMAOg=Qa7KPn^!<HI;]c^G2o&"DL?:N7Q&rrHeChUI$Di^:jnc@Rgl.,a#"K+bE-R1NUXH0?F&W4E'$YN`@/E+
%"<.JH']bTXQsW6AS-:aZeDDcoj!gOn9-Y>8SX'=dgC5H$Qf84*q1T<d@DcbDZ`K3oCj"[iOs(rl5nG-KmC1rOZmq;:6BMVk#VIiO
%(#-ild".<i.mULKiN:O_7<mNH%S7&)_pAF_U<f?H796M+(0e!#$-h+V3]lPl"Z8@kkmG'>-[-:[1/*$hh$,!`4^@PNodtu&)k0#:
%iaVXX-'rDg=!unsK#8q'rHd*D7<[j(qh1^gZE`+=T*5=0=>rej7&<<gE-eLSRrfKQo#W5(kcQi\h";R`g3d&9mb,V'2uDV!f->*/
%4t<CZ%<A5HJ98^kX;6*eoSsDXPZdZB)Vls_P\\Yas)nt%4?H'i%TUuViA]Q-jdepDr=L1;N(Dt8+3P_:h%+i9mf6?E(NsI)pFYOo
%HpfrG1_f+Zf[+cnG=UlnI_1B:ZZ%s\Ns,QUNk[JUG<M0anNd$F-ia%TYOB4$r?!BcaoJ%MI=:PQ4t?F*N;3i7*T0FV?_9'gjeW(W
%K1''R]plB.cgai+eT!\8KilHLZ/;>'/'Mg@Gq_p=^Rm?.W$lq03qfTQ[a8'tab8bTUA#1U<AZ)g==+9^r1gKP-*b-(Y.ZoD#P[n_
%bO47F48Si\jAL*!%I/IE7&Y;HcJjKs/,B9g_>[4l'F/'!T"lVXl0$TWRQ[I^6ZQaOO")r(G<:\Q#G#tGkH<2/UG8q8#H+gYH0g$P
%FGA]t3'?7=>">nhkHK0>>@6gBgq8,QU+_mCH@WGOIu5V"Di,pRRlS\Ue$4oUR@<lJ(kQDu%K"lpYM.kuG='>K]V<GF]V<$+>9@ko
%XeXREF4gBEc'LLJ2_UTY#\/"A-31SsO8!727?;)+7<]DX\o8g2Gn6=R\a&<IBRkhPJ%Gi=hgU/)o)<<QN\Q\oetrW::VCaKf\c]7
%3XfPSXs;fZD1/UO=a>70+6#l%a-lGA;(!Lm0,$c"&?-,u"3Wc)rnsMXe2Q,G-g`<`c.330.4mCB[-GgLqQ<f\U0eDtLe&h!\p$K.
%kfbq)^$\`i(2=R%SHol75j][b2lAHM6`E!]@HK4\.,OLT$&hVk&_<8bF#87-p1WM;H3`0;($pYj]Ikm'D@bDf)NC6&)nM(-mMMLu
%\9l:X&SL7rZUXgpU]%:A^)`2VTbA[YaCX%X`:`-MlL13=BGKQl=#n?G]Qe#gICI-"$LJ_oqMb/%?0sH!9CL0_i8sfOTbXA*Hm?n>
%LY&cQmj".F(&d'hdaAZ!asIp)cI658g:f^<pTGRgS>-O!!a/jah<Zp&#M+Yko)<<INdUo.mo3#n@K9^%`P^MmTlh3!FH1QhZh[Ls
%1\).fCV*5k<-,T7Y:FoUY:I,P0"P+:0cr\l1R;uu?5;3>k-j(TJ)bu]*B9KfLQ3_3U"r\MG<Uc4+mdT:f%n%%$_>S_9BL=CZY8;r
%,o=G38R9`=8R90g>iiqmPP3H1'3Mq4VaKfRq`2W87U"Yd<[[P=BRhW0_,5@8g\op>,kh0mNhCMG)gE4kG.5AYS^,Do/$>d>)UrJP
%GT$;m_7LG\C!.(Dg][)Y._UmS#C<OBCu1J^Y;?b?7-"*b427K3p6suZ"%c-Qk3**o8VBW@.VU-\6aoR<?;^Mt@<GUdhA,.t;$:Cp
%1\QWZi\&aj?&*iPN6_1P4_%7(klh!ZC,nLoWh20!:TLHIT=4=Pqb^F/U!d<W^.;OhUn*Ytq"FA\0q;9%OelGKQF42'pRJ\u/W&Yg
%dXR0)kO$^0ZT!-ZPi3#"hN.ECO=I*0lKYjJ$$:[Y*NE"SHPAC]SMT9XUHj`]]-Z;<n(09.6?P6F%V82kC3MUsN(snsmBJ26rb.*<
%qSCS9dN6AcUK2X*,Bgj\Os<dJhVDppY;=XJJS+YVT0qkMSmK+"QPD[_*%SUmAa#J$\HeOOEUl->./)kO:p'u\i-lP;kkKM+kjeCL
%dG7LBBC(^s/4ZAQ]XuelAnNIQ&+W$-Q>CSKdhX4X<oMm?RHV<p1==o?f1$^3Hk/!_3SaKSjIIkqgOBe)Co%%(R)o0b&N\!0#*f"1
%#LW``nU0B7"*W%/,Y+dDH$?aj`D5UX@bpt;hp9Ki.1+&7;.X+BdaT4GQmB6]^#SYf(9%W-WnJ=LM):">pD*?6gB![ee6UEFF1[;6
%k<WA^i'_A.&/atjhn,&+M65H2b=46`-'trF(%KYNboFhn`GX4pGGI8B4L$2PnF&!1_n4i4(KaaBfcfqd]0X#:C?/t"-j=s4.8BaD
%;+%[^kY.:$6odPtLN%Q:\jKa;a;B&9Q]W)k1ccs"JI=J[]8;7^hVRpIl6"+W1;37I#.([,?W2S\KtQr<e0+<C!f8qfc<Piu,l>Ih
%f/82@EePLMfo*K6h"PtV3TuV&hHY$WlV7i1FBJ\$Zh&gpB>=K"J,SBa^ANcDIdu_cEo6oaG@,apjjb0^q$hQCo&&h12Uc%4me:)g
%p<0MorU6ri",%a:Idh!"p=$eV:Oi3gruZnjDO^~>
%AI9_PrivateDataEnd
